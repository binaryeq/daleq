
// Inline $values() method in enumerations
// see also Schott et al: Java Bytecode Normalization for Code Similarity Analysis. ECOOP'24. Pattern N9.

// (1) removal
.decl IS_ENUM_VALUE_SYNTH_METHOD(factid: symbol,id: symbol)
// @auxiliary-predicate
IS_ENUM_VALUE_SYNTH_METHOD(cat("R_SKIP_VALUES_SYNTH_METHOD_IN_ENUMS","[",factid1,",",factid2,",",factid3,"]"),id) :- METHOD(factid1,id,classname,name,descriptor),IDB_IS_ENUM(factid2,classname),IDB_IS_SYNTHETIC(factid3,id),name="$values".
// .output IS_ENUM_VALUE_SYNTH_METHOD
REMOVED_METHOD(cat("R_SKIP_VALUES_SYNTH_METHOD_IN_ENUMS","[",factid1,"]"),methodid) :- IS_ENUM_VALUE_SYNTH_METHOD(factid1,methodid).

// (2) move instructions *****************************************
// @auxiliary-predicate
.decl IS_ENUM_STATIC_BLOCK(factid: symbol,id: symbol)
IS_ENUM_STATIC_BLOCK(cat("R_IS_ENUM_STATIC_BLOCK","[",factid1,",",factid2,"]"),id) :- METHOD(factid1,id,classname,name,descriptor),IDB_IS_ENUM(factid2,classname),name="<clinit>",descriptor="()V".

MOVED_INSTRUCTION("TODO_MVD_INSTR",sourceMethodid,sourceInstructionCounter,destMethodId,destInstructionCounter,instructionName) :-
   IS_ENUM_VALUE_SYNTH_METHOD(factid1,sourceMethodid),
   IS_ENUM_STATIC_BLOCK(factid2,destMethodId),
   INVOKESTATIC(factid3,destMethodId,destInstructionCounter,owner,name,desc,itf),
   IDB_INSTRUCTION(factid4,sourceMethodid,sourceInstructionCounter,instructionName),
   !instructionName="ARETURN".

// remove invocation of now inlined method
REMOVED_INSTRUCTION("TODO_RMVD_INSTR",methodid,instructioncounter) :-
    IS_ENUM_STATIC_BLOCK(factid1,methodid),
    INVOKESTATIC(factid2,methodid,instructioncounter,owner,name,desc,itf),
    name="$values".


// (2) move instructions *****************************************

// Remove Redundant Checkcasts
// see also Schott et al: Java Bytecode Normalization for Code Similarity Analysis. ECOOP'24. Pattern N9.

REMOVED_INSTRUCTION(cat("R_REMOVE_REDUNDANT_CHECKCAST","[",factid1,",",factid2,"]"),methodid,instructioncounter) :- CHECKCAST(factid1,methodid,instructioncounter,desc),CHECKCAST(factid2,methodid,instructioncounter-100,desc).

// declaration of removed and moved items

.decl REMOVED_INSTRUCTION(factid: symbol,methodid: symbol,instructioncounter: number)
.output REMOVED_INSTRUCTION

.decl REMOVED_FIELD(factid: symbol,id: symbol)
.output REMOVED_FIELD

.decl REMOVED_METHOD(factid: symbol,id: symbol)
.output REMOVED_METHOD

// Move instructions (predcate can be used to inline methods)
.decl MOVED_INSTRUCTION(factid: symbol, sourcemethodid: symbol,sourceinstructioncounter: number, destmethodid: symbol,destinstructioncounter: number,instructionname: symbol)
.output MOVED_INSTRUCTION


// auxiliary predicate used in standard rules to reprersent any instruction
.decl IDB_INSTRUCTION(factid: symbol,methodid: symbol,instructioncounter: number,instructionName: symbol)

// standard rules
// @generated io.github.bineq.daleq.idb.rulegeneration.BaselineRuleGeneration

.decl IDB_SUPERCLASS(factid: symbol,name: symbol,supername: symbol)
IDB_SUPERCLASS(cat("R_SUPERCLASS","[",factid,"]"),name,supername) :- SUPERCLASS(factid,name,supername).
.output IDB_SUPERCLASS

.decl IDB_INTERFACE(factid: symbol,name: symbol,interface: symbol)
IDB_INTERFACE(cat("R_INTERFACE","[",factid,"]"),name,interface) :- INTERFACE(factid,name,interface).
.output IDB_INTERFACE

.decl IDB_FIELD(factid: symbol,id: symbol,classname: symbol,name: symbol,descriptor: symbol)
IDB_FIELD(cat("R_FIELD","[",factid,"]"),id,classname,name,descriptor) :- FIELD(factid,id,classname,name,descriptor),!REMOVED_FIELD(_,id).
.output IDB_FIELD

.decl IDB_METHOD(factid: symbol,id: symbol,classname: symbol,name: symbol,descriptor: symbol)
IDB_METHOD(cat("R_METHOD","[",factid,"]"),id,classname,name,descriptor) :- METHOD(factid,id,classname,name,descriptor),!REMOVED_METHOD(_,id).
.output IDB_METHOD

.decl IDB_VERSION(factid: symbol,classname: symbol,version: number)
IDB_VERSION(cat("R_VERSION","[",factid,"]"),classname,version) :- VERSION(factid,classname,version).
.output IDB_VERSION

.decl IDB_CLASS_SIGNATURE(factid: symbol,classname: symbol,signature: symbol)
IDB_CLASS_SIGNATURE(cat("R_CLASS_SIGNATURE","[",factid,"]"),classname,signature) :- CLASS_SIGNATURE(factid,classname,signature).
.output IDB_CLASS_SIGNATURE

.decl IDB_FIELD_SIGNATURE(factid: symbol,fieldid: symbol,signature: symbol)
IDB_FIELD_SIGNATURE(cat("R_FIELD_SIGNATURE","[",factid,"]"),fieldid,signature) :- FIELD_SIGNATURE(factid,fieldid,signature).
.output IDB_FIELD_SIGNATURE

.decl IDB_METHOD_SIGNATURE(factid: symbol,methodid: symbol,signature: symbol)
IDB_METHOD_SIGNATURE(cat("R_METHOD_SIGNATURE","[",factid,"]"),methodid,signature) :- METHOD_SIGNATURE(factid,methodid,signature).
.output IDB_METHOD_SIGNATURE

.decl IDB_ACCESS(factid: symbol,id: symbol,access: number)
IDB_ACCESS(cat("R_ACCESS","[",factid,"]"),id,access) :- ACCESS(factid,id,access).
.output IDB_ACCESS

.decl IDB_LABEL(factid: symbol,methodid: symbol,instructioncounter: number,labelid: symbol)
IDB_LABEL(cat("R_LABEL","[",factid,"]"),methodid,instructioncounter,labelid) :- LABEL(factid,methodid,instructioncounter,labelid),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_LABEL
IDB_INSTRUCTION(cat("R_LABEL","[",factid,"]"),methodid,instructioncounter,"LABEL") :- LABEL(factid,methodid,instructioncounter,labelid).

.decl IDB_ACONST_NULL(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_ACONST_NULL(cat("R_ACONST_NULL","[",factid,"]"),methodid,instructioncounter) :- ACONST_NULL(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_ACONST_NULL
IDB_INSTRUCTION(cat("R_ACONST_NULL","[",factid,"]"),methodid,instructioncounter,"ACONST_NULL") :- ACONST_NULL(factid,methodid,instructioncounter).

.decl IDB_ICONST_M1(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_ICONST_M1(cat("R_ICONST_M1","[",factid,"]"),methodid,instructioncounter) :- ICONST_M1(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_ICONST_M1
IDB_INSTRUCTION(cat("R_ICONST_M1","[",factid,"]"),methodid,instructioncounter,"ICONST_M1") :- ICONST_M1(factid,methodid,instructioncounter).

.decl IDB_ICONST_0(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_ICONST_0(cat("R_ICONST_0","[",factid,"]"),methodid,instructioncounter) :- ICONST_0(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_ICONST_0
IDB_INSTRUCTION(cat("R_ICONST_0","[",factid,"]"),methodid,instructioncounter,"ICONST_0") :- ICONST_0(factid,methodid,instructioncounter).

.decl IDB_ICONST_1(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_ICONST_1(cat("R_ICONST_1","[",factid,"]"),methodid,instructioncounter) :- ICONST_1(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_ICONST_1
IDB_INSTRUCTION(cat("R_ICONST_1","[",factid,"]"),methodid,instructioncounter,"ICONST_1") :- ICONST_1(factid,methodid,instructioncounter).

.decl IDB_ICONST_2(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_ICONST_2(cat("R_ICONST_2","[",factid,"]"),methodid,instructioncounter) :- ICONST_2(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_ICONST_2
IDB_INSTRUCTION(cat("R_ICONST_2","[",factid,"]"),methodid,instructioncounter,"ICONST_2") :- ICONST_2(factid,methodid,instructioncounter).

.decl IDB_ICONST_3(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_ICONST_3(cat("R_ICONST_3","[",factid,"]"),methodid,instructioncounter) :- ICONST_3(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_ICONST_3
IDB_INSTRUCTION(cat("R_ICONST_3","[",factid,"]"),methodid,instructioncounter,"ICONST_3") :- ICONST_3(factid,methodid,instructioncounter).

.decl IDB_ICONST_4(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_ICONST_4(cat("R_ICONST_4","[",factid,"]"),methodid,instructioncounter) :- ICONST_4(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_ICONST_4
IDB_INSTRUCTION(cat("R_ICONST_4","[",factid,"]"),methodid,instructioncounter,"ICONST_4") :- ICONST_4(factid,methodid,instructioncounter).

.decl IDB_ICONST_5(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_ICONST_5(cat("R_ICONST_5","[",factid,"]"),methodid,instructioncounter) :- ICONST_5(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_ICONST_5
IDB_INSTRUCTION(cat("R_ICONST_5","[",factid,"]"),methodid,instructioncounter,"ICONST_5") :- ICONST_5(factid,methodid,instructioncounter).

.decl IDB_LCONST_0(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_LCONST_0(cat("R_LCONST_0","[",factid,"]"),methodid,instructioncounter) :- LCONST_0(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_LCONST_0
IDB_INSTRUCTION(cat("R_LCONST_0","[",factid,"]"),methodid,instructioncounter,"LCONST_0") :- LCONST_0(factid,methodid,instructioncounter).

.decl IDB_LCONST_1(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_LCONST_1(cat("R_LCONST_1","[",factid,"]"),methodid,instructioncounter) :- LCONST_1(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_LCONST_1
IDB_INSTRUCTION(cat("R_LCONST_1","[",factid,"]"),methodid,instructioncounter,"LCONST_1") :- LCONST_1(factid,methodid,instructioncounter).

.decl IDB_BIPUSH(factid: symbol,methodid: symbol,instructioncounter: number,operand: number)
IDB_BIPUSH(cat("R_BIPUSH","[",factid,"]"),methodid,instructioncounter,operand) :- BIPUSH(factid,methodid,instructioncounter,operand),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_BIPUSH
IDB_INSTRUCTION(cat("R_BIPUSH","[",factid,"]"),methodid,instructioncounter,"BIPUSH") :- BIPUSH(factid,methodid,instructioncounter,operand).

.decl IDB_SIPUSH(factid: symbol,methodid: symbol,instructioncounter: number,operand: number)
IDB_SIPUSH(cat("R_SIPUSH","[",factid,"]"),methodid,instructioncounter,operand) :- SIPUSH(factid,methodid,instructioncounter,operand),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_SIPUSH
IDB_INSTRUCTION(cat("R_SIPUSH","[",factid,"]"),methodid,instructioncounter,"SIPUSH") :- SIPUSH(factid,methodid,instructioncounter,operand).

.decl IDB_LDC(factid: symbol,methodid: symbol,instructioncounter: number,cst: symbol)
IDB_LDC(cat("R_LDC","[",factid,"]"),methodid,instructioncounter,cst) :- LDC(factid,methodid,instructioncounter,cst),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_LDC
IDB_INSTRUCTION(cat("R_LDC","[",factid,"]"),methodid,instructioncounter,"LDC") :- LDC(factid,methodid,instructioncounter,cst).

.decl IDB_ILOAD(factid: symbol,methodid: symbol,instructioncounter: number,var: number)
IDB_ILOAD(cat("R_ILOAD","[",factid,"]"),methodid,instructioncounter,var) :- ILOAD(factid,methodid,instructioncounter,var),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_ILOAD
IDB_INSTRUCTION(cat("R_ILOAD","[",factid,"]"),methodid,instructioncounter,"ILOAD") :- ILOAD(factid,methodid,instructioncounter,var).

.decl IDB_LLOAD(factid: symbol,methodid: symbol,instructioncounter: number,var: number)
IDB_LLOAD(cat("R_LLOAD","[",factid,"]"),methodid,instructioncounter,var) :- LLOAD(factid,methodid,instructioncounter,var),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_LLOAD
IDB_INSTRUCTION(cat("R_LLOAD","[",factid,"]"),methodid,instructioncounter,"LLOAD") :- LLOAD(factid,methodid,instructioncounter,var).

.decl IDB_ALOAD(factid: symbol,methodid: symbol,instructioncounter: number,var: number)
IDB_ALOAD(cat("R_ALOAD","[",factid,"]"),methodid,instructioncounter,var) :- ALOAD(factid,methodid,instructioncounter,var),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_ALOAD
IDB_INSTRUCTION(cat("R_ALOAD","[",factid,"]"),methodid,instructioncounter,"ALOAD") :- ALOAD(factid,methodid,instructioncounter,var).

.decl IDB_IALOAD(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_IALOAD(cat("R_IALOAD","[",factid,"]"),methodid,instructioncounter) :- IALOAD(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_IALOAD
IDB_INSTRUCTION(cat("R_IALOAD","[",factid,"]"),methodid,instructioncounter,"IALOAD") :- IALOAD(factid,methodid,instructioncounter).

.decl IDB_AALOAD(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_AALOAD(cat("R_AALOAD","[",factid,"]"),methodid,instructioncounter) :- AALOAD(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_AALOAD
IDB_INSTRUCTION(cat("R_AALOAD","[",factid,"]"),methodid,instructioncounter,"AALOAD") :- AALOAD(factid,methodid,instructioncounter).

.decl IDB_CALOAD(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_CALOAD(cat("R_CALOAD","[",factid,"]"),methodid,instructioncounter) :- CALOAD(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_CALOAD
IDB_INSTRUCTION(cat("R_CALOAD","[",factid,"]"),methodid,instructioncounter,"CALOAD") :- CALOAD(factid,methodid,instructioncounter).

.decl IDB_ISTORE(factid: symbol,methodid: symbol,instructioncounter: number,var: number)
IDB_ISTORE(cat("R_ISTORE","[",factid,"]"),methodid,instructioncounter,var) :- ISTORE(factid,methodid,instructioncounter,var),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_ISTORE
IDB_INSTRUCTION(cat("R_ISTORE","[",factid,"]"),methodid,instructioncounter,"ISTORE") :- ISTORE(factid,methodid,instructioncounter,var).

.decl IDB_ASTORE(factid: symbol,methodid: symbol,instructioncounter: number,var: number)
IDB_ASTORE(cat("R_ASTORE","[",factid,"]"),methodid,instructioncounter,var) :- ASTORE(factid,methodid,instructioncounter,var),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_ASTORE
IDB_INSTRUCTION(cat("R_ASTORE","[",factid,"]"),methodid,instructioncounter,"ASTORE") :- ASTORE(factid,methodid,instructioncounter,var).

.decl IDB_IASTORE(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_IASTORE(cat("R_IASTORE","[",factid,"]"),methodid,instructioncounter) :- IASTORE(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_IASTORE
IDB_INSTRUCTION(cat("R_IASTORE","[",factid,"]"),methodid,instructioncounter,"IASTORE") :- IASTORE(factid,methodid,instructioncounter).

.decl IDB_AASTORE(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_AASTORE(cat("R_AASTORE","[",factid,"]"),methodid,instructioncounter) :- AASTORE(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_AASTORE
IDB_INSTRUCTION(cat("R_AASTORE","[",factid,"]"),methodid,instructioncounter,"AASTORE") :- AASTORE(factid,methodid,instructioncounter).

.decl IDB_CASTORE(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_CASTORE(cat("R_CASTORE","[",factid,"]"),methodid,instructioncounter) :- CASTORE(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_CASTORE
IDB_INSTRUCTION(cat("R_CASTORE","[",factid,"]"),methodid,instructioncounter,"CASTORE") :- CASTORE(factid,methodid,instructioncounter).

.decl IDB_POP(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_POP(cat("R_POP","[",factid,"]"),methodid,instructioncounter) :- POP(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_POP
IDB_INSTRUCTION(cat("R_POP","[",factid,"]"),methodid,instructioncounter,"POP") :- POP(factid,methodid,instructioncounter).

.decl IDB_DUP(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_DUP(cat("R_DUP","[",factid,"]"),methodid,instructioncounter) :- DUP(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_DUP
IDB_INSTRUCTION(cat("R_DUP","[",factid,"]"),methodid,instructioncounter,"DUP") :- DUP(factid,methodid,instructioncounter).

.decl IDB_IADD(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_IADD(cat("R_IADD","[",factid,"]"),methodid,instructioncounter) :- IADD(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_IADD
IDB_INSTRUCTION(cat("R_IADD","[",factid,"]"),methodid,instructioncounter,"IADD") :- IADD(factid,methodid,instructioncounter).

.decl IDB_ISUB(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_ISUB(cat("R_ISUB","[",factid,"]"),methodid,instructioncounter) :- ISUB(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_ISUB
IDB_INSTRUCTION(cat("R_ISUB","[",factid,"]"),methodid,instructioncounter,"ISUB") :- ISUB(factid,methodid,instructioncounter).

.decl IDB_IMUL(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_IMUL(cat("R_IMUL","[",factid,"]"),methodid,instructioncounter) :- IMUL(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_IMUL
IDB_INSTRUCTION(cat("R_IMUL","[",factid,"]"),methodid,instructioncounter,"IMUL") :- IMUL(factid,methodid,instructioncounter).

.decl IDB_IDIV(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_IDIV(cat("R_IDIV","[",factid,"]"),methodid,instructioncounter) :- IDIV(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_IDIV
IDB_INSTRUCTION(cat("R_IDIV","[",factid,"]"),methodid,instructioncounter,"IDIV") :- IDIV(factid,methodid,instructioncounter).

.decl IDB_IREM(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_IREM(cat("R_IREM","[",factid,"]"),methodid,instructioncounter) :- IREM(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_IREM
IDB_INSTRUCTION(cat("R_IREM","[",factid,"]"),methodid,instructioncounter,"IREM") :- IREM(factid,methodid,instructioncounter).

.decl IDB_IINC(factid: symbol,methodid: symbol,instructioncounter: number,incr: number,var: number)
IDB_IINC(cat("R_IINC","[",factid,"]"),methodid,instructioncounter,incr,var) :- IINC(factid,methodid,instructioncounter,incr,var),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_IINC
IDB_INSTRUCTION(cat("R_IINC","[",factid,"]"),methodid,instructioncounter,"IINC") :- IINC(factid,methodid,instructioncounter,incr,var).

.decl IDB_I2C(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_I2C(cat("R_I2C","[",factid,"]"),methodid,instructioncounter) :- I2C(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_I2C
IDB_INSTRUCTION(cat("R_I2C","[",factid,"]"),methodid,instructioncounter,"I2C") :- I2C(factid,methodid,instructioncounter).

.decl IDB_IFEQ(factid: symbol,methodid: symbol,instructioncounter: number,label: symbol)
IDB_IFEQ(cat("R_IFEQ","[",factid,"]"),methodid,instructioncounter,label) :- IFEQ(factid,methodid,instructioncounter,label),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_IFEQ
IDB_INSTRUCTION(cat("R_IFEQ","[",factid,"]"),methodid,instructioncounter,"IFEQ") :- IFEQ(factid,methodid,instructioncounter,label).

.decl IDB_IFNE(factid: symbol,methodid: symbol,instructioncounter: number,label: symbol)
IDB_IFNE(cat("R_IFNE","[",factid,"]"),methodid,instructioncounter,label) :- IFNE(factid,methodid,instructioncounter,label),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_IFNE
IDB_INSTRUCTION(cat("R_IFNE","[",factid,"]"),methodid,instructioncounter,"IFNE") :- IFNE(factid,methodid,instructioncounter,label).

.decl IDB_IFLT(factid: symbol,methodid: symbol,instructioncounter: number,label: symbol)
IDB_IFLT(cat("R_IFLT","[",factid,"]"),methodid,instructioncounter,label) :- IFLT(factid,methodid,instructioncounter,label),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_IFLT
IDB_INSTRUCTION(cat("R_IFLT","[",factid,"]"),methodid,instructioncounter,"IFLT") :- IFLT(factid,methodid,instructioncounter,label).

.decl IDB_IFLE(factid: symbol,methodid: symbol,instructioncounter: number,label: symbol)
IDB_IFLE(cat("R_IFLE","[",factid,"]"),methodid,instructioncounter,label) :- IFLE(factid,methodid,instructioncounter,label),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_IFLE
IDB_INSTRUCTION(cat("R_IFLE","[",factid,"]"),methodid,instructioncounter,"IFLE") :- IFLE(factid,methodid,instructioncounter,label).

.decl IDB_IF_ICMPEQ(factid: symbol,methodid: symbol,instructioncounter: number,label: symbol)
IDB_IF_ICMPEQ(cat("R_IF_ICMPEQ","[",factid,"]"),methodid,instructioncounter,label) :- IF_ICMPEQ(factid,methodid,instructioncounter,label),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_IF_ICMPEQ
IDB_INSTRUCTION(cat("R_IF_ICMPEQ","[",factid,"]"),methodid,instructioncounter,"IF_ICMPEQ") :- IF_ICMPEQ(factid,methodid,instructioncounter,label).

.decl IDB_IF_ICMPNE(factid: symbol,methodid: symbol,instructioncounter: number,label: symbol)
IDB_IF_ICMPNE(cat("R_IF_ICMPNE","[",factid,"]"),methodid,instructioncounter,label) :- IF_ICMPNE(factid,methodid,instructioncounter,label),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_IF_ICMPNE
IDB_INSTRUCTION(cat("R_IF_ICMPNE","[",factid,"]"),methodid,instructioncounter,"IF_ICMPNE") :- IF_ICMPNE(factid,methodid,instructioncounter,label).

.decl IDB_IF_ICMPLT(factid: symbol,methodid: symbol,instructioncounter: number,label: symbol)
IDB_IF_ICMPLT(cat("R_IF_ICMPLT","[",factid,"]"),methodid,instructioncounter,label) :- IF_ICMPLT(factid,methodid,instructioncounter,label),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_IF_ICMPLT
IDB_INSTRUCTION(cat("R_IF_ICMPLT","[",factid,"]"),methodid,instructioncounter,"IF_ICMPLT") :- IF_ICMPLT(factid,methodid,instructioncounter,label).

.decl IDB_IF_ICMPGE(factid: symbol,methodid: symbol,instructioncounter: number,label: symbol)
IDB_IF_ICMPGE(cat("R_IF_ICMPGE","[",factid,"]"),methodid,instructioncounter,label) :- IF_ICMPGE(factid,methodid,instructioncounter,label),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_IF_ICMPGE
IDB_INSTRUCTION(cat("R_IF_ICMPGE","[",factid,"]"),methodid,instructioncounter,"IF_ICMPGE") :- IF_ICMPGE(factid,methodid,instructioncounter,label).

.decl IDB_IF_ICMPGT(factid: symbol,methodid: symbol,instructioncounter: number,label: symbol)
IDB_IF_ICMPGT(cat("R_IF_ICMPGT","[",factid,"]"),methodid,instructioncounter,label) :- IF_ICMPGT(factid,methodid,instructioncounter,label),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_IF_ICMPGT
IDB_INSTRUCTION(cat("R_IF_ICMPGT","[",factid,"]"),methodid,instructioncounter,"IF_ICMPGT") :- IF_ICMPGT(factid,methodid,instructioncounter,label).

.decl IDB_IF_ICMPLE(factid: symbol,methodid: symbol,instructioncounter: number,label: symbol)
IDB_IF_ICMPLE(cat("R_IF_ICMPLE","[",factid,"]"),methodid,instructioncounter,label) :- IF_ICMPLE(factid,methodid,instructioncounter,label),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_IF_ICMPLE
IDB_INSTRUCTION(cat("R_IF_ICMPLE","[",factid,"]"),methodid,instructioncounter,"IF_ICMPLE") :- IF_ICMPLE(factid,methodid,instructioncounter,label).

.decl IDB_IF_ACMPEQ(factid: symbol,methodid: symbol,instructioncounter: number,label: symbol)
IDB_IF_ACMPEQ(cat("R_IF_ACMPEQ","[",factid,"]"),methodid,instructioncounter,label) :- IF_ACMPEQ(factid,methodid,instructioncounter,label),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_IF_ACMPEQ
IDB_INSTRUCTION(cat("R_IF_ACMPEQ","[",factid,"]"),methodid,instructioncounter,"IF_ACMPEQ") :- IF_ACMPEQ(factid,methodid,instructioncounter,label).

.decl IDB_IF_ACMPNE(factid: symbol,methodid: symbol,instructioncounter: number,label: symbol)
IDB_IF_ACMPNE(cat("R_IF_ACMPNE","[",factid,"]"),methodid,instructioncounter,label) :- IF_ACMPNE(factid,methodid,instructioncounter,label),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_IF_ACMPNE
IDB_INSTRUCTION(cat("R_IF_ACMPNE","[",factid,"]"),methodid,instructioncounter,"IF_ACMPNE") :- IF_ACMPNE(factid,methodid,instructioncounter,label).

.decl IDB_GOTO(factid: symbol,methodid: symbol,instructioncounter: number,label: symbol)
IDB_GOTO(cat("R_GOTO","[",factid,"]"),methodid,instructioncounter,label) :- GOTO(factid,methodid,instructioncounter,label),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_GOTO
IDB_INSTRUCTION(cat("R_GOTO","[",factid,"]"),methodid,instructioncounter,"GOTO") :- GOTO(factid,methodid,instructioncounter,label).

.decl IDB_TABLESWITCH(factid: symbol,methodid: symbol,instructioncounter: number,dflt: symbol,labels: symbol,max_: number,min_: number)
IDB_TABLESWITCH(cat("R_TABLESWITCH","[",factid,"]"),methodid,instructioncounter,dflt,labels,max_,min_) :- TABLESWITCH(factid,methodid,instructioncounter,dflt,labels,max_,min_),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_TABLESWITCH
IDB_INSTRUCTION(cat("R_TABLESWITCH","[",factid,"]"),methodid,instructioncounter,"TABLESWITCH") :- TABLESWITCH(factid,methodid,instructioncounter,dflt,labels,max_,min_).

.decl IDB_LOOKUPSWITCH(factid: symbol,methodid: symbol,instructioncounter: number,dflt: symbol,keys: symbol,labels: symbol)
IDB_LOOKUPSWITCH(cat("R_LOOKUPSWITCH","[",factid,"]"),methodid,instructioncounter,dflt,keys,labels) :- LOOKUPSWITCH(factid,methodid,instructioncounter,dflt,keys,labels),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_LOOKUPSWITCH
IDB_INSTRUCTION(cat("R_LOOKUPSWITCH","[",factid,"]"),methodid,instructioncounter,"LOOKUPSWITCH") :- LOOKUPSWITCH(factid,methodid,instructioncounter,dflt,keys,labels).

.decl IDB_IRETURN(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_IRETURN(cat("R_IRETURN","[",factid,"]"),methodid,instructioncounter) :- IRETURN(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_IRETURN
IDB_INSTRUCTION(cat("R_IRETURN","[",factid,"]"),methodid,instructioncounter,"IRETURN") :- IRETURN(factid,methodid,instructioncounter).

.decl IDB_ARETURN(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_ARETURN(cat("R_ARETURN","[",factid,"]"),methodid,instructioncounter) :- ARETURN(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_ARETURN
IDB_INSTRUCTION(cat("R_ARETURN","[",factid,"]"),methodid,instructioncounter,"ARETURN") :- ARETURN(factid,methodid,instructioncounter).

.decl IDB_RETURN(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_RETURN(cat("R_RETURN","[",factid,"]"),methodid,instructioncounter) :- RETURN(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_RETURN
IDB_INSTRUCTION(cat("R_RETURN","[",factid,"]"),methodid,instructioncounter,"RETURN") :- RETURN(factid,methodid,instructioncounter).

.decl IDB_GETSTATIC(factid: symbol,methodid: symbol,instructioncounter: number,owner: symbol,name: symbol,desc: symbol)
IDB_GETSTATIC(cat("R_GETSTATIC","[",factid,"]"),methodid,instructioncounter,owner,name,desc) :- GETSTATIC(factid,methodid,instructioncounter,owner,name,desc),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_GETSTATIC
IDB_INSTRUCTION(cat("R_GETSTATIC","[",factid,"]"),methodid,instructioncounter,"GETSTATIC") :- GETSTATIC(factid,methodid,instructioncounter,owner,name,desc).

.decl IDB_PUTSTATIC(factid: symbol,methodid: symbol,instructioncounter: number,owner: symbol,name: symbol,desc: symbol)
IDB_PUTSTATIC(cat("R_PUTSTATIC","[",factid,"]"),methodid,instructioncounter,owner,name,desc) :- PUTSTATIC(factid,methodid,instructioncounter,owner,name,desc),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_PUTSTATIC
IDB_INSTRUCTION(cat("R_PUTSTATIC","[",factid,"]"),methodid,instructioncounter,"PUTSTATIC") :- PUTSTATIC(factid,methodid,instructioncounter,owner,name,desc).

.decl IDB_GETFIELD(factid: symbol,methodid: symbol,instructioncounter: number,owner: symbol,name: symbol,desc: symbol)
IDB_GETFIELD(cat("R_GETFIELD","[",factid,"]"),methodid,instructioncounter,owner,name,desc) :- GETFIELD(factid,methodid,instructioncounter,owner,name,desc),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_GETFIELD
IDB_INSTRUCTION(cat("R_GETFIELD","[",factid,"]"),methodid,instructioncounter,"GETFIELD") :- GETFIELD(factid,methodid,instructioncounter,owner,name,desc).

.decl IDB_PUTFIELD(factid: symbol,methodid: symbol,instructioncounter: number,owner: symbol,name: symbol,desc: symbol)
IDB_PUTFIELD(cat("R_PUTFIELD","[",factid,"]"),methodid,instructioncounter,owner,name,desc) :- PUTFIELD(factid,methodid,instructioncounter,owner,name,desc),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_PUTFIELD
IDB_INSTRUCTION(cat("R_PUTFIELD","[",factid,"]"),methodid,instructioncounter,"PUTFIELD") :- PUTFIELD(factid,methodid,instructioncounter,owner,name,desc).

.decl IDB_INVOKEVIRTUAL(factid: symbol,methodid: symbol,instructioncounter: number,owner: symbol,name: symbol,desc: symbol,itf: number)
IDB_INVOKEVIRTUAL(cat("R_INVOKEVIRTUAL","[",factid,"]"),methodid,instructioncounter,owner,name,desc,itf) :- INVOKEVIRTUAL(factid,methodid,instructioncounter,owner,name,desc,itf),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_INVOKEVIRTUAL
IDB_INSTRUCTION(cat("R_INVOKEVIRTUAL","[",factid,"]"),methodid,instructioncounter,"INVOKEVIRTUAL") :- INVOKEVIRTUAL(factid,methodid,instructioncounter,owner,name,desc,itf).

.decl IDB_INVOKESPECIAL(factid: symbol,methodid: symbol,instructioncounter: number,owner: symbol,name: symbol,desc: symbol,itf: number)
IDB_INVOKESPECIAL(cat("R_INVOKESPECIAL","[",factid,"]"),methodid,instructioncounter,owner,name,desc,itf) :- INVOKESPECIAL(factid,methodid,instructioncounter,owner,name,desc,itf),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_INVOKESPECIAL
IDB_INSTRUCTION(cat("R_INVOKESPECIAL","[",factid,"]"),methodid,instructioncounter,"INVOKESPECIAL") :- INVOKESPECIAL(factid,methodid,instructioncounter,owner,name,desc,itf).

.decl IDB_INVOKESTATIC(factid: symbol,methodid: symbol,instructioncounter: number,owner: symbol,name: symbol,desc: symbol,itf: number)
IDB_INVOKESTATIC(cat("R_INVOKESTATIC","[",factid,"]"),methodid,instructioncounter,owner,name,desc,itf) :- INVOKESTATIC(factid,methodid,instructioncounter,owner,name,desc,itf),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_INVOKESTATIC
IDB_INSTRUCTION(cat("R_INVOKESTATIC","[",factid,"]"),methodid,instructioncounter,"INVOKESTATIC") :- INVOKESTATIC(factid,methodid,instructioncounter,owner,name,desc,itf).

.decl IDB_INVOKEINTERFACE(factid: symbol,methodid: symbol,instructioncounter: number,owner: symbol,name: symbol,desc: symbol,itf: number)
IDB_INVOKEINTERFACE(cat("R_INVOKEINTERFACE","[",factid,"]"),methodid,instructioncounter,owner,name,desc,itf) :- INVOKEINTERFACE(factid,methodid,instructioncounter,owner,name,desc,itf),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_INVOKEINTERFACE
IDB_INSTRUCTION(cat("R_INVOKEINTERFACE","[",factid,"]"),methodid,instructioncounter,"INVOKEINTERFACE") :- INVOKEINTERFACE(factid,methodid,instructioncounter,owner,name,desc,itf).

.decl IDB_INVOKEDYNAMIC(factid: symbol,methodid: symbol,instructioncounter: number,name: symbol,desc: symbol,bsmArgs: symbol,bsm_getOwner: symbol,bsm_getName: symbol,bsm_getDesc: symbol,bsm_getTag: number,bsm_isInterface: number)
IDB_INVOKEDYNAMIC(cat("R_INVOKEDYNAMIC","[",factid,"]"),methodid,instructioncounter,name,desc,bsmArgs,bsm_getOwner,bsm_getName,bsm_getDesc,bsm_getTag,bsm_isInterface) :- INVOKEDYNAMIC(factid,methodid,instructioncounter,name,desc,bsmArgs,bsm_getOwner,bsm_getName,bsm_getDesc,bsm_getTag,bsm_isInterface),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_INVOKEDYNAMIC
IDB_INSTRUCTION(cat("R_INVOKEDYNAMIC","[",factid,"]"),methodid,instructioncounter,"INVOKEDYNAMIC") :- INVOKEDYNAMIC(factid,methodid,instructioncounter,name,desc,bsmArgs,bsm_getOwner,bsm_getName,bsm_getDesc,bsm_getTag,bsm_isInterface).

.decl IDB_NEW(factid: symbol,methodid: symbol,instructioncounter: number,desc: symbol)
IDB_NEW(cat("R_NEW","[",factid,"]"),methodid,instructioncounter,desc) :- NEW(factid,methodid,instructioncounter,desc),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_NEW
IDB_INSTRUCTION(cat("R_NEW","[",factid,"]"),methodid,instructioncounter,"NEW") :- NEW(factid,methodid,instructioncounter,desc).

.decl IDB_NEWARRAY(factid: symbol,methodid: symbol,instructioncounter: number,operand: number)
IDB_NEWARRAY(cat("R_NEWARRAY","[",factid,"]"),methodid,instructioncounter,operand) :- NEWARRAY(factid,methodid,instructioncounter,operand),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_NEWARRAY
IDB_INSTRUCTION(cat("R_NEWARRAY","[",factid,"]"),methodid,instructioncounter,"NEWARRAY") :- NEWARRAY(factid,methodid,instructioncounter,operand).

.decl IDB_ANEWARRAY(factid: symbol,methodid: symbol,instructioncounter: number,desc: symbol)
IDB_ANEWARRAY(cat("R_ANEWARRAY","[",factid,"]"),methodid,instructioncounter,desc) :- ANEWARRAY(factid,methodid,instructioncounter,desc),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_ANEWARRAY
IDB_INSTRUCTION(cat("R_ANEWARRAY","[",factid,"]"),methodid,instructioncounter,"ANEWARRAY") :- ANEWARRAY(factid,methodid,instructioncounter,desc).

.decl IDB_ARRAYLENGTH(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_ARRAYLENGTH(cat("R_ARRAYLENGTH","[",factid,"]"),methodid,instructioncounter) :- ARRAYLENGTH(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_ARRAYLENGTH
IDB_INSTRUCTION(cat("R_ARRAYLENGTH","[",factid,"]"),methodid,instructioncounter,"ARRAYLENGTH") :- ARRAYLENGTH(factid,methodid,instructioncounter).

.decl IDB_ATHROW(factid: symbol,methodid: symbol,instructioncounter: number)
IDB_ATHROW(cat("R_ATHROW","[",factid,"]"),methodid,instructioncounter) :- ATHROW(factid,methodid,instructioncounter),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_ATHROW
IDB_INSTRUCTION(cat("R_ATHROW","[",factid,"]"),methodid,instructioncounter,"ATHROW") :- ATHROW(factid,methodid,instructioncounter).

.decl IDB_CHECKCAST(factid: symbol,methodid: symbol,instructioncounter: number,desc: symbol)
IDB_CHECKCAST(cat("R_CHECKCAST","[",factid,"]"),methodid,instructioncounter,desc) :- CHECKCAST(factid,methodid,instructioncounter,desc),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_CHECKCAST
IDB_INSTRUCTION(cat("R_CHECKCAST","[",factid,"]"),methodid,instructioncounter,"CHECKCAST") :- CHECKCAST(factid,methodid,instructioncounter,desc).

.decl IDB_INSTANCEOF(factid: symbol,methodid: symbol,instructioncounter: number,desc: symbol)
IDB_INSTANCEOF(cat("R_INSTANCEOF","[",factid,"]"),methodid,instructioncounter,desc) :- INSTANCEOF(factid,methodid,instructioncounter,desc),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_INSTANCEOF
IDB_INSTRUCTION(cat("R_INSTANCEOF","[",factid,"]"),methodid,instructioncounter,"INSTANCEOF") :- INSTANCEOF(factid,methodid,instructioncounter,desc).

.decl IDB_IFNULL(factid: symbol,methodid: symbol,instructioncounter: number,label: symbol)
IDB_IFNULL(cat("R_IFNULL","[",factid,"]"),methodid,instructioncounter,label) :- IFNULL(factid,methodid,instructioncounter,label),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_IFNULL
IDB_INSTRUCTION(cat("R_IFNULL","[",factid,"]"),methodid,instructioncounter,"IFNULL") :- IFNULL(factid,methodid,instructioncounter,label).

.decl IDB_IFNONNULL(factid: symbol,methodid: symbol,instructioncounter: number,label: symbol)
IDB_IFNONNULL(cat("R_IFNONNULL","[",factid,"]"),methodid,instructioncounter,label) :- IFNONNULL(factid,methodid,instructioncounter,label),!REMOVED_INSTRUCTION(_,methodid,instructioncounter).
.output IDB_IFNONNULL
IDB_INSTRUCTION(cat("R_IFNONNULL","[",factid,"]"),methodid,instructioncounter,"IFNONNULL") :- IFNONNULL(factid,methodid,instructioncounter,label).


// rules to move instructions
// @generated io.github.bineq.daleq.idb.rulegeneration.InstructionRelocationRuleGeneration

IDB_LABEL(cat("R_LABEL_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,labelid) :- LABEL(factid1,methodid,instructioncounter,labelid) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"LABEL").

IDB_ACONST_NULL(cat("R_ACONST_NULL_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- ACONST_NULL(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"ACONST_NULL").

IDB_ICONST_M1(cat("R_ICONST_M1_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- ICONST_M1(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"ICONST_M1").

IDB_ICONST_0(cat("R_ICONST_0_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- ICONST_0(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"ICONST_0").

IDB_ICONST_1(cat("R_ICONST_1_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- ICONST_1(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"ICONST_1").

IDB_ICONST_2(cat("R_ICONST_2_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- ICONST_2(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"ICONST_2").

IDB_ICONST_3(cat("R_ICONST_3_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- ICONST_3(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"ICONST_3").

IDB_ICONST_4(cat("R_ICONST_4_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- ICONST_4(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"ICONST_4").

IDB_ICONST_5(cat("R_ICONST_5_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- ICONST_5(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"ICONST_5").

IDB_LCONST_0(cat("R_LCONST_0_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- LCONST_0(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"LCONST_0").

IDB_LCONST_1(cat("R_LCONST_1_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- LCONST_1(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"LCONST_1").

IDB_BIPUSH(cat("R_BIPUSH_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,operand) :- BIPUSH(factid1,methodid,instructioncounter,operand) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"BIPUSH").

IDB_SIPUSH(cat("R_SIPUSH_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,operand) :- SIPUSH(factid1,methodid,instructioncounter,operand) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"SIPUSH").

IDB_LDC(cat("R_LDC_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,cst) :- LDC(factid1,methodid,instructioncounter,cst) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"LDC").

IDB_ILOAD(cat("R_ILOAD_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,var) :- ILOAD(factid1,methodid,instructioncounter,var) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"ILOAD").

IDB_LLOAD(cat("R_LLOAD_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,var) :- LLOAD(factid1,methodid,instructioncounter,var) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"LLOAD").

IDB_ALOAD(cat("R_ALOAD_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,var) :- ALOAD(factid1,methodid,instructioncounter,var) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"ALOAD").

IDB_IALOAD(cat("R_IALOAD_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- IALOAD(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"IALOAD").

IDB_AALOAD(cat("R_AALOAD_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- AALOAD(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"AALOAD").

IDB_CALOAD(cat("R_CALOAD_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- CALOAD(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"CALOAD").

IDB_ISTORE(cat("R_ISTORE_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,var) :- ISTORE(factid1,methodid,instructioncounter,var) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"ISTORE").

IDB_ASTORE(cat("R_ASTORE_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,var) :- ASTORE(factid1,methodid,instructioncounter,var) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"ASTORE").

IDB_IASTORE(cat("R_IASTORE_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- IASTORE(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"IASTORE").

IDB_AASTORE(cat("R_AASTORE_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- AASTORE(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"AASTORE").

IDB_CASTORE(cat("R_CASTORE_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- CASTORE(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"CASTORE").

IDB_POP(cat("R_POP_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- POP(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"POP").

IDB_DUP(cat("R_DUP_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- DUP(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"DUP").

IDB_IADD(cat("R_IADD_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- IADD(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"IADD").

IDB_ISUB(cat("R_ISUB_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- ISUB(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"ISUB").

IDB_IMUL(cat("R_IMUL_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- IMUL(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"IMUL").

IDB_IDIV(cat("R_IDIV_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- IDIV(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"IDIV").

IDB_IREM(cat("R_IREM_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- IREM(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"IREM").

IDB_IINC(cat("R_IINC_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,incr,var) :- IINC(factid1,methodid,instructioncounter,incr,var) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"IINC").

IDB_I2C(cat("R_I2C_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- I2C(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"I2C").

IDB_IFEQ(cat("R_IFEQ_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,label) :- IFEQ(factid1,methodid,instructioncounter,label) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"IFEQ").

IDB_IFNE(cat("R_IFNE_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,label) :- IFNE(factid1,methodid,instructioncounter,label) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"IFNE").

IDB_IFLT(cat("R_IFLT_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,label) :- IFLT(factid1,methodid,instructioncounter,label) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"IFLT").

IDB_IFLE(cat("R_IFLE_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,label) :- IFLE(factid1,methodid,instructioncounter,label) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"IFLE").

IDB_IF_ICMPEQ(cat("R_IF_ICMPEQ_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,label) :- IF_ICMPEQ(factid1,methodid,instructioncounter,label) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"IF_ICMPEQ").

IDB_IF_ICMPNE(cat("R_IF_ICMPNE_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,label) :- IF_ICMPNE(factid1,methodid,instructioncounter,label) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"IF_ICMPNE").

IDB_IF_ICMPLT(cat("R_IF_ICMPLT_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,label) :- IF_ICMPLT(factid1,methodid,instructioncounter,label) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"IF_ICMPLT").

IDB_IF_ICMPGE(cat("R_IF_ICMPGE_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,label) :- IF_ICMPGE(factid1,methodid,instructioncounter,label) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"IF_ICMPGE").

IDB_IF_ICMPGT(cat("R_IF_ICMPGT_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,label) :- IF_ICMPGT(factid1,methodid,instructioncounter,label) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"IF_ICMPGT").

IDB_IF_ICMPLE(cat("R_IF_ICMPLE_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,label) :- IF_ICMPLE(factid1,methodid,instructioncounter,label) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"IF_ICMPLE").

IDB_IF_ACMPEQ(cat("R_IF_ACMPEQ_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,label) :- IF_ACMPEQ(factid1,methodid,instructioncounter,label) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"IF_ACMPEQ").

IDB_IF_ACMPNE(cat("R_IF_ACMPNE_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,label) :- IF_ACMPNE(factid1,methodid,instructioncounter,label) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"IF_ACMPNE").

IDB_GOTO(cat("R_GOTO_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,label) :- GOTO(factid1,methodid,instructioncounter,label) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"GOTO").

IDB_TABLESWITCH(cat("R_TABLESWITCH_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,dflt,labels,max_,min_) :- TABLESWITCH(factid1,methodid,instructioncounter,dflt,labels,max_,min_) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"TABLESWITCH").

IDB_LOOKUPSWITCH(cat("R_LOOKUPSWITCH_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,dflt,keys,labels) :- LOOKUPSWITCH(factid1,methodid,instructioncounter,dflt,keys,labels) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"LOOKUPSWITCH").

IDB_IRETURN(cat("R_IRETURN_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- IRETURN(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"IRETURN").

IDB_ARETURN(cat("R_ARETURN_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- ARETURN(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"ARETURN").

IDB_RETURN(cat("R_RETURN_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- RETURN(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"RETURN").

IDB_GETSTATIC(cat("R_GETSTATIC_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,owner,name,desc) :- GETSTATIC(factid1,methodid,instructioncounter,owner,name,desc) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"GETSTATIC").

IDB_PUTSTATIC(cat("R_PUTSTATIC_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,owner,name,desc) :- PUTSTATIC(factid1,methodid,instructioncounter,owner,name,desc) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"PUTSTATIC").

IDB_GETFIELD(cat("R_GETFIELD_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,owner,name,desc) :- GETFIELD(factid1,methodid,instructioncounter,owner,name,desc) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"GETFIELD").

IDB_PUTFIELD(cat("R_PUTFIELD_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,owner,name,desc) :- PUTFIELD(factid1,methodid,instructioncounter,owner,name,desc) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"PUTFIELD").

IDB_INVOKEVIRTUAL(cat("R_INVOKEVIRTUAL_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,owner,name,desc,itf) :- INVOKEVIRTUAL(factid1,methodid,instructioncounter,owner,name,desc,itf) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"INVOKEVIRTUAL").

IDB_INVOKESPECIAL(cat("R_INVOKESPECIAL_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,owner,name,desc,itf) :- INVOKESPECIAL(factid1,methodid,instructioncounter,owner,name,desc,itf) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"INVOKESPECIAL").

IDB_INVOKESTATIC(cat("R_INVOKESTATIC_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,owner,name,desc,itf) :- INVOKESTATIC(factid1,methodid,instructioncounter,owner,name,desc,itf) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"INVOKESTATIC").

IDB_INVOKEINTERFACE(cat("R_INVOKEINTERFACE_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,owner,name,desc,itf) :- INVOKEINTERFACE(factid1,methodid,instructioncounter,owner,name,desc,itf) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"INVOKEINTERFACE").

IDB_INVOKEDYNAMIC(cat("R_INVOKEDYNAMIC_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,name,desc,bsmArgs,bsm_getOwner,bsm_getName,bsm_getDesc,bsm_getTag,bsm_isInterface) :- INVOKEDYNAMIC(factid1,methodid,instructioncounter,name,desc,bsmArgs,bsm_getOwner,bsm_getName,bsm_getDesc,bsm_getTag,bsm_isInterface) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"INVOKEDYNAMIC").

IDB_NEW(cat("R_NEW_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,desc) :- NEW(factid1,methodid,instructioncounter,desc) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"NEW").

IDB_NEWARRAY(cat("R_NEWARRAY_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,operand) :- NEWARRAY(factid1,methodid,instructioncounter,operand) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"NEWARRAY").

IDB_ANEWARRAY(cat("R_ANEWARRAY_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,desc) :- ANEWARRAY(factid1,methodid,instructioncounter,desc) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"ANEWARRAY").

IDB_ARRAYLENGTH(cat("R_ARRAYLENGTH_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- ARRAYLENGTH(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"ARRAYLENGTH").

IDB_ATHROW(cat("R_ATHROW_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100) :- ATHROW(factid1,methodid,instructioncounter) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"ATHROW").

IDB_CHECKCAST(cat("R_CHECKCAST_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,desc) :- CHECKCAST(factid1,methodid,instructioncounter,desc) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"CHECKCAST").

IDB_INSTANCEOF(cat("R_INSTANCEOF_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,desc) :- INSTANCEOF(factid1,methodid,instructioncounter,desc) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"INSTANCEOF").

IDB_IFNULL(cat("R_IFNULL_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,label) :- IFNULL(factid1,methodid,instructioncounter,label) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"IFNULL").

IDB_IFNONNULL(cat("R_IFNONNULL_MOVED","[",factid1,factid2,"]"),destMethodId,destInstructionCounter+instructioncounter/100,label) :- IFNONNULL(factid1,methodid,instructioncounter,label) , MOVED_INSTRUCTION(factid2,methodid,instructioncounter,destMethodId,destInstructionCounter,"IFNONNULL").

