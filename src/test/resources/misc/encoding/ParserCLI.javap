Classfile /Users/jens/Development/binaryeq/daleq/evaluation/db/org.jooq:jooq:3.17.11/org.jooq.ParserCLI/gaoss/ParserCLI.class
  Last modified 30/04/2025; size 34989 bytes
  SHA-256 checksum 6e52d675a8a29d8a4bc314c65de5478730c207ffe41a10017b0c9327d32859b0
  Compiled from "ParserCLI.java"
public final class org.jooq.ParserCLI
  minor version: 0
  major version: 61
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #240                        // org/jooq/ParserCLI
  super_class: #2                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 77, attributes: 4
Constant pool:
     #1 = Methodref          #2.#3        // java/lang/Object."<init>":()V
     #2 = Class              #4           // java/lang/Object
     #3 = NameAndType        #5:#6        // "<init>":()V
     #4 = Utf8               java/lang/Object
     #5 = Utf8               <init>
     #6 = Utf8               ()V
     #7 = String             #8           // https://www.jooq.org/doc/latest/manual/sql-building/sql-parser/sql-parser-cli/
     #8 = Utf8               https://www.jooq.org/doc/latest/manual/sql-building/sql-parser/sql-parser-cli/
     #9 = InvokeDynamic      #0:#10       // #0:run:([Ljava/lang/String;)Ljava/lang/Runnable;
    #10 = NameAndType        #11:#12      // run:([Ljava/lang/String;)Ljava/lang/Runnable;
    #11 = Utf8               run
    #12 = Utf8               ([Ljava/lang/String;)Ljava/lang/Runnable;
    #13 = Methodref          #14.#15      // org/jooq/CLIUtil.main:(Ljava/lang/String;Ljava/lang/Runnable;)V
    #14 = Class              #16          // org/jooq/CLIUtil
    #15 = NameAndType        #17:#18      // main:(Ljava/lang/String;Ljava/lang/Runnable;)V
    #16 = Utf8               org/jooq/CLIUtil
    #17 = Utf8               main
    #18 = Utf8               (Ljava/lang/String;Ljava/lang/Runnable;)V
    #19 = Fieldref           #20.#21      // org/jooq/ParserCLI$Args.toDialect:Lorg/jooq/SQLDialect;
    #20 = Class              #22          // org/jooq/ParserCLI$Args
    #21 = NameAndType        #23:#24      // toDialect:Lorg/jooq/SQLDialect;
    #22 = Utf8               org/jooq/ParserCLI$Args
    #23 = Utf8               toDialect
    #24 = Utf8               Lorg/jooq/SQLDialect;
    #25 = Methodref          #26.#27      // org/jooq/impl/DSL.using:(Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)Lorg/jooq/DSLContext;
    #26 = Class              #28          // org/jooq/impl/DSL
    #27 = NameAndType        #29:#30      // using:(Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)Lorg/jooq/DSLContext;
    #28 = Utf8               org/jooq/impl/DSL
    #29 = Utf8               using
    #30 = Utf8               (Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)Lorg/jooq/DSLContext;
    #31 = Fieldref           #20.#32      // org/jooq/ParserCLI$Args.formatted:Ljava/lang/Boolean;
    #32 = NameAndType        #33:#34      // formatted:Ljava/lang/Boolean;
    #33 = Utf8               formatted
    #34 = Utf8               Ljava/lang/Boolean;
    #35 = Methodref          #36.#37      // org/jooq/conf/Settings.setRenderFormatted:(Ljava/lang/Boolean;)V
    #36 = Class              #38          // org/jooq/conf/Settings
    #37 = NameAndType        #39:#40      // setRenderFormatted:(Ljava/lang/Boolean;)V
    #38 = Utf8               org/jooq/conf/Settings
    #39 = Utf8               setRenderFormatted
    #40 = Utf8               (Ljava/lang/Boolean;)V
    #41 = Fieldref           #20.#42      // org/jooq/ParserCLI$Args.keywords:Lorg/jooq/conf/RenderKeywordCase;
    #42 = NameAndType        #43:#44      // keywords:Lorg/jooq/conf/RenderKeywordCase;
    #43 = Utf8               keywords
    #44 = Utf8               Lorg/jooq/conf/RenderKeywordCase;
    #45 = Methodref          #36.#46      // org/jooq/conf/Settings.setRenderKeywordCase:(Lorg/jooq/conf/RenderKeywordCase;)V
    #46 = NameAndType        #47:#48      // setRenderKeywordCase:(Lorg/jooq/conf/RenderKeywordCase;)V
    #47 = Utf8               setRenderKeywordCase
    #48 = Utf8               (Lorg/jooq/conf/RenderKeywordCase;)V
    #49 = Fieldref           #20.#50      // org/jooq/ParserCLI$Args.name:Lorg/jooq/conf/RenderNameCase;
    #50 = NameAndType        #51:#52      // name:Lorg/jooq/conf/RenderNameCase;
    #51 = Utf8               name
    #52 = Utf8               Lorg/jooq/conf/RenderNameCase;
    #53 = Methodref          #36.#54      // org/jooq/conf/Settings.setRenderNameCase:(Lorg/jooq/conf/RenderNameCase;)V
    #54 = NameAndType        #55:#56      // setRenderNameCase:(Lorg/jooq/conf/RenderNameCase;)V
    #55 = Utf8               setRenderNameCase
    #56 = Utf8               (Lorg/jooq/conf/RenderNameCase;)V
    #57 = Fieldref           #20.#58      // org/jooq/ParserCLI$Args.quoted:Lorg/jooq/conf/RenderQuotedNames;
    #58 = NameAndType        #59:#60      // quoted:Lorg/jooq/conf/RenderQuotedNames;
    #59 = Utf8               quoted
    #60 = Utf8               Lorg/jooq/conf/RenderQuotedNames;
    #61 = Methodref          #36.#62      // org/jooq/conf/Settings.setRenderQuotedNames:(Lorg/jooq/conf/RenderQuotedNames;)V
    #62 = NameAndType        #63:#64      // setRenderQuotedNames:(Lorg/jooq/conf/RenderQuotedNames;)V
    #63 = Utf8               setRenderQuotedNames
    #64 = Utf8               (Lorg/jooq/conf/RenderQuotedNames;)V
    #65 = Fieldref           #20.#66      // org/jooq/ParserCLI$Args.fromDialect:Lorg/jooq/SQLDialect;
    #66 = NameAndType        #67:#24      // fromDialect:Lorg/jooq/SQLDialect;
    #67 = Utf8               fromDialect
    #68 = Methodref          #36.#69      // org/jooq/conf/Settings.setParseDialect:(Lorg/jooq/SQLDialect;)V
    #69 = NameAndType        #70:#71      // setParseDialect:(Lorg/jooq/SQLDialect;)V
    #70 = Utf8               setParseDialect
    #71 = Utf8               (Lorg/jooq/SQLDialect;)V
    #72 = Fieldref           #20.#73      // org/jooq/ParserCLI$Args.parseDateFormat:Ljava/lang/String;
    #73 = NameAndType        #74:#75      // parseDateFormat:Ljava/lang/String;
    #74 = Utf8               parseDateFormat
    #75 = Utf8               Ljava/lang/String;
    #76 = Methodref          #36.#77      // org/jooq/conf/Settings.setParseDateFormat:(Ljava/lang/String;)V
    #77 = NameAndType        #78:#79      // setParseDateFormat:(Ljava/lang/String;)V
    #78 = Utf8               setParseDateFormat
    #79 = Utf8               (Ljava/lang/String;)V
    #80 = Fieldref           #20.#81      // org/jooq/ParserCLI$Args.parseIgnoreComments:Ljava/lang/Boolean;
    #81 = NameAndType        #82:#34      // parseIgnoreComments:Ljava/lang/Boolean;
    #82 = Utf8               parseIgnoreComments
    #83 = Methodref          #36.#84      // org/jooq/conf/Settings.setParseIgnoreComments:(Ljava/lang/Boolean;)V
    #84 = NameAndType        #85:#40      // setParseIgnoreComments:(Ljava/lang/Boolean;)V
    #85 = Utf8               setParseIgnoreComments
    #86 = Fieldref           #20.#87      // org/jooq/ParserCLI$Args.parseIgnoreCommentStart:Ljava/lang/String;
    #87 = NameAndType        #88:#75      // parseIgnoreCommentStart:Ljava/lang/String;
    #88 = Utf8               parseIgnoreCommentStart
    #89 = Methodref          #36.#90      // org/jooq/conf/Settings.setParseIgnoreCommentStart:(Ljava/lang/String;)V
    #90 = NameAndType        #91:#79      // setParseIgnoreCommentStart:(Ljava/lang/String;)V
    #91 = Utf8               setParseIgnoreCommentStart
    #92 = Fieldref           #20.#93      // org/jooq/ParserCLI$Args.parseIgnoreCommentStop:Ljava/lang/String;
    #93 = NameAndType        #94:#75      // parseIgnoreCommentStop:Ljava/lang/String;
    #94 = Utf8               parseIgnoreCommentStop
    #95 = Methodref          #36.#96      // org/jooq/conf/Settings.setParseIgnoreCommentStop:(Ljava/lang/String;)V
    #96 = NameAndType        #97:#79      // setParseIgnoreCommentStop:(Ljava/lang/String;)V
    #97 = Utf8               setParseIgnoreCommentStop
    #98 = Fieldref           #20.#99      // org/jooq/ParserCLI$Args.parseLocale:Ljava/util/Locale;
    #99 = NameAndType        #100:#101    // parseLocale:Ljava/util/Locale;
   #100 = Utf8               parseLocale
   #101 = Utf8               Ljava/util/Locale;
   #102 = Methodref          #36.#103     // org/jooq/conf/Settings.setParseLocale:(Ljava/util/Locale;)V
   #103 = NameAndType        #104:#105    // setParseLocale:(Ljava/util/Locale;)V
   #104 = Utf8               setParseLocale
   #105 = Utf8               (Ljava/util/Locale;)V
   #106 = Fieldref           #20.#107     // org/jooq/ParserCLI$Args.parseNameCase:Lorg/jooq/conf/ParseNameCase;
   #107 = NameAndType        #108:#109    // parseNameCase:Lorg/jooq/conf/ParseNameCase;
   #108 = Utf8               parseNameCase
   #109 = Utf8               Lorg/jooq/conf/ParseNameCase;
   #110 = Methodref          #36.#111     // org/jooq/conf/Settings.setParseNameCase:(Lorg/jooq/conf/ParseNameCase;)V
   #111 = NameAndType        #112:#113    // setParseNameCase:(Lorg/jooq/conf/ParseNameCase;)V
   #112 = Utf8               setParseNameCase
   #113 = Utf8               (Lorg/jooq/conf/ParseNameCase;)V
   #114 = Fieldref           #20.#115     // org/jooq/ParserCLI$Args.parseNamedParamPrefix:Ljava/lang/String;
   #115 = NameAndType        #116:#75     // parseNamedParamPrefix:Ljava/lang/String;
   #116 = Utf8               parseNamedParamPrefix
   #117 = Methodref          #36.#118     // org/jooq/conf/Settings.setParseNamedParamPrefix:(Ljava/lang/String;)V
   #118 = NameAndType        #119:#79     // setParseNamedParamPrefix:(Ljava/lang/String;)V
   #119 = Utf8               setParseNamedParamPrefix
   #120 = Fieldref           #20.#121     // org/jooq/ParserCLI$Args.parseRetainCommentsBetweenQueries:Ljava/lang/Boolean;
   #121 = NameAndType        #122:#34     // parseRetainCommentsBetweenQueries:Ljava/lang/Boolean;
   #122 = Utf8               parseRetainCommentsBetweenQueries
   #123 = Methodref          #36.#124     // org/jooq/conf/Settings.setParseRetainCommentsBetweenQueries:(Ljava/lang/Boolean;)V
   #124 = NameAndType        #125:#40     // setParseRetainCommentsBetweenQueries:(Ljava/lang/Boolean;)V
   #125 = Utf8               setParseRetainCommentsBetweenQueries
   #126 = Fieldref           #20.#127     // org/jooq/ParserCLI$Args.parseSetCommands:Ljava/lang/Boolean;
   #127 = NameAndType        #128:#34     // parseSetCommands:Ljava/lang/Boolean;
   #128 = Utf8               parseSetCommands
   #129 = Methodref          #36.#130     // org/jooq/conf/Settings.setParseSetCommands:(Ljava/lang/Boolean;)V
   #130 = NameAndType        #131:#40     // setParseSetCommands:(Ljava/lang/Boolean;)V
   #131 = Utf8               setParseSetCommands
   #132 = Fieldref           #20.#133     // org/jooq/ParserCLI$Args.parseTimestampFormat:Ljava/lang/String;
   #133 = NameAndType        #134:#75     // parseTimestampFormat:Ljava/lang/String;
   #134 = Utf8               parseTimestampFormat
   #135 = Methodref          #36.#136     // org/jooq/conf/Settings.setParseTimestampFormat:(Ljava/lang/String;)V
   #136 = NameAndType        #137:#79     // setParseTimestampFormat:(Ljava/lang/String;)V
   #137 = Utf8               setParseTimestampFormat
   #138 = Fieldref           #20.#139     // org/jooq/ParserCLI$Args.parseUnknownFunctions:Lorg/jooq/conf/ParseUnknownFunctions;
   #139 = NameAndType        #140:#141    // parseUnknownFunctions:Lorg/jooq/conf/ParseUnknownFunctions;
   #140 = Utf8               parseUnknownFunctions
   #141 = Utf8               Lorg/jooq/conf/ParseUnknownFunctions;
   #142 = Methodref          #36.#143     // org/jooq/conf/Settings.setParseUnknownFunctions:(Lorg/jooq/conf/ParseUnknownFunctions;)V
   #143 = NameAndType        #144:#145    // setParseUnknownFunctions:(Lorg/jooq/conf/ParseUnknownFunctions;)V
   #144 = Utf8               setParseUnknownFunctions
   #145 = Utf8               (Lorg/jooq/conf/ParseUnknownFunctions;)V
   #146 = Fieldref           #20.#147     // org/jooq/ParserCLI$Args.renderCoalesceToEmptyStringInConcat:Ljava/lang/Boolean;
   #147 = NameAndType        #148:#34     // renderCoalesceToEmptyStringInConcat:Ljava/lang/Boolean;
   #148 = Utf8               renderCoalesceToEmptyStringInConcat
   #149 = Methodref          #36.#150     // org/jooq/conf/Settings.setRenderCoalesceToEmptyStringInConcat:(Ljava/lang/Boolean;)V
   #150 = NameAndType        #151:#40     // setRenderCoalesceToEmptyStringInConcat:(Ljava/lang/Boolean;)V
   #151 = Utf8               setRenderCoalesceToEmptyStringInConcat
   #152 = Fieldref           #20.#153     // org/jooq/ParserCLI$Args.renderOptionalInnerKeyword:Lorg/jooq/conf/RenderOptionalKeyword;
   #153 = NameAndType        #154:#155    // renderOptionalInnerKeyword:Lorg/jooq/conf/RenderOptionalKeyword;
   #154 = Utf8               renderOptionalInnerKeyword
   #155 = Utf8               Lorg/jooq/conf/RenderOptionalKeyword;
   #156 = Methodref          #36.#157     // org/jooq/conf/Settings.setRenderOptionalInnerKeyword:(Lorg/jooq/conf/RenderOptionalKeyword;)V
   #157 = NameAndType        #158:#159    // setRenderOptionalInnerKeyword:(Lorg/jooq/conf/RenderOptionalKeyword;)V
   #158 = Utf8               setRenderOptionalInnerKeyword
   #159 = Utf8               (Lorg/jooq/conf/RenderOptionalKeyword;)V
   #160 = Fieldref           #20.#161     // org/jooq/ParserCLI$Args.renderOptionalOuterKeyword:Lorg/jooq/conf/RenderOptionalKeyword;
   #161 = NameAndType        #162:#155    // renderOptionalOuterKeyword:Lorg/jooq/conf/RenderOptionalKeyword;
   #162 = Utf8               renderOptionalOuterKeyword
   #163 = Methodref          #36.#164     // org/jooq/conf/Settings.setRenderOptionalOuterKeyword:(Lorg/jooq/conf/RenderOptionalKeyword;)V
   #164 = NameAndType        #165:#159    // setRenderOptionalOuterKeyword:(Lorg/jooq/conf/RenderOptionalKeyword;)V
   #165 = Utf8               setRenderOptionalOuterKeyword
   #166 = Fieldref           #20.#167     // org/jooq/ParserCLI$Args.renderOptionalAsKeywordForFieldAliases:Lorg/jooq/conf/RenderOptionalKeyword;
   #167 = NameAndType        #168:#155    // renderOptionalAsKeywordForFieldAliases:Lorg/jooq/conf/RenderOptionalKeyword;
   #168 = Utf8               renderOptionalAsKeywordForFieldAliases
   #169 = Methodref          #36.#170     // org/jooq/conf/Settings.setRenderOptionalAsKeywordForFieldAliases:(Lorg/jooq/conf/RenderOptionalKeyword;)V
   #170 = NameAndType        #171:#159    // setRenderOptionalAsKeywordForFieldAliases:(Lorg/jooq/conf/RenderOptionalKeyword;)V
   #171 = Utf8               setRenderOptionalAsKeywordForFieldAliases
   #172 = Fieldref           #20.#173     // org/jooq/ParserCLI$Args.renderOptionalAsKeywordForTableAliases:Lorg/jooq/conf/RenderOptionalKeyword;
   #173 = NameAndType        #174:#155    // renderOptionalAsKeywordForTableAliases:Lorg/jooq/conf/RenderOptionalKeyword;
   #174 = Utf8               renderOptionalAsKeywordForTableAliases
   #175 = Methodref          #36.#176     // org/jooq/conf/Settings.setRenderOptionalAsKeywordForTableAliases:(Lorg/jooq/conf/RenderOptionalKeyword;)V
   #176 = NameAndType        #177:#159    // setRenderOptionalAsKeywordForTableAliases:(Lorg/jooq/conf/RenderOptionalKeyword;)V
   #177 = Utf8               setRenderOptionalAsKeywordForTableAliases
   #178 = Fieldref           #20.#179     // org/jooq/ParserCLI$Args.transformPatterns:Ljava/lang/Boolean;
   #179 = NameAndType        #180:#34     // transformPatterns:Ljava/lang/Boolean;
   #180 = Utf8               transformPatterns
   #181 = Methodref          #36.#182     // org/jooq/conf/Settings.setTransformPatterns:(Ljava/lang/Boolean;)V
   #182 = NameAndType        #183:#40     // setTransformPatterns:(Ljava/lang/Boolean;)V
   #183 = Utf8               setTransformPatterns
   #184 = Fieldref           #20.#185     // org/jooq/ParserCLI$Args.transformAnsiJoinToTableLists:Ljava/lang/Boolean;
   #185 = NameAndType        #186:#34     // transformAnsiJoinToTableLists:Ljava/lang/Boolean;
   #186 = Utf8               transformAnsiJoinToTableLists
   #187 = Methodref          #36.#188     // org/jooq/conf/Settings.setTransformAnsiJoinToTableLists:(Ljava/lang/Boolean;)V
   #188 = NameAndType        #189:#40     // setTransformAnsiJoinToTableLists:(Ljava/lang/Boolean;)V
   #189 = Utf8               setTransformAnsiJoinToTableLists
   #190 = Fieldref           #20.#191     // org/jooq/ParserCLI$Args.transformTableListsToAnsiJoin:Ljava/lang/Boolean;
   #191 = NameAndType        #192:#34     // transformTableListsToAnsiJoin:Ljava/lang/Boolean;
   #192 = Utf8               transformTableListsToAnsiJoin
   #193 = Methodref          #36.#194     // org/jooq/conf/Settings.setTransformTableListsToAnsiJoin:(Ljava/lang/Boolean;)V
   #194 = NameAndType        #195:#40     // setTransformTableListsToAnsiJoin:(Ljava/lang/Boolean;)V
   #195 = Utf8               setTransformTableListsToAnsiJoin
   #196 = Fieldref           #20.#197     // org/jooq/ParserCLI$Args.transformUnneededArithmetic:Lorg/jooq/conf/TransformUnneededArithmeticExpressions;
   #197 = NameAndType        #198:#199    // transformUnneededArithmetic:Lorg/jooq/conf/TransformUnneededArithmeticExpressions;
   #198 = Utf8               transformUnneededArithmetic
   #199 = Utf8               Lorg/jooq/conf/TransformUnneededArithmeticExpressions;
   #200 = Methodref          #36.#201     // org/jooq/conf/Settings.setTransformUnneededArithmeticExpressions:(Lorg/jooq/conf/TransformUnneededArithmeticExpressions;)V
   #201 = NameAndType        #202:#203    // setTransformUnneededArithmeticExpressions:(Lorg/jooq/conf/TransformUnneededArithmeticExpressions;)V
   #202 = Utf8               setTransformUnneededArithmeticExpressions
   #203 = Utf8               (Lorg/jooq/conf/TransformUnneededArithmeticExpressions;)V
   #204 = Fieldref           #20.#205     // org/jooq/ParserCLI$Args.transformQualify:Lorg/jooq/conf/Transformation;
   #205 = NameAndType        #206:#207    // transformQualify:Lorg/jooq/conf/Transformation;
   #206 = Utf8               transformQualify
   #207 = Utf8               Lorg/jooq/conf/Transformation;
   #208 = Methodref          #36.#209     // org/jooq/conf/Settings.setTransformRownum:(Lorg/jooq/conf/Transformation;)V
   #209 = NameAndType        #210:#211    // setTransformRownum:(Lorg/jooq/conf/Transformation;)V
   #210 = Utf8               setTransformRownum
   #211 = Utf8               (Lorg/jooq/conf/Transformation;)V
   #212 = Fieldref           #20.#213     // org/jooq/ParserCLI$Args.transformRownum:Lorg/jooq/conf/Transformation;
   #213 = NameAndType        #214:#207    // transformRownum:Lorg/jooq/conf/Transformation;
   #214 = Utf8               transformRownum
   #215 = Methodref          #216.#217    // java/lang/String.toUpperCase:()Ljava/lang/String;
   #216 = Class              #218         // java/lang/String
   #217 = NameAndType        #219:#220    // toUpperCase:()Ljava/lang/String;
   #218 = Utf8               java/lang/String
   #219 = Utf8               toUpperCase
   #220 = Utf8               ()Ljava/lang/String;
   #221 = Methodref          #222.#223    // java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
   #222 = Class              #224         // java/lang/Enum
   #223 = NameAndType        #225:#226    // valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
   #224 = Utf8               java/lang/Enum
   #225 = Utf8               valueOf
   #226 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
   #227 = InterfaceMethodref #228.#229    // java/util/function/Consumer.accept:(Ljava/lang/Object;)V
   #228 = Class              #230         // java/util/function/Consumer
   #229 = NameAndType        #231:#232    // accept:(Ljava/lang/Object;)V
   #230 = Utf8               java/util/function/Consumer
   #231 = Utf8               accept
   #232 = Utf8               (Ljava/lang/Object;)V
   #233 = InterfaceMethodref #234.#235    // java/lang/Runnable.run:()V
   #234 = Class              #236         // java/lang/Runnable
   #235 = NameAndType        #11:#6       // run:()V
   #236 = Utf8               java/lang/Runnable
   #237 = Class              #238         // java/lang/IllegalArgumentException
   #238 = Utf8               java/lang/IllegalArgumentException
   #239 = Methodref          #240.#241    // org/jooq/ParserCLI.invalid:(Ljava/lang/String;Ljava/lang/Class;)V
   #240 = Class              #242         // org/jooq/ParserCLI
   #241 = NameAndType        #243:#244    // invalid:(Ljava/lang/String;Ljava/lang/Class;)V
   #242 = Utf8               org/jooq/ParserCLI
   #243 = Utf8               invalid
   #244 = Utf8               (Ljava/lang/String;Ljava/lang/Class;)V
   #245 = Class              #246         // java/util/Scanner
   #246 = Utf8               java/util/Scanner
   #247 = Fieldref           #248.#249    // java/lang/System.in:Ljava/io/InputStream;
   #248 = Class              #250         // java/lang/System
   #249 = NameAndType        #251:#252    // in:Ljava/io/InputStream;
   #250 = Utf8               java/lang/System
   #251 = Utf8               in
   #252 = Utf8               Ljava/io/InputStream;
   #253 = Methodref          #245.#254    // java/util/Scanner."<init>":(Ljava/io/InputStream;)V
   #254 = NameAndType        #5:#255      // "<init>":(Ljava/io/InputStream;)V
   #255 = Utf8               (Ljava/io/InputStream;)V
   #256 = Fieldref           #248.#257    // java/lang/System.out:Ljava/io/PrintStream;
   #257 = NameAndType        #258:#259    // out:Ljava/io/PrintStream;
   #258 = Utf8               out
   #259 = Utf8               Ljava/io/PrintStream;
   #260 = String             #261         // >
   #261 = Utf8               >
   #262 = Methodref          #263.#264    // java/io/PrintStream.print:(Ljava/lang/String;)V
   #263 = Class              #265         // java/io/PrintStream
   #264 = NameAndType        #266:#79     // print:(Ljava/lang/String;)V
   #265 = Utf8               java/io/PrintStream
   #266 = Utf8               print
   #267 = Methodref          #245.#268    // java/util/Scanner.nextLine:()Ljava/lang/String;
   #268 = NameAndType        #269:#220    // nextLine:()Ljava/lang/String;
   #269 = Utf8               nextLine
   #270 = Fieldref           #20.#271     // org/jooq/ParserCLI$Args.history:Ljava/util/List;
   #271 = NameAndType        #272:#273    // history:Ljava/util/List;
   #272 = Utf8               history
   #273 = Utf8               Ljava/util/List;
   #274 = InterfaceMethodref #275.#276    // java/util/List.add:(Ljava/lang/Object;)Z
   #275 = Class              #277         // java/util/List
   #276 = NameAndType        #278:#279    // add:(Ljava/lang/Object;)Z
   #277 = Utf8               java/util/List
   #278 = Utf8               add
   #279 = Utf8               (Ljava/lang/Object;)Z
   #280 = String             #281         // ^/[^/*].*$
   #281 = Utf8               ^/[^/*].*$
   #282 = Methodref          #216.#283    // java/lang/String.matches:(Ljava/lang/String;)Z
   #283 = NameAndType        #284:#285    // matches:(Ljava/lang/String;)Z
   #284 = Utf8               matches
   #285 = Utf8               (Ljava/lang/String;)Z
   #286 = Fieldref           #20.#287     // org/jooq/ParserCLI$Args.sql:Ljava/lang/String;
   #287 = NameAndType        #288:#75     // sql:Ljava/lang/String;
   #288 = Utf8               sql
   #289 = String             #290         // /q
   #290 = Utf8               /q
   #291 = Methodref          #216.#292    // java/lang/String.equals:(Ljava/lang/Object;)Z
   #292 = NameAndType        #293:#279    // equals:(Ljava/lang/Object;)Z
   #293 = Utf8               equals
   #294 = String             #295         // /quit
   #295 = Utf8               /quit
   #296 = String             #297         // /e
   #297 = Utf8               /e
   #298 = String             #299         // /exit
   #299 = Utf8               /exit
   #300 = String             #301         // Bye
   #301 = Utf8               Bye
   #302 = Methodref          #263.#303    // java/io/PrintStream.println:(Ljava/lang/String;)V
   #303 = NameAndType        #304:#79     // println:(Ljava/lang/String;)V
   #304 = Utf8               println
   #305 = String             #306         // /?
   #306 = Utf8               /?
   #307 = String             #308         // /h
   #308 = Utf8               /h
   #309 = String             #310         // /help
   #310 = Utf8               /help
   #311 = Methodref          #240.#312    // org/jooq/ParserCLI.helpInteractive:()V
   #312 = NameAndType        #313:#6      // helpInteractive:()V
   #313 = Utf8               helpInteractive
   #314 = String             #315         // /d
   #315 = Utf8               /d
   #316 = String             #317         // /display
   #317 = Utf8               /display
   #318 = Methodref          #240.#319    // org/jooq/ParserCLI.displayArguments:(Lorg/jooq/ParserCLI$Args;)V
   #319 = NameAndType        #320:#321    // displayArguments:(Lorg/jooq/ParserCLI$Args;)V
   #320 = Utf8               displayArguments
   #321 = Utf8               (Lorg/jooq/ParserCLI$Args;)V
   #322 = Fieldref           #240.#323    // org/jooq/ParserCLI.FLAG:Ljava/util/regex/Pattern;
   #323 = NameAndType        #324:#325    // FLAG:Ljava/util/regex/Pattern;
   #324 = Utf8               FLAG
   #325 = Utf8               Ljava/util/regex/Pattern;
   #326 = Methodref          #327.#328    // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
   #327 = Class              #329         // java/util/regex/Pattern
   #328 = NameAndType        #330:#331    // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
   #329 = Utf8               java/util/regex/Pattern
   #330 = Utf8               matcher
   #331 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
   #332 = Methodref          #333.#334    // java/util/regex/Matcher.find:()Z
   #333 = Class              #335         // java/util/regex/Matcher
   #334 = NameAndType        #336:#337    // find:()Z
   #335 = Utf8               java/util/regex/Matcher
   #336 = Utf8               find
   #337 = Utf8               ()Z
   #338 = Methodref          #333.#339    // java/util/regex/Matcher.group:(I)Ljava/lang/String;
   #339 = NameAndType        #340:#341    // group:(I)Ljava/lang/String;
   #340 = Utf8               group
   #341 = Utf8               (I)Ljava/lang/String;
   #342 = String             #343         // f
   #343 = Utf8               f
   #344 = String             #33          // formatted
   #345 = Methodref          #216.#346    // java/lang/String.toLowerCase:()Ljava/lang/String;
   #346 = NameAndType        #347:#220    // toLowerCase:()Ljava/lang/String;
   #347 = Utf8               toLowerCase
   #348 = Methodref          #349.#350    // java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
   #349 = Class              #351         // java/lang/Boolean
   #350 = NameAndType        #352:#285    // parseBoolean:(Ljava/lang/String;)Z
   #351 = Utf8               java/lang/Boolean
   #352 = Utf8               parseBoolean
   #353 = Methodref          #349.#354    // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
   #354 = NameAndType        #225:#355    // valueOf:(Z)Ljava/lang/Boolean;
   #355 = Utf8               (Z)Ljava/lang/Boolean;
   #356 = Methodref          #240.#357    // org/jooq/ParserCLI.displayFormatted:(Lorg/jooq/ParserCLI$Args;)V
   #357 = NameAndType        #358:#321    // displayFormatted:(Lorg/jooq/ParserCLI$Args;)V
   #358 = Utf8               displayFormatted
   #359 = String             #360         // k
   #360 = Utf8               k
   #361 = String             #362         // keyword
   #362 = Utf8               keyword
   #363 = Class              #364         // org/jooq/conf/RenderKeywordCase
   #364 = Utf8               org/jooq/conf/RenderKeywordCase
   #365 = InvokeDynamic      #1:#366      // #1:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
   #366 = NameAndType        #231:#367    // accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
   #367 = Utf8               (Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
   #368 = InvokeDynamic      #2:#369      // #2:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
   #369 = NameAndType        #11:#370     // run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
   #370 = Utf8               (Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
   #371 = Methodref          #240.#372    // org/jooq/ParserCLI.parseInteractive:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
   #372 = NameAndType        #373:#374    // parseInteractive:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
   #373 = Utf8               parseInteractive
   #374 = Utf8               (Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
   #375 = String             #376         // i
   #376 = Utf8               i
   #377 = String             #378         // identifier
   #378 = Utf8               identifier
   #379 = Class              #380         // org/jooq/conf/RenderNameCase
   #380 = Utf8               org/jooq/conf/RenderNameCase
   #381 = InvokeDynamic      #3:#366      // #3:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
   #382 = InvokeDynamic      #4:#369      // #4:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
   #383 = String             #384         // Q
   #384 = Utf8               Q
   #385 = String             #59          // quoted
   #386 = Class              #387         // org/jooq/conf/RenderQuotedNames
   #387 = Utf8               org/jooq/conf/RenderQuotedNames
   #388 = InvokeDynamic      #5:#366      // #5:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
   #389 = InvokeDynamic      #6:#369      // #6:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
   #390 = String             #391         // F
   #391 = Utf8               F
   #392 = String             #393         // from-dialect
   #393 = Utf8               from-dialect
   #394 = Class              #395         // org/jooq/SQLDialect
   #395 = Utf8               org/jooq/SQLDialect
   #396 = InvokeDynamic      #7:#366      // #7:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
   #397 = InvokeDynamic      #8:#369      // #8:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
   #398 = String             #399         // S
   #399 = Utf8               S
   #400 = String             #401         // schema
   #401 = Utf8               schema
   #402 = Fieldref           #20.#403     // org/jooq/ParserCLI$Args.schema:Ljava/lang/String;
   #403 = NameAndType        #401:#75     // schema:Ljava/lang/String;
   #404 = Methodref          #240.#405    // org/jooq/ParserCLI.displaySchema:(Lorg/jooq/ParserCLI$Args;)V
   #405 = NameAndType        #406:#321    // displaySchema:(Lorg/jooq/ParserCLI$Args;)V
   #406 = Utf8               displaySchema
   #407 = String             #408         // render-coalesce-to-empty-string-in-concat
   #408 = Utf8               render-coalesce-to-empty-string-in-concat
   #409 = Methodref          #240.#410    // org/jooq/ParserCLI.displayRenderCoalesceToEmptyStringInConcat:(Lorg/jooq/ParserCLI$Args;)V
   #410 = NameAndType        #411:#321    // displayRenderCoalesceToEmptyStringInConcat:(Lorg/jooq/ParserCLI$Args;)V
   #411 = Utf8               displayRenderCoalesceToEmptyStringInConcat
   #412 = String             #413         // parse-date-format
   #413 = Utf8               parse-date-format
   #414 = Methodref          #240.#415    // org/jooq/ParserCLI.displayParseDateFormat:(Lorg/jooq/ParserCLI$Args;)V
   #415 = NameAndType        #416:#321    // displayParseDateFormat:(Lorg/jooq/ParserCLI$Args;)V
   #416 = Utf8               displayParseDateFormat
   #417 = String             #418         // parse-ignore-comments
   #418 = Utf8               parse-ignore-comments
   #419 = Methodref          #240.#420    // org/jooq/ParserCLI.displayParseIgnoreComments:(Lorg/jooq/ParserCLI$Args;)V
   #420 = NameAndType        #421:#321    // displayParseIgnoreComments:(Lorg/jooq/ParserCLI$Args;)V
   #421 = Utf8               displayParseIgnoreComments
   #422 = String             #423         // parse-ignore-comment-start
   #423 = Utf8               parse-ignore-comment-start
   #424 = Methodref          #240.#425    // org/jooq/ParserCLI.displayParseIgnoreCommentStart:(Lorg/jooq/ParserCLI$Args;)V
   #425 = NameAndType        #426:#321    // displayParseIgnoreCommentStart:(Lorg/jooq/ParserCLI$Args;)V
   #426 = Utf8               displayParseIgnoreCommentStart
   #427 = String             #428         // parse-ignore-comment-stop
   #428 = Utf8               parse-ignore-comment-stop
   #429 = Methodref          #240.#430    // org/jooq/ParserCLI.displayParseIgnoreCommentStop:(Lorg/jooq/ParserCLI$Args;)V
   #430 = NameAndType        #431:#321    // displayParseIgnoreCommentStop:(Lorg/jooq/ParserCLI$Args;)V
   #431 = Utf8               displayParseIgnoreCommentStop
   #432 = String             #433         // parse-locale
   #433 = Utf8               parse-locale
   #434 = Methodref          #435.#436    // java/util/Locale.forLanguageTag:(Ljava/lang/String;)Ljava/util/Locale;
   #435 = Class              #437         // java/util/Locale
   #436 = NameAndType        #438:#439    // forLanguageTag:(Ljava/lang/String;)Ljava/util/Locale;
   #437 = Utf8               java/util/Locale
   #438 = Utf8               forLanguageTag
   #439 = Utf8               (Ljava/lang/String;)Ljava/util/Locale;
   #440 = Methodref          #240.#441    // org/jooq/ParserCLI.displayParseLocale:(Lorg/jooq/ParserCLI$Args;)V
   #441 = NameAndType        #442:#321    // displayParseLocale:(Lorg/jooq/ParserCLI$Args;)V
   #442 = Utf8               displayParseLocale
   #443 = String             #444         // parse-name-case
   #444 = Utf8               parse-name-case
   #445 = Class              #446         // org/jooq/conf/ParseNameCase
   #446 = Utf8               org/jooq/conf/ParseNameCase
   #447 = InvokeDynamic      #9:#366      // #9:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
   #448 = InvokeDynamic      #10:#369     // #10:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
   #449 = String             #450         // parse-named-param-prefix
   #450 = Utf8               parse-named-param-prefix
   #451 = Methodref          #240.#452    // org/jooq/ParserCLI.displayParseNamedParamPrefix:(Lorg/jooq/ParserCLI$Args;)V
   #452 = NameAndType        #453:#321    // displayParseNamedParamPrefix:(Lorg/jooq/ParserCLI$Args;)V
   #453 = Utf8               displayParseNamedParamPrefix
   #454 = String             #455         // parse-retain-comments-between-queries
   #455 = Utf8               parse-retain-comments-between-queries
   #456 = Methodref          #240.#457    // org/jooq/ParserCLI.displayParseRetainCommentsBetweenQueries:(Lorg/jooq/ParserCLI$Args;)V
   #457 = NameAndType        #458:#321    // displayParseRetainCommentsBetweenQueries:(Lorg/jooq/ParserCLI$Args;)V
   #458 = Utf8               displayParseRetainCommentsBetweenQueries
   #459 = String             #460         // parse-set-commands
   #460 = Utf8               parse-set-commands
   #461 = Methodref          #240.#462    // org/jooq/ParserCLI.displayParseSetCommands:(Lorg/jooq/ParserCLI$Args;)V
   #462 = NameAndType        #463:#321    // displayParseSetCommands:(Lorg/jooq/ParserCLI$Args;)V
   #463 = Utf8               displayParseSetCommands
   #464 = String             #465         // parse-timestamp-format
   #465 = Utf8               parse-timestamp-format
   #466 = Methodref          #240.#467    // org/jooq/ParserCLI.displayParseTimestampFormat:(Lorg/jooq/ParserCLI$Args;)V
   #467 = NameAndType        #468:#321    // displayParseTimestampFormat:(Lorg/jooq/ParserCLI$Args;)V
   #468 = Utf8               displayParseTimestampFormat
   #469 = String             #470         // parse-unknown-functions
   #470 = Utf8               parse-unknown-functions
   #471 = Class              #472         // org/jooq/conf/ParseUnknownFunctions
   #472 = Utf8               org/jooq/conf/ParseUnknownFunctions
   #473 = InvokeDynamic      #11:#366     // #11:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
   #474 = InvokeDynamic      #12:#369     // #12:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
   #475 = String             #476         // parse-unsupported-syntax
   #476 = Utf8               parse-unsupported-syntax
   #477 = Class              #478         // org/jooq/conf/ParseUnsupportedSyntax
   #478 = Utf8               org/jooq/conf/ParseUnsupportedSyntax
   #479 = InvokeDynamic      #13:#366     // #13:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
   #480 = InvokeDynamic      #14:#369     // #14:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
   #481 = String             #482         // render-optional-inner-keyword
   #482 = Utf8               render-optional-inner-keyword
   #483 = Class              #484         // org/jooq/conf/RenderOptionalKeyword
   #484 = Utf8               org/jooq/conf/RenderOptionalKeyword
   #485 = InvokeDynamic      #15:#366     // #15:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
   #486 = InvokeDynamic      #16:#369     // #16:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
   #487 = String             #488         // render-optional-outer-keyword
   #488 = Utf8               render-optional-outer-keyword
   #489 = InvokeDynamic      #17:#366     // #17:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
   #490 = InvokeDynamic      #18:#369     // #18:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
   #491 = String             #492         // render-optional-as-keyword-for-field-aliases
   #492 = Utf8               render-optional-as-keyword-for-field-aliases
   #493 = InvokeDynamic      #19:#366     // #19:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
   #494 = InvokeDynamic      #20:#369     // #20:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
   #495 = String             #496         // render-optional-as-keyword-for-table-aliases
   #496 = Utf8               render-optional-as-keyword-for-table-aliases
   #497 = InvokeDynamic      #21:#366     // #21:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
   #498 = InvokeDynamic      #22:#369     // #22:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
   #499 = String             #500         // transform-patterns
   #500 = Utf8               transform-patterns
   #501 = Methodref          #240.#502    // org/jooq/ParserCLI.displayTransformPatterns:(Lorg/jooq/ParserCLI$Args;)V
   #502 = NameAndType        #503:#321    // displayTransformPatterns:(Lorg/jooq/ParserCLI$Args;)V
   #503 = Utf8               displayTransformPatterns
   #504 = String             #505         // transform-ansi-join-to-table-lists
   #505 = Utf8               transform-ansi-join-to-table-lists
   #506 = Methodref          #240.#507    // org/jooq/ParserCLI.displayTransformAnsiJoinToTablesLists:(Lorg/jooq/ParserCLI$Args;)V
   #507 = NameAndType        #508:#321    // displayTransformAnsiJoinToTablesLists:(Lorg/jooq/ParserCLI$Args;)V
   #508 = Utf8               displayTransformAnsiJoinToTablesLists
   #509 = String             #510         // transform-qualify
   #510 = Utf8               transform-qualify
   #511 = Class              #512         // org/jooq/conf/Transformation
   #512 = Utf8               org/jooq/conf/Transformation
   #513 = InvokeDynamic      #23:#366     // #23:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
   #514 = InvokeDynamic      #24:#369     // #24:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
   #515 = String             #516         // transform-rownum
   #516 = Utf8               transform-rownum
   #517 = InvokeDynamic      #25:#366     // #25:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
   #518 = InvokeDynamic      #26:#369     // #26:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
   #519 = String             #520         // transform-table-lists-to-ansi-join
   #520 = Utf8               transform-table-lists-to-ansi-join
   #521 = Methodref          #240.#522    // org/jooq/ParserCLI.displayTransformTableListsToAnsiJoin:(Lorg/jooq/ParserCLI$Args;)V
   #522 = NameAndType        #523:#321    // displayTransformTableListsToAnsiJoin:(Lorg/jooq/ParserCLI$Args;)V
   #523 = Utf8               displayTransformTableListsToAnsiJoin
   #524 = String             #525         // transform-unneeded-arithmetic
   #525 = Utf8               transform-unneeded-arithmetic
   #526 = Class              #527         // org/jooq/conf/TransformUnneededArithmeticExpressions
   #527 = Utf8               org/jooq/conf/TransformUnneededArithmeticExpressions
   #528 = InvokeDynamic      #27:#366     // #27:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
   #529 = InvokeDynamic      #28:#369     // #28:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
   #530 = String             #531         // t
   #531 = Utf8               t
   #532 = String             #533         // T
   #533 = Utf8               T
   #534 = String             #535         // to-dialect
   #535 = Utf8               to-dialect
   #536 = InvokeDynamic      #29:#366     // #29:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
   #537 = InvokeDynamic      #30:#369     // #30:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
   #538 = InvokeDynamic      #31:#539     // #31:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
   #539 = NameAndType        #540:#541    // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
   #540 = Utf8               makeConcatWithConstants
   #541 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #542 = String             #543         // Type /h for help
   #543 = Utf8               Type /h for help
   #544 = InterfaceMethodref #545.#546    // org/jooq/DSLContext.settings:()Lorg/jooq/conf/Settings;
   #545 = Class              #547         // org/jooq/DSLContext
   #546 = NameAndType        #548:#549    // settings:()Lorg/jooq/conf/Settings;
   #547 = Utf8               org/jooq/DSLContext
   #548 = Utf8               settings
   #549 = Utf8               ()Lorg/jooq/conf/Settings;
   #550 = Methodref          #240.#551    // org/jooq/ParserCLI.settings:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/Settings;)V
   #551 = NameAndType        #548:#552    // settings:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/Settings;)V
   #552 = Utf8               (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/Settings;)V
   #553 = Methodref          #240.#554    // org/jooq/ParserCLI.ctx:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/Settings;)Lorg/jooq/DSLContext;
   #554 = NameAndType        #555:#556    // ctx:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/Settings;)Lorg/jooq/DSLContext;
   #555 = Utf8               ctx
   #556 = Utf8               (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/Settings;)Lorg/jooq/DSLContext;
   #557 = InvokeDynamic      #32:#558     // #32:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #558 = NameAndType        #540:#559    // makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #559 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #560 = Methodref          #216.#561    // java/lang/String.trim:()Ljava/lang/String;
   #561 = NameAndType        #562:#220    // trim:()Ljava/lang/String;
   #562 = Utf8               trim
   #563 = String             #564         // ;
   #564 = Utf8               ;
   #565 = Methodref          #216.#566    // java/lang/String.endsWith:(Ljava/lang/String;)Z
   #566 = NameAndType        #567:#285    // endsWith:(Ljava/lang/String;)Z
   #567 = Utf8               endsWith
   #568 = Methodref          #240.#569    // org/jooq/ParserCLI.render:(Lorg/jooq/DSLContext;Lorg/jooq/ParserCLI$Args;)V
   #569 = NameAndType        #570:#571    // render:(Lorg/jooq/DSLContext;Lorg/jooq/ParserCLI$Args;)V
   #570 = Utf8               render
   #571 = Utf8               (Lorg/jooq/DSLContext;Lorg/jooq/ParserCLI$Args;)V
   #572 = Methodref          #263.#573    // java/io/PrintStream.println:()V
   #573 = NameAndType        #304:#6      // println:()V
   #574 = Methodref          #245.#575    // java/util/Scanner.hasNextLine:()Z
   #575 = NameAndType        #576:#337    // hasNextLine:()Z
   #576 = Utf8               hasNextLine
   #577 = Methodref          #240.#578    // org/jooq/ParserCLI.displayFromDialect:(Lorg/jooq/ParserCLI$Args;)V
   #578 = NameAndType        #579:#321    // displayFromDialect:(Lorg/jooq/ParserCLI$Args;)V
   #579 = Utf8               displayFromDialect
   #580 = Methodref          #240.#581    // org/jooq/ParserCLI.displayToDialect:(Lorg/jooq/ParserCLI$Args;)V
   #581 = NameAndType        #582:#321    // displayToDialect:(Lorg/jooq/ParserCLI$Args;)V
   #582 = Utf8               displayToDialect
   #583 = Methodref          #240.#584    // org/jooq/ParserCLI.displayKeywords:(Lorg/jooq/ParserCLI$Args;)V
   #584 = NameAndType        #585:#321    // displayKeywords:(Lorg/jooq/ParserCLI$Args;)V
   #585 = Utf8               displayKeywords
   #586 = Methodref          #240.#587    // org/jooq/ParserCLI.displayIdentifiers:(Lorg/jooq/ParserCLI$Args;)V
   #587 = NameAndType        #588:#321    // displayIdentifiers:(Lorg/jooq/ParserCLI$Args;)V
   #588 = Utf8               displayIdentifiers
   #589 = Methodref          #240.#590    // org/jooq/ParserCLI.displayQuoted:(Lorg/jooq/ParserCLI$Args;)V
   #590 = NameAndType        #591:#321    // displayQuoted:(Lorg/jooq/ParserCLI$Args;)V
   #591 = Utf8               displayQuoted
   #592 = Methodref          #240.#593    // org/jooq/ParserCLI.displayTransformQualify:(Lorg/jooq/ParserCLI$Args;)V
   #593 = NameAndType        #594:#321    // displayTransformQualify:(Lorg/jooq/ParserCLI$Args;)V
   #594 = Utf8               displayTransformQualify
   #595 = Methodref          #240.#596    // org/jooq/ParserCLI.displayTransformRownum:(Lorg/jooq/ParserCLI$Args;)V
   #596 = NameAndType        #597:#321    // displayTransformRownum:(Lorg/jooq/ParserCLI$Args;)V
   #597 = Utf8               displayTransformRownum
   #598 = Methodref          #240.#599    // org/jooq/ParserCLI.displayTransformUnneededArithmetic:(Lorg/jooq/ParserCLI$Args;)V
   #599 = NameAndType        #600:#321    // displayTransformUnneededArithmetic:(Lorg/jooq/ParserCLI$Args;)V
   #600 = Utf8               displayTransformUnneededArithmetic
   #601 = InvokeDynamic      #33:#539     // #33:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
   #602 = InvokeDynamic      #34:#603     // #34:makeConcatWithConstants:(Lorg/jooq/conf/RenderNameCase;)Ljava/lang/String;
   #603 = NameAndType        #540:#604    // makeConcatWithConstants:(Lorg/jooq/conf/RenderNameCase;)Ljava/lang/String;
   #604 = Utf8               (Lorg/jooq/conf/RenderNameCase;)Ljava/lang/String;
   #605 = InvokeDynamic      #35:#606     // #35:makeConcatWithConstants:(Lorg/jooq/conf/RenderQuotedNames;)Ljava/lang/String;
   #606 = NameAndType        #540:#607    // makeConcatWithConstants:(Lorg/jooq/conf/RenderQuotedNames;)Ljava/lang/String;
   #607 = Utf8               (Lorg/jooq/conf/RenderQuotedNames;)Ljava/lang/String;
   #608 = InvokeDynamic      #36:#609     // #36:makeConcatWithConstants:(Lorg/jooq/conf/RenderKeywordCase;)Ljava/lang/String;
   #609 = NameAndType        #540:#610    // makeConcatWithConstants:(Lorg/jooq/conf/RenderKeywordCase;)Ljava/lang/String;
   #610 = Utf8               (Lorg/jooq/conf/RenderKeywordCase;)Ljava/lang/String;
   #611 = InvokeDynamic      #37:#612     // #37:makeConcatWithConstants:(Lorg/jooq/SQLDialect;)Ljava/lang/String;
   #612 = NameAndType        #540:#613    // makeConcatWithConstants:(Lorg/jooq/SQLDialect;)Ljava/lang/String;
   #613 = Utf8               (Lorg/jooq/SQLDialect;)Ljava/lang/String;
   #614 = InvokeDynamic      #38:#612     // #38:makeConcatWithConstants:(Lorg/jooq/SQLDialect;)Ljava/lang/String;
   #615 = InvokeDynamic      #39:#616     // #39:makeConcatWithConstants:(Ljava/lang/Boolean;)Ljava/lang/String;
   #616 = NameAndType        #540:#617    // makeConcatWithConstants:(Ljava/lang/Boolean;)Ljava/lang/String;
   #617 = Utf8               (Ljava/lang/Boolean;)Ljava/lang/String;
   #618 = InvokeDynamic      #40:#539     // #40:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
   #619 = InvokeDynamic      #41:#616     // #41:makeConcatWithConstants:(Ljava/lang/Boolean;)Ljava/lang/String;
   #620 = InvokeDynamic      #42:#539     // #42:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
   #621 = InvokeDynamic      #43:#539     // #43:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
   #622 = InvokeDynamic      #44:#623     // #44:makeConcatWithConstants:(Ljava/util/Locale;)Ljava/lang/String;
   #623 = NameAndType        #540:#624    // makeConcatWithConstants:(Ljava/util/Locale;)Ljava/lang/String;
   #624 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;
   #625 = InvokeDynamic      #45:#626     // #45:makeConcatWithConstants:(Lorg/jooq/conf/ParseNameCase;)Ljava/lang/String;
   #626 = NameAndType        #540:#627    // makeConcatWithConstants:(Lorg/jooq/conf/ParseNameCase;)Ljava/lang/String;
   #627 = Utf8               (Lorg/jooq/conf/ParseNameCase;)Ljava/lang/String;
   #628 = InvokeDynamic      #46:#539     // #46:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
   #629 = InvokeDynamic      #47:#616     // #47:makeConcatWithConstants:(Ljava/lang/Boolean;)Ljava/lang/String;
   #630 = InvokeDynamic      #48:#616     // #48:makeConcatWithConstants:(Ljava/lang/Boolean;)Ljava/lang/String;
   #631 = InvokeDynamic      #49:#539     // #49:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
   #632 = InvokeDynamic      #50:#633     // #50:makeConcatWithConstants:(Lorg/jooq/conf/ParseUnknownFunctions;)Ljava/lang/String;
   #633 = NameAndType        #540:#634    // makeConcatWithConstants:(Lorg/jooq/conf/ParseUnknownFunctions;)Ljava/lang/String;
   #634 = Utf8               (Lorg/jooq/conf/ParseUnknownFunctions;)Ljava/lang/String;
   #635 = Fieldref           #20.#636     // org/jooq/ParserCLI$Args.parseUnsupportedSyntax:Lorg/jooq/conf/ParseUnsupportedSyntax;
   #636 = NameAndType        #637:#638    // parseUnsupportedSyntax:Lorg/jooq/conf/ParseUnsupportedSyntax;
   #637 = Utf8               parseUnsupportedSyntax
   #638 = Utf8               Lorg/jooq/conf/ParseUnsupportedSyntax;
   #639 = InvokeDynamic      #51:#640     // #51:makeConcatWithConstants:(Lorg/jooq/conf/ParseUnsupportedSyntax;)Ljava/lang/String;
   #640 = NameAndType        #540:#641    // makeConcatWithConstants:(Lorg/jooq/conf/ParseUnsupportedSyntax;)Ljava/lang/String;
   #641 = Utf8               (Lorg/jooq/conf/ParseUnsupportedSyntax;)Ljava/lang/String;
   #642 = InvokeDynamic      #52:#616     // #52:makeConcatWithConstants:(Ljava/lang/Boolean;)Ljava/lang/String;
   #643 = InvokeDynamic      #53:#644     // #53:makeConcatWithConstants:(Lorg/jooq/conf/RenderOptionalKeyword;)Ljava/lang/String;
   #644 = NameAndType        #540:#645    // makeConcatWithConstants:(Lorg/jooq/conf/RenderOptionalKeyword;)Ljava/lang/String;
   #645 = Utf8               (Lorg/jooq/conf/RenderOptionalKeyword;)Ljava/lang/String;
   #646 = InvokeDynamic      #54:#644     // #54:makeConcatWithConstants:(Lorg/jooq/conf/RenderOptionalKeyword;)Ljava/lang/String;
   #647 = InvokeDynamic      #55:#644     // #55:makeConcatWithConstants:(Lorg/jooq/conf/RenderOptionalKeyword;)Ljava/lang/String;
   #648 = InvokeDynamic      #56:#644     // #56:makeConcatWithConstants:(Lorg/jooq/conf/RenderOptionalKeyword;)Ljava/lang/String;
   #649 = InvokeDynamic      #57:#616     // #57:makeConcatWithConstants:(Ljava/lang/Boolean;)Ljava/lang/String;
   #650 = InvokeDynamic      #58:#616     // #58:makeConcatWithConstants:(Ljava/lang/Boolean;)Ljava/lang/String;
   #651 = InvokeDynamic      #59:#652     // #59:makeConcatWithConstants:(Lorg/jooq/conf/Transformation;)Ljava/lang/String;
   #652 = NameAndType        #540:#653    // makeConcatWithConstants:(Lorg/jooq/conf/Transformation;)Ljava/lang/String;
   #653 = Utf8               (Lorg/jooq/conf/Transformation;)Ljava/lang/String;
   #654 = InvokeDynamic      #60:#652     // #60:makeConcatWithConstants:(Lorg/jooq/conf/Transformation;)Ljava/lang/String;
   #655 = InvokeDynamic      #61:#616     // #61:makeConcatWithConstants:(Ljava/lang/Boolean;)Ljava/lang/String;
   #656 = InvokeDynamic      #62:#657     // #62:makeConcatWithConstants:(Lorg/jooq/conf/TransformUnneededArithmeticExpressions;)Ljava/lang/String;
   #657 = NameAndType        #540:#658    // makeConcatWithConstants:(Lorg/jooq/conf/TransformUnneededArithmeticExpressions;)Ljava/lang/String;
   #658 = Utf8               (Lorg/jooq/conf/TransformUnneededArithmeticExpressions;)Ljava/lang/String;
   #659 = Methodref          #660.#661    // org/jooq/tools/StringUtils.isBlank:(Ljava/lang/String;)Z
   #660 = Class              #662         // org/jooq/tools/StringUtils
   #661 = NameAndType        #663:#285    // isBlank:(Ljava/lang/String;)Z
   #662 = Utf8               org/jooq/tools/StringUtils
   #663 = Utf8               isBlank
   #664 = InterfaceMethodref #545.#665    // org/jooq/DSLContext.configuration:()Lorg/jooq/Configuration;
   #665 = NameAndType        #666:#667    // configuration:()Lorg/jooq/Configuration;
   #666 = Utf8               configuration
   #667 = Utf8               ()Lorg/jooq/Configuration;
   #668 = InvokeDynamic      #63:#669     // #63:provide:(Lorg/jooq/DSLContext;Lorg/jooq/ParserCLI$Args;)Lorg/jooq/MetaProvider;
   #669 = NameAndType        #670:#671    // provide:(Lorg/jooq/DSLContext;Lorg/jooq/ParserCLI$Args;)Lorg/jooq/MetaProvider;
   #670 = Utf8               provide
   #671 = Utf8               (Lorg/jooq/DSLContext;Lorg/jooq/ParserCLI$Args;)Lorg/jooq/MetaProvider;
   #672 = InterfaceMethodref #673.#674    // org/jooq/Configuration.derive:(Lorg/jooq/MetaProvider;)Lorg/jooq/Configuration;
   #673 = Class              #675         // org/jooq/Configuration
   #674 = NameAndType        #676:#677    // derive:(Lorg/jooq/MetaProvider;)Lorg/jooq/Configuration;
   #675 = Utf8               org/jooq/Configuration
   #676 = Utf8               derive
   #677 = Utf8               (Lorg/jooq/MetaProvider;)Lorg/jooq/Configuration;
   #678 = InvokeDynamic      #64:#679     // #64:apply:()Ljava/util/function/Function;
   #679 = NameAndType        #680:#681    // apply:()Ljava/util/function/Function;
   #680 = Utf8               apply
   #681 = Utf8               ()Ljava/util/function/Function;
   #682 = InterfaceMethodref #673.#683    // org/jooq/Configuration.deriveSettings:(Ljava/util/function/Function;)Lorg/jooq/Configuration;
   #683 = NameAndType        #684:#685    // deriveSettings:(Ljava/util/function/Function;)Lorg/jooq/Configuration;
   #684 = Utf8               deriveSettings
   #685 = Utf8               (Ljava/util/function/Function;)Lorg/jooq/Configuration;
   #686 = InterfaceMethodref #673.#687    // org/jooq/Configuration.dsl:()Lorg/jooq/DSLContext;
   #687 = NameAndType        #688:#689    // dsl:()Lorg/jooq/DSLContext;
   #688 = Utf8               dsl
   #689 = Utf8               ()Lorg/jooq/DSLContext;
   #690 = InterfaceMethodref #545.#691    // org/jooq/DSLContext.parser:()Lorg/jooq/Parser;
   #691 = NameAndType        #692:#693    // parser:()Lorg/jooq/Parser;
   #692 = Utf8               parser
   #693 = Utf8               ()Lorg/jooq/Parser;
   #694 = InterfaceMethodref #695.#696    // org/jooq/Parser.parse:(Ljava/lang/String;)Lorg/jooq/Queries;
   #695 = Class              #697         // org/jooq/Parser
   #696 = NameAndType        #698:#699    // parse:(Ljava/lang/String;)Lorg/jooq/Queries;
   #697 = Utf8               org/jooq/Parser
   #698 = Utf8               parse
   #699 = Utf8               (Ljava/lang/String;)Lorg/jooq/Queries;
   #700 = InterfaceMethodref #545.#701    // org/jooq/DSLContext.render:(Lorg/jooq/QueryPart;)Ljava/lang/String;
   #701 = NameAndType        #570:#702    // render:(Lorg/jooq/QueryPart;)Ljava/lang/String;
   #702 = Utf8               (Lorg/jooq/QueryPart;)Ljava/lang/String;
   #703 = Class              #704         // org/jooq/impl/ParserException
   #704 = Utf8               org/jooq/impl/ParserException
   #705 = String             #706         // ^(?is:(?:ALTER|BEGIN|COMMENT|CREATE|DECLARE|DELETE|DESCRIBE|DROP|GRANT|INSERT|MERGE|RENAME|REVOKE|SELECT|SET|SHOW|TRUNCATE|UPDATE|USE).*)$
   #706 = Utf8               ^(?is:(?:ALTER|BEGIN|COMMENT|CREATE|DECLARE|DELETE|DESCRIBE|DROP|GRANT|INSERT|MERGE|RENAME|REVOKE|SELECT|SET|SHOW|TRUNCATE|UPDATE|USE).*)$
   #707 = InterfaceMethodref #695.#708    // org/jooq/Parser.parseField:(Ljava/lang/String;)Lorg/jooq/Field;
   #708 = NameAndType        #709:#710    // parseField:(Ljava/lang/String;)Lorg/jooq/Field;
   #709 = Utf8               parseField
   #710 = Utf8               (Ljava/lang/String;)Lorg/jooq/Field;
   #711 = Methodref          #703.#712    // org/jooq/impl/ParserException.position:()I
   #712 = NameAndType        #713:#714    // position:()I
   #713 = Utf8               position
   #714 = Utf8               ()I
   #715 = Methodref          #703.#716    // org/jooq/impl/ParserException.getMessage:()Ljava/lang/String;
   #716 = NameAndType        #717:#220    // getMessage:()Ljava/lang/String;
   #717 = Utf8               getMessage
   #718 = Methodref          #20.#3       // org/jooq/ParserCLI$Args."<init>":()V
   #719 = String             #720         // -f
   #720 = Utf8               -f
   #721 = String             #722         // --formatted
   #722 = Utf8               --formatted
   #723 = String             #724         // -k
   #724 = Utf8               -k
   #725 = String             #726         // --keyword
   #726 = Utf8               --keyword
   #727 = Methodref          #240.#728    // org/jooq/ParserCLI.parse:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
   #728 = NameAndType        #698:#226    // parse:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
   #729 = String             #730         // -i
   #730 = Utf8               -i
   #731 = String             #732         // --identifier
   #732 = Utf8               --identifier
   #733 = String             #734         // -Q
   #734 = Utf8               -Q
   #735 = String             #736         // --quoted
   #736 = Utf8               --quoted
   #737 = String             #738         // -F
   #738 = Utf8               -F
   #739 = String             #740         // --from-dialect
   #740 = Utf8               --from-dialect
   #741 = String             #742         // -t
   #742 = Utf8               -t
   #743 = String             #744         // -T
   #744 = Utf8               -T
   #745 = String             #746         // --to-dialect
   #746 = Utf8               --to-dialect
   #747 = String             #748         // --parse-date-format
   #748 = Utf8               --parse-date-format
   #749 = String             #750         // --parse-ignore-comments
   #750 = Utf8               --parse-ignore-comments
   #751 = String             #752         // --parse-ignore-comment-start
   #752 = Utf8               --parse-ignore-comment-start
   #753 = String             #754         // --parse-ignore-comment-stop
   #754 = Utf8               --parse-ignore-comment-stop
   #755 = String             #756         // --parse-locale
   #756 = Utf8               --parse-locale
   #757 = String             #758         // --parse-name-case
   #758 = Utf8               --parse-name-case
   #759 = String             #760         // --parse-named-param-prefix
   #760 = Utf8               --parse-named-param-prefix
   #761 = String             #762         // --parse-set-commands
   #762 = Utf8               --parse-set-commands
   #763 = String             #764         // --parse-retain-comments-between-queries
   #764 = Utf8               --parse-retain-comments-between-queries
   #765 = String             #766         // --parse-timestamp-format
   #766 = Utf8               --parse-timestamp-format
   #767 = String             #768         // --parse-unknown-functions
   #768 = Utf8               --parse-unknown-functions
   #769 = String             #770         // --parse-unsupported-syntax
   #770 = Utf8               --parse-unsupported-syntax
   #771 = String             #772         // --render-coalesce-to-empty-string-in-concat
   #772 = Utf8               --render-coalesce-to-empty-string-in-concat
   #773 = String             #774         // --render-optional-inner-keyword
   #774 = Utf8               --render-optional-inner-keyword
   #775 = String             #776         // --render-optional-outer-keyword
   #776 = Utf8               --render-optional-outer-keyword
   #777 = String             #778         // --render-optional-as-keyword-for-field-aliases
   #778 = Utf8               --render-optional-as-keyword-for-field-aliases
   #779 = String             #780         // --render-optional-as-keyword-for-table-aliases
   #780 = Utf8               --render-optional-as-keyword-for-table-aliases
   #781 = String             #782         // --transform-patterns
   #782 = Utf8               --transform-patterns
   #783 = String             #784         // --transform-ansi-join-to-table-lists
   #784 = Utf8               --transform-ansi-join-to-table-lists
   #785 = String             #786         // --transform-qualify
   #786 = Utf8               --transform-qualify
   #787 = String             #788         // --transform-rownum
   #788 = Utf8               --transform-rownum
   #789 = String             #790         // --transform-table-lists-to-ansi-join
   #790 = Utf8               --transform-table-lists-to-ansi-join
   #791 = String             #792         // --transform-unneeded-arithmetic
   #792 = Utf8               --transform-unneeded-arithmetic
   #793 = String             #794         // -S
   #794 = Utf8               -S
   #795 = String             #796         // --schema
   #796 = Utf8               --schema
   #797 = String             #798         // -s
   #798 = Utf8               -s
   #799 = String             #800         // --sql
   #800 = Utf8               --sql
   #801 = String             #802         // -I
   #802 = Utf8               -I
   #803 = String             #804         // --interactive
   #804 = Utf8               --interactive
   #805 = Fieldref           #20.#806     // org/jooq/ParserCLI$Args.interactive:Z
   #806 = NameAndType        #807:#808    // interactive:Z
   #807 = Utf8               interactive
   #808 = Utf8               Z
   #809 = String             #810         // -h
   #810 = Utf8               -h
   #811 = String             #812         // --help
   #812 = Utf8               --help
   #813 = Methodref          #240.#814    // org/jooq/ParserCLI.help:()V
   #814 = NameAndType        #815:#6      // help:()V
   #815 = Utf8               help
   #816 = Fieldref           #20.#817     // org/jooq/ParserCLI$Args.done:Z
   #817 = NameAndType        #818:#808    // done:Z
   #818 = Utf8               done
   #819 = InvokeDynamic      #65:#539     // #65:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
   #820 = Class              #821         // java/lang/RuntimeException
   #821 = Utf8               java/lang/RuntimeException
   #822 = Methodref          #820.#3      // java/lang/RuntimeException."<init>":()V
   #823 = Class              #824         // java/lang/ArrayIndexOutOfBoundsException
   #824 = Utf8               java/lang/ArrayIndexOutOfBoundsException
   #825 = Methodref          #826.#827    // java/lang/Class.getName:()Ljava/lang/String;
   #826 = Class              #828         // java/lang/Class
   #827 = NameAndType        #829:#220    // getName:()Ljava/lang/String;
   #828 = Utf8               java/lang/Class
   #829 = Utf8               getName
   #830 = String             #831         // Unknown
   #831 = Utf8               Unknown
   #832 = InvokeDynamic      #66:#558     // #66:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #833 = Methodref          #826.#834    // java/lang/Class.getSimpleName:()Ljava/lang/String;
   #834 = NameAndType        #835:#220    // getSimpleName:()Ljava/lang/String;
   #835 = Utf8               getSimpleName
   #836 = InvokeDynamic      #67:#558     // #67:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #837 = String             #838         // Possible values:
   #838 = Utf8               Possible values:
   #839 = Methodref          #826.#840    // java/lang/Class.getEnumConstants:()[Ljava/lang/Object;
   #840 = NameAndType        #841:#842    // getEnumConstants:()[Ljava/lang/Object;
   #841 = Utf8               getEnumConstants
   #842 = Utf8               ()[Ljava/lang/Object;
   #843 = Class              #844         // "[Ljava/lang/Enum;"
   #844 = Utf8               [Ljava/lang/Enum;
   #845 = Methodref          #222.#846    // java/lang/Enum.name:()Ljava/lang/String;
   #846 = NameAndType        #51:#220     // name:()Ljava/lang/String;
   #847 = InvokeDynamic      #68:#539     // #68:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
   #848 = String             #849         // Usage:
   #849 = Utf8               Usage:
   #850 = String             #851         //   -f / --formatted                                                    Format output SQL
   #851 = Utf8                 -f / --formatted                                                    Format output SQL
   #852 = String             #853         //   -h / --help                                                         Display this help
   #853 = Utf8                 -h / --help                                                         Display this help
   #854 = String             #855         //   -k / --keyword                                  <RenderKeywordCase> Specify the output keyword case (org.jooq.conf.RenderKeywordCase)
   #855 = Utf8                 -k / --keyword                                  <RenderKeywordCase> Specify the output keyword case (org.jooq.conf.RenderKeywordCase)
   #856 = String             #857         //   -i / --identifier                               <RenderNameCase>    Specify the output identifier case (org.jooq.conf.RenderNameCase)
   #857 = Utf8                 -i / --identifier                               <RenderNameCase>    Specify the output identifier case (org.jooq.conf.RenderNameCase)
   #858 = String             #859         //   -Q / --quoted                                   <RenderQuotedNames> Specify the output identifier quoting (org.jooq.conf.RenderQuotedNames)
   #859 = Utf8                 -Q / --quoted                                   <RenderQuotedNames> Specify the output identifier quoting (org.jooq.conf.RenderQuotedNames)
   #860 = String             #861         //   -F / --from-dialect                             <SQLDialect>        Specify the input dialect (org.jooq.SQLDialect)
   #861 = Utf8                 -F / --from-dialect                             <SQLDialect>        Specify the input dialect (org.jooq.SQLDialect)
   #862 = String             #863         //   -T / --to-dialect                               <SQLDialect>        Specify the output dialect (org.jooq.SQLDialect)
   #863 = Utf8                 -T / --to-dialect                               <SQLDialect>        Specify the output dialect (org.jooq.SQLDialect)
   #864 = String             #865         //   -S / --schema                                   <String>            Specify the input SQL schema
   #865 = Utf8                 -S / --schema                                   <String>            Specify the input SQL schema
   #866 = String             #867         //   -s / --sql                                      <String>            Specify the input SQL string
   #867 = Utf8                 -s / --sql                                      <String>            Specify the input SQL string
   #868 = String             #869         //
   #869 = Utf8
   #870 = String             #871         // Additional flags:
   #871 = Utf8               Additional flags:
   #872 = String             #873         //   --parse-date-format                             <String>
   #873 = Utf8                 --parse-date-format                             <String>
   #874 = String             #875         //   --parse-locale                                  <Locale>
   #875 = Utf8                 --parse-locale                                  <Locale>
   #876 = String             #877         //   --parse-name-case                               <ParseNameCase>
   #877 = Utf8                 --parse-name-case                               <ParseNameCase>
   #878 = String             #879         //   --parse-named-param-prefix                      <String>
   #879 = Utf8                 --parse-named-param-prefix                      <String>
   #880 = String             #881         //   --parse-retain-comments-between-queries
   #881 = Utf8                 --parse-retain-comments-between-queries
   #882 = String             #883         //   --parse-set-commands
   #883 = Utf8                 --parse-set-commands
   #884 = String             #885         //   --parse-timestamp-format                        <String>
   #885 = Utf8                 --parse-timestamp-format                        <String>
   #886 = String             #887         //   --parse-unknown-functions                       <ParseUnknownFunctions>
   #887 = Utf8                 --parse-unknown-functions                       <ParseUnknownFunctions>
   #888 = String             #889         //   --parse-unsupported-syntax                      <ParseUnsupportedSyntax>
   #889 = Utf8                 --parse-unsupported-syntax                      <ParseUnsupportedSyntax>
   #890 = String             #891         //   --render-optional-inner-keyword                 <RenderOptionalKeyword>
   #891 = Utf8                 --render-optional-inner-keyword                 <RenderOptionalKeyword>
   #892 = String             #893         //   --render-optional-outer-keyword                 <RenderOptionalKeyword>
   #893 = Utf8                 --render-optional-outer-keyword                 <RenderOptionalKeyword>
   #894 = String             #895         //   --render-optional-as-keyword-for-field-aliases  <RenderOptionalKeyword>
   #895 = Utf8                 --render-optional-as-keyword-for-field-aliases  <RenderOptionalKeyword>
   #896 = String             #897         //   --render-optional-as-keyword-for-table-aliases  <RenderOptionalKeyword>
   #897 = Utf8                 --render-optional-as-keyword-for-table-aliases  <RenderOptionalKeyword>
   #898 = String             #899         // Commercial distribution only features:
   #899 = Utf8               Commercial distribution only features:
   #900 = String             #901         //   --render-coalesce-to-empty-string-in-concat
   #901 = Utf8                 --render-coalesce-to-empty-string-in-concat
   #902 = String             #903         //   --transform-patterns
   #903 = Utf8                 --transform-patterns
   #904 = String             #905         //   --transform-ansi-join-to-table-lists
   #905 = Utf8                 --transform-ansi-join-to-table-lists
   #906 = String             #907         //   --transform-qualify                             <Transformation>
   #907 = Utf8                 --transform-qualify                             <Transformation>
   #908 = String             #909         //   --transform-rownum                              <Transformation>
   #909 = Utf8                 --transform-rownum                              <Transformation>
   #910 = String             #911         //   --transform-table-lists-to-ansi-join
   #911 = Utf8                 --transform-table-lists-to-ansi-join
   #912 = String             #913         //   --transform-unneeded-arithmetic                 <TransformUnneededArithmeticExpressions>
   #913 = Utf8                 --transform-unneeded-arithmetic                 <TransformUnneededArithmeticExpressions>
   #914 = String             #915         //   -I / --interactive                                               Start interactive mode
   #915 = Utf8                 -I / --interactive                                               Start interactive mode
   #916 = String             #917         //   /d  or  /display                                                   Display arguments
   #917 = Utf8                 /d  or  /display                                                   Display arguments
   #918 = String             #919         //   /f  or  /formatted                             <boolean>           Format output SQL
   #919 = Utf8                 /f  or  /formatted                             <boolean>           Format output SQL
   #920 = String             #921         //   /h  or  /help                                                      Display this help
   #921 = Utf8                 /h  or  /help                                                      Display this help
   #922 = String             #923         //   /k  or  /keyword                               <RenderKeywordCase> Specify the output keyword case (org.jooq.conf.RenderKeywordCase)
   #923 = Utf8                 /k  or  /keyword                               <RenderKeywordCase> Specify the output keyword case (org.jooq.conf.RenderKeywordCase)
   #924 = String             #925         //   /i  or  /identifier                            <RenderNameCase>    Specify the output identifier case (org.jooq.conf.RenderNameCase)
   #925 = Utf8                 /i  or  /identifier                            <RenderNameCase>    Specify the output identifier case (org.jooq.conf.RenderNameCase)
   #926 = String             #927         //   /Q  or  /quoted                                <RenderQuotedNames> Specify the output identifier quoting (org.jooq.conf.RenderQuotedNames)
   #927 = Utf8                 /Q  or  /quoted                                <RenderQuotedNames> Specify the output identifier quoting (org.jooq.conf.RenderQuotedNames)
   #928 = String             #929         //   /F  or  /from-dialect                          <SQLDialect>        Specify the input dialect (org.jooq.SQLDialect)
   #929 = Utf8                 /F  or  /from-dialect                          <SQLDialect>        Specify the input dialect (org.jooq.SQLDialect)
   #930 = String             #931         //   /T  or  /to-dialect                            <SQLDialect>        Specify the output dialect (org.jooq.SQLDialect)
   #931 = Utf8                 /T  or  /to-dialect                            <SQLDialect>        Specify the output dialect (org.jooq.SQLDialect)
   #932 = String             #933         //   /S  or  /schema                                <String>            Specify the input SQL schema
   #933 = Utf8                 /S  or  /schema                                <String>            Specify the input SQL schema
   #934 = String             #935         //                                                  <String>            Specify the input SQL string
   #935 = Utf8                                                                <String>            Specify the input SQL string
   #936 = String             #937         //   /parse-date-format                             <String>
   #937 = Utf8                 /parse-date-format                             <String>
   #938 = String             #939         //   /parse-locale                                  <Locale>
   #939 = Utf8                 /parse-locale                                  <Locale>
   #940 = String             #941         //   /parse-name-case                               <ParseNameCase>
   #941 = Utf8                 /parse-name-case                               <ParseNameCase>
   #942 = String             #943         //   /parse-named-param-prefix                      <String>
   #943 = Utf8                 /parse-named-param-prefix                      <String>
   #944 = String             #945         //   /parse-retain-comments-between-queries         <boolean>
   #945 = Utf8                 /parse-retain-comments-between-queries         <boolean>
   #946 = String             #947         //   /parse-set-commands                            <boolean>
   #947 = Utf8                 /parse-set-commands                            <boolean>
   #948 = String             #949         //   /parse-timestamp-format                        <String>
   #949 = Utf8                 /parse-timestamp-format                        <String>
   #950 = String             #951         //   /parse-unknown-functions                       <ParseUnknownFunctions>
   #951 = Utf8                 /parse-unknown-functions                       <ParseUnknownFunctions>
   #952 = String             #953         //   /parse-unsupported-syntax                      <ParseUnsupportedSyntax>
   #953 = Utf8                 /parse-unsupported-syntax                      <ParseUnsupportedSyntax>
   #954 = String             #955         //   /render-optional-inner-keyword                 <RenderOptionalKeyword>
   #955 = Utf8                 /render-optional-inner-keyword                 <RenderOptionalKeyword>
   #956 = String             #957         //   /render-optional-outer-keyword                 <RenderOptionalKeyword>
   #957 = Utf8                 /render-optional-outer-keyword                 <RenderOptionalKeyword>
   #958 = String             #959         //   /render-optional-as-keyword-for-field-aliases  <RenderOptionalKeyword>
   #959 = Utf8                 /render-optional-as-keyword-for-field-aliases  <RenderOptionalKeyword>
   #960 = String             #961         //   /render-optional-as-keyword-for-table-aliases  <RenderOptionalKeyword>
   #961 = Utf8                 /render-optional-as-keyword-for-table-aliases  <RenderOptionalKeyword>
   #962 = String             #963         //   /render-coalesce-to-empty-string-in-concat     <boolean>
   #963 = Utf8                 /render-coalesce-to-empty-string-in-concat     <boolean>
   #964 = String             #965         //   /transform-patterns                            <boolean>
   #965 = Utf8                 /transform-patterns                            <boolean>
   #966 = String             #967         //   /transform-ansi-join-to-table-lists            <boolean>
   #967 = Utf8                 /transform-ansi-join-to-table-lists            <boolean>
   #968 = String             #969         //   /transform-qualify                             <Transformation>
   #969 = Utf8                 /transform-qualify                             <Transformation>
   #970 = String             #971         //   /transform-rownum                              <Transformation>
   #971 = Utf8                 /transform-rownum                              <Transformation>
   #972 = String             #973         //   /transform-table-lists-to-ansi-join            <boolean>
   #973 = Utf8                 /transform-table-lists-to-ansi-join            <boolean>
   #974 = String             #975         //   /transform-unneeded-arithmetic                 <TransformUnneededArithmeticExpressions>
   #975 = Utf8                 /transform-unneeded-arithmetic                 <TransformUnneededArithmeticExpressions>
   #976 = String             #977         //   /q  or  /quit   Quit
   #977 = Utf8                 /q  or  /quit   Quit
   #978 = String             #979         //   /e  or  /exit   Also quit
   #979 = Utf8                 /e  or  /exit   Also quit
   #980 = Fieldref           #981.#982    // org/jooq/conf/ParseWithMetaLookups.THROW_ON_FAILURE:Lorg/jooq/conf/ParseWithMetaLookups;
   #981 = Class              #983         // org/jooq/conf/ParseWithMetaLookups
   #982 = NameAndType        #984:#985    // THROW_ON_FAILURE:Lorg/jooq/conf/ParseWithMetaLookups;
   #983 = Utf8               org/jooq/conf/ParseWithMetaLookups
   #984 = Utf8               THROW_ON_FAILURE
   #985 = Utf8               Lorg/jooq/conf/ParseWithMetaLookups;
   #986 = Methodref          #36.#987     // org/jooq/conf/Settings.withParseWithMetaLookups:(Lorg/jooq/conf/ParseWithMetaLookups;)Lorg/jooq/conf/Settings;
   #987 = NameAndType        #988:#989    // withParseWithMetaLookups:(Lorg/jooq/conf/ParseWithMetaLookups;)Lorg/jooq/conf/Settings;
   #988 = Utf8               withParseWithMetaLookups
   #989 = Utf8               (Lorg/jooq/conf/ParseWithMetaLookups;)Lorg/jooq/conf/Settings;
   #990 = InterfaceMethodref #545.#991    // org/jooq/DSLContext.meta:([Ljava/lang/String;)Lorg/jooq/Meta;
   #991 = NameAndType        #992:#993    // meta:([Ljava/lang/String;)Lorg/jooq/Meta;
   #992 = Utf8               meta
   #993 = Utf8               ([Ljava/lang/String;)Lorg/jooq/Meta;
   #994 = Methodref          #240.#995    // org/jooq/ParserCLI.displayRenderOptionalAsKeywordForTableAliases:(Lorg/jooq/ParserCLI$Args;)V
   #995 = NameAndType        #996:#321    // displayRenderOptionalAsKeywordForTableAliases:(Lorg/jooq/ParserCLI$Args;)V
   #996 = Utf8               displayRenderOptionalAsKeywordForTableAliases
   #997 = Methodref          #240.#998    // org/jooq/ParserCLI.displayRenderOptionalAsKeywordForFieldAliases:(Lorg/jooq/ParserCLI$Args;)V
   #998 = NameAndType        #999:#321    // displayRenderOptionalAsKeywordForFieldAliases:(Lorg/jooq/ParserCLI$Args;)V
   #999 = Utf8               displayRenderOptionalAsKeywordForFieldAliases
  #1000 = Methodref          #240.#1001   // org/jooq/ParserCLI.displayRenderOptionalOuterKeyword:(Lorg/jooq/ParserCLI$Args;)V
  #1001 = NameAndType        #1002:#321   // displayRenderOptionalOuterKeyword:(Lorg/jooq/ParserCLI$Args;)V
  #1002 = Utf8               displayRenderOptionalOuterKeyword
  #1003 = Methodref          #240.#1004   // org/jooq/ParserCLI.displayRenderOptionalInnerKeyword:(Lorg/jooq/ParserCLI$Args;)V
  #1004 = NameAndType        #1005:#321   // displayRenderOptionalInnerKeyword:(Lorg/jooq/ParserCLI$Args;)V
  #1005 = Utf8               displayRenderOptionalInnerKeyword
  #1006 = Methodref          #240.#1007   // org/jooq/ParserCLI.displayParseUnsupportedSyntax:(Lorg/jooq/ParserCLI$Args;)V
  #1007 = NameAndType        #1008:#321   // displayParseUnsupportedSyntax:(Lorg/jooq/ParserCLI$Args;)V
  #1008 = Utf8               displayParseUnsupportedSyntax
  #1009 = Methodref          #240.#1010   // org/jooq/ParserCLI.displayParseUnknownFunctions:(Lorg/jooq/ParserCLI$Args;)V
  #1010 = NameAndType        #1011:#321   // displayParseUnknownFunctions:(Lorg/jooq/ParserCLI$Args;)V
  #1011 = Utf8               displayParseUnknownFunctions
  #1012 = Methodref          #240.#1013   // org/jooq/ParserCLI.displayParseNameCase:(Lorg/jooq/ParserCLI$Args;)V
  #1013 = NameAndType        #1014:#321   // displayParseNameCase:(Lorg/jooq/ParserCLI$Args;)V
  #1014 = Utf8               displayParseNameCase
  #1015 = Methodref          #36.#3       // org/jooq/conf/Settings."<init>":()V
  #1016 = Methodref          #240.#1017   // org/jooq/ParserCLI.parse:([Ljava/lang/String;)Lorg/jooq/ParserCLI$Args;
  #1017 = NameAndType        #698:#1018   // parse:([Ljava/lang/String;)Lorg/jooq/ParserCLI$Args;
  #1018 = Utf8               ([Ljava/lang/String;)Lorg/jooq/ParserCLI$Args;
  #1019 = Methodref          #240.#1020   // org/jooq/ParserCLI.interactiveMode:(Lorg/jooq/DSLContext;Lorg/jooq/ParserCLI$Args;)V
  #1020 = NameAndType        #1021:#571   // interactiveMode:(Lorg/jooq/DSLContext;Lorg/jooq/ParserCLI$Args;)V
  #1021 = Utf8               interactiveMode
  #1022 = String             #1023        // Mandatory arguments: -T and -s. Use -h for help
  #1023 = Utf8               Mandatory arguments: -T and -s. Use -h for help
  #1024 = String             #1025        // ^/([\\w\\-]+)(?:\\s+([^\\r\\n]+))?\\s*$
  #1025 = Utf8               ^/([\\w\\-]+)(?:\\s+([^\\r\\n]+))?\\s*$
  #1026 = Methodref          #327.#1027   // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
  #1027 = NameAndType        #1028:#1029  // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
  #1028 = Utf8               compile
  #1029 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;
  #1030 = Utf8               Code
  #1031 = Utf8               LineNumberTable
  #1032 = Utf8               LocalVariableTable
  #1033 = Utf8               this
  #1034 = Utf8               Lorg/jooq/ParserCLI;
  #1035 = Utf8               ([Ljava/lang/String;)V
  #1036 = Utf8               args
  #1037 = Utf8               [Ljava/lang/String;
  #1038 = Utf8               Exceptions
  #1039 = Class              #1040        // java/lang/Exception
  #1040 = Utf8               java/lang/Exception
  #1041 = Utf8               a
  #1042 = Utf8               Lorg/jooq/ParserCLI$Args;
  #1043 = Utf8               Lorg/jooq/conf/Settings;
  #1044 = Utf8               StackMapTable
  #1045 = Utf8               e
  #1046 = Utf8               Ljava/lang/IllegalArgumentException;
  #1047 = Utf8               type
  #1048 = Utf8               Ljava/lang/Class;
  #1049 = Utf8               arg
  #1050 = Utf8               onSuccess
  #1051 = Utf8               Ljava/util/function/Consumer;
  #1052 = Utf8               display
  #1053 = Utf8               Ljava/lang/Runnable;
  #1054 = Utf8               LocalVariableTypeTable
  #1055 = Utf8               Ljava/lang/Class<TE;>;
  #1056 = Utf8               Ljava/util/function/Consumer<-TE;>;
  #1057 = Utf8               Signature
  #1058 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/String;Ljava/util/function/Consumer<-TE;>;Ljava/lang/Runnable;)V
  #1059 = Utf8               flag
  #1060 = Utf8               Ljava/util/regex/Matcher;
  #1061 = Utf8               line
  #1062 = Utf8               leadingSlash
  #1063 = Utf8               Lorg/jooq/DSLContext;
  #1064 = Utf8               scan
  #1065 = Utf8               Ljava/util/Scanner;
  #1066 = Utf8               c
  #1067 = Utf8               e2
  #1068 = Utf8               Lorg/jooq/impl/ParserException;
  #1069 = Utf8               e1
  #1070 = Utf8               value
  #1071 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/String;)TE;
  #1072 = Utf8               Ljava/lang/ArrayIndexOutOfBoundsException;
  #1073 = Utf8               enumArgument
  #1074 = Utf8               I
  #1075 = Utf8               result
  #1076 = Utf8               Ljava/lang/Class<+Ljava/lang/Enum<*>;>;
  #1077 = Class              #1037        // "[Ljava/lang/String;"
  #1078 = Utf8               <E:Ljava/lang/Enum<TE;>;>([Ljava/lang/String;)Lorg/jooq/ParserCLI$Args;
  #1079 = Utf8               Ljava/lang/Enum;
  #1080 = Utf8               string
  #1081 = Utf8               Ljava/lang/Enum<*>;
  #1082 = Utf8               (Ljava/lang/String;Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)V
  #1083 = Utf8               lambda$render$32
  #1084 = Utf8               (Lorg/jooq/conf/Settings;)Lorg/jooq/conf/Settings;
  #1085 = Utf8               s
  #1086 = Utf8               lambda$render$31
  #1087 = Utf8               (Lorg/jooq/DSLContext;Lorg/jooq/ParserCLI$Args;)Lorg/jooq/Meta;
  #1088 = Utf8               lambda$interactiveMode$30
  #1089 = Utf8               lambda$interactiveMode$29
  #1090 = Utf8               (Lorg/jooq/ParserCLI$Args;Lorg/jooq/SQLDialect;)V
  #1091 = Utf8               lambda$interactiveMode$28
  #1092 = Utf8               lambda$interactiveMode$27
  #1093 = Utf8               (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/TransformUnneededArithmeticExpressions;)V
  #1094 = Utf8               lambda$interactiveMode$26
  #1095 = Utf8               lambda$interactiveMode$25
  #1096 = Utf8               (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/Transformation;)V
  #1097 = Utf8               lambda$interactiveMode$24
  #1098 = Utf8               lambda$interactiveMode$23
  #1099 = Utf8               lambda$interactiveMode$22
  #1100 = Utf8               lambda$interactiveMode$21
  #1101 = Utf8               (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderOptionalKeyword;)V
  #1102 = Utf8               lambda$interactiveMode$20
  #1103 = Utf8               lambda$interactiveMode$19
  #1104 = Utf8               lambda$interactiveMode$18
  #1105 = Utf8               lambda$interactiveMode$17
  #1106 = Utf8               lambda$interactiveMode$16
  #1107 = Utf8               lambda$interactiveMode$15
  #1108 = Utf8               lambda$interactiveMode$14
  #1109 = Utf8               lambda$interactiveMode$13
  #1110 = Utf8               (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/ParseUnsupportedSyntax;)V
  #1111 = Utf8               lambda$interactiveMode$12
  #1112 = Utf8               lambda$interactiveMode$11
  #1113 = Utf8               (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/ParseUnknownFunctions;)V
  #1114 = Utf8               lambda$interactiveMode$10
  #1115 = Utf8               lambda$interactiveMode$9
  #1116 = Utf8               (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/ParseNameCase;)V
  #1117 = Utf8               lambda$interactiveMode$8
  #1118 = Utf8               lambda$interactiveMode$7
  #1119 = Utf8               lambda$interactiveMode$6
  #1120 = Utf8               lambda$interactiveMode$5
  #1121 = Utf8               (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderQuotedNames;)V
  #1122 = Utf8               lambda$interactiveMode$4
  #1123 = Utf8               lambda$interactiveMode$3
  #1124 = Utf8               (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderNameCase;)V
  #1125 = Utf8               lambda$interactiveMode$2
  #1126 = Utf8               lambda$interactiveMode$1
  #1127 = Utf8               (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderKeywordCase;)V
  #1128 = Utf8               lambda$main$0
  #1129 = Utf8               <clinit>
  #1130 = Utf8               SourceFile
  #1131 = Utf8               ParserCLI.java
  #1132 = Utf8               NestMembers
  #1133 = Utf8               BootstrapMethods
  #1134 = MethodHandle       6:#1135      // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #1135 = Methodref          #1136.#1137  // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #1136 = Class              #1138        // java/lang/invoke/LambdaMetafactory
  #1137 = NameAndType        #1139:#1140  // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #1138 = Utf8               java/lang/invoke/LambdaMetafactory
  #1139 = Utf8               metafactory
  #1140 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #1141 = MethodType         #6           //  ()V
  #1142 = MethodHandle       6:#1143      // REF_invokeStatic org/jooq/ParserCLI.lambda$main$0:([Ljava/lang/String;)V
  #1143 = Methodref          #240.#1144   // org/jooq/ParserCLI.lambda$main$0:([Ljava/lang/String;)V
  #1144 = NameAndType        #1128:#1035  // lambda$main$0:([Ljava/lang/String;)V
  #1145 = MethodType         #232         //  (Ljava/lang/Object;)V
  #1146 = MethodHandle       6:#1147      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$1:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderKeywordCase;)V
  #1147 = Methodref          #240.#1148   // org/jooq/ParserCLI.lambda$interactiveMode$1:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderKeywordCase;)V
  #1148 = NameAndType        #1126:#1127  // lambda$interactiveMode$1:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderKeywordCase;)V
  #1149 = MethodType         #48          //  (Lorg/jooq/conf/RenderKeywordCase;)V
  #1150 = MethodHandle       6:#1151      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$2:(Lorg/jooq/ParserCLI$Args;)V
  #1151 = Methodref          #240.#1152   // org/jooq/ParserCLI.lambda$interactiveMode$2:(Lorg/jooq/ParserCLI$Args;)V
  #1152 = NameAndType        #1125:#321   // lambda$interactiveMode$2:(Lorg/jooq/ParserCLI$Args;)V
  #1153 = MethodHandle       6:#1154      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$3:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderNameCase;)V
  #1154 = Methodref          #240.#1155   // org/jooq/ParserCLI.lambda$interactiveMode$3:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderNameCase;)V
  #1155 = NameAndType        #1123:#1124  // lambda$interactiveMode$3:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderNameCase;)V
  #1156 = MethodType         #56          //  (Lorg/jooq/conf/RenderNameCase;)V
  #1157 = MethodHandle       6:#1158      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$4:(Lorg/jooq/ParserCLI$Args;)V
  #1158 = Methodref          #240.#1159   // org/jooq/ParserCLI.lambda$interactiveMode$4:(Lorg/jooq/ParserCLI$Args;)V
  #1159 = NameAndType        #1122:#321   // lambda$interactiveMode$4:(Lorg/jooq/ParserCLI$Args;)V
  #1160 = MethodHandle       6:#1161      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$5:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderQuotedNames;)V
  #1161 = Methodref          #240.#1162   // org/jooq/ParserCLI.lambda$interactiveMode$5:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderQuotedNames;)V
  #1162 = NameAndType        #1120:#1121  // lambda$interactiveMode$5:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderQuotedNames;)V
  #1163 = MethodType         #64          //  (Lorg/jooq/conf/RenderQuotedNames;)V
  #1164 = MethodHandle       6:#1165      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$6:(Lorg/jooq/ParserCLI$Args;)V
  #1165 = Methodref          #240.#1166   // org/jooq/ParserCLI.lambda$interactiveMode$6:(Lorg/jooq/ParserCLI$Args;)V
  #1166 = NameAndType        #1119:#321   // lambda$interactiveMode$6:(Lorg/jooq/ParserCLI$Args;)V
  #1167 = MethodHandle       6:#1168      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$7:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/SQLDialect;)V
  #1168 = Methodref          #240.#1169   // org/jooq/ParserCLI.lambda$interactiveMode$7:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/SQLDialect;)V
  #1169 = NameAndType        #1118:#1090  // lambda$interactiveMode$7:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/SQLDialect;)V
  #1170 = MethodType         #71          //  (Lorg/jooq/SQLDialect;)V
  #1171 = MethodHandle       6:#1172      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$8:(Lorg/jooq/ParserCLI$Args;)V
  #1172 = Methodref          #240.#1173   // org/jooq/ParserCLI.lambda$interactiveMode$8:(Lorg/jooq/ParserCLI$Args;)V
  #1173 = NameAndType        #1117:#321   // lambda$interactiveMode$8:(Lorg/jooq/ParserCLI$Args;)V
  #1174 = MethodHandle       6:#1175      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$9:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/ParseNameCase;)V
  #1175 = Methodref          #240.#1176   // org/jooq/ParserCLI.lambda$interactiveMode$9:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/ParseNameCase;)V
  #1176 = NameAndType        #1115:#1116  // lambda$interactiveMode$9:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/ParseNameCase;)V
  #1177 = MethodType         #113         //  (Lorg/jooq/conf/ParseNameCase;)V
  #1178 = MethodHandle       6:#1179      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$10:(Lorg/jooq/ParserCLI$Args;)V
  #1179 = Methodref          #240.#1180   // org/jooq/ParserCLI.lambda$interactiveMode$10:(Lorg/jooq/ParserCLI$Args;)V
  #1180 = NameAndType        #1114:#321   // lambda$interactiveMode$10:(Lorg/jooq/ParserCLI$Args;)V
  #1181 = MethodHandle       6:#1182      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$11:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/ParseUnknownFunctions;)V
  #1182 = Methodref          #240.#1183   // org/jooq/ParserCLI.lambda$interactiveMode$11:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/ParseUnknownFunctions;)V
  #1183 = NameAndType        #1112:#1113  // lambda$interactiveMode$11:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/ParseUnknownFunctions;)V
  #1184 = MethodType         #145         //  (Lorg/jooq/conf/ParseUnknownFunctions;)V
  #1185 = MethodHandle       6:#1186      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$12:(Lorg/jooq/ParserCLI$Args;)V
  #1186 = Methodref          #240.#1187   // org/jooq/ParserCLI.lambda$interactiveMode$12:(Lorg/jooq/ParserCLI$Args;)V
  #1187 = NameAndType        #1111:#321   // lambda$interactiveMode$12:(Lorg/jooq/ParserCLI$Args;)V
  #1188 = MethodHandle       6:#1189      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$13:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/ParseUnsupportedSyntax;)V
  #1189 = Methodref          #240.#1190   // org/jooq/ParserCLI.lambda$interactiveMode$13:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/ParseUnsupportedSyntax;)V
  #1190 = NameAndType        #1109:#1110  // lambda$interactiveMode$13:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/ParseUnsupportedSyntax;)V
  #1191 = MethodType         #1192        //  (Lorg/jooq/conf/ParseUnsupportedSyntax;)V
  #1192 = Utf8               (Lorg/jooq/conf/ParseUnsupportedSyntax;)V
  #1193 = MethodHandle       6:#1194      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$14:(Lorg/jooq/ParserCLI$Args;)V
  #1194 = Methodref          #240.#1195   // org/jooq/ParserCLI.lambda$interactiveMode$14:(Lorg/jooq/ParserCLI$Args;)V
  #1195 = NameAndType        #1108:#321   // lambda$interactiveMode$14:(Lorg/jooq/ParserCLI$Args;)V
  #1196 = MethodHandle       6:#1197      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$15:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderOptionalKeyword;)V
  #1197 = Methodref          #240.#1198   // org/jooq/ParserCLI.lambda$interactiveMode$15:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderOptionalKeyword;)V
  #1198 = NameAndType        #1107:#1101  // lambda$interactiveMode$15:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderOptionalKeyword;)V
  #1199 = MethodType         #159         //  (Lorg/jooq/conf/RenderOptionalKeyword;)V
  #1200 = MethodHandle       6:#1201      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$16:(Lorg/jooq/ParserCLI$Args;)V
  #1201 = Methodref          #240.#1202   // org/jooq/ParserCLI.lambda$interactiveMode$16:(Lorg/jooq/ParserCLI$Args;)V
  #1202 = NameAndType        #1106:#321   // lambda$interactiveMode$16:(Lorg/jooq/ParserCLI$Args;)V
  #1203 = MethodHandle       6:#1204      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$17:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderOptionalKeyword;)V
  #1204 = Methodref          #240.#1205   // org/jooq/ParserCLI.lambda$interactiveMode$17:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderOptionalKeyword;)V
  #1205 = NameAndType        #1105:#1101  // lambda$interactiveMode$17:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderOptionalKeyword;)V
  #1206 = MethodHandle       6:#1207      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$18:(Lorg/jooq/ParserCLI$Args;)V
  #1207 = Methodref          #240.#1208   // org/jooq/ParserCLI.lambda$interactiveMode$18:(Lorg/jooq/ParserCLI$Args;)V
  #1208 = NameAndType        #1104:#321   // lambda$interactiveMode$18:(Lorg/jooq/ParserCLI$Args;)V
  #1209 = MethodHandle       6:#1210      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$19:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderOptionalKeyword;)V
  #1210 = Methodref          #240.#1211   // org/jooq/ParserCLI.lambda$interactiveMode$19:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderOptionalKeyword;)V
  #1211 = NameAndType        #1103:#1101  // lambda$interactiveMode$19:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderOptionalKeyword;)V
  #1212 = MethodHandle       6:#1213      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$20:(Lorg/jooq/ParserCLI$Args;)V
  #1213 = Methodref          #240.#1214   // org/jooq/ParserCLI.lambda$interactiveMode$20:(Lorg/jooq/ParserCLI$Args;)V
  #1214 = NameAndType        #1102:#321   // lambda$interactiveMode$20:(Lorg/jooq/ParserCLI$Args;)V
  #1215 = MethodHandle       6:#1216      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$21:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderOptionalKeyword;)V
  #1216 = Methodref          #240.#1217   // org/jooq/ParserCLI.lambda$interactiveMode$21:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderOptionalKeyword;)V
  #1217 = NameAndType        #1100:#1101  // lambda$interactiveMode$21:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderOptionalKeyword;)V
  #1218 = MethodHandle       6:#1219      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$22:(Lorg/jooq/ParserCLI$Args;)V
  #1219 = Methodref          #240.#1220   // org/jooq/ParserCLI.lambda$interactiveMode$22:(Lorg/jooq/ParserCLI$Args;)V
  #1220 = NameAndType        #1099:#321   // lambda$interactiveMode$22:(Lorg/jooq/ParserCLI$Args;)V
  #1221 = MethodHandle       6:#1222      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$23:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/Transformation;)V
  #1222 = Methodref          #240.#1223   // org/jooq/ParserCLI.lambda$interactiveMode$23:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/Transformation;)V
  #1223 = NameAndType        #1098:#1096  // lambda$interactiveMode$23:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/Transformation;)V
  #1224 = MethodType         #211         //  (Lorg/jooq/conf/Transformation;)V
  #1225 = MethodHandle       6:#1226      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$24:(Lorg/jooq/ParserCLI$Args;)V
  #1226 = Methodref          #240.#1227   // org/jooq/ParserCLI.lambda$interactiveMode$24:(Lorg/jooq/ParserCLI$Args;)V
  #1227 = NameAndType        #1097:#321   // lambda$interactiveMode$24:(Lorg/jooq/ParserCLI$Args;)V
  #1228 = MethodHandle       6:#1229      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$25:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/Transformation;)V
  #1229 = Methodref          #240.#1230   // org/jooq/ParserCLI.lambda$interactiveMode$25:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/Transformation;)V
  #1230 = NameAndType        #1095:#1096  // lambda$interactiveMode$25:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/Transformation;)V
  #1231 = MethodHandle       6:#1232      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$26:(Lorg/jooq/ParserCLI$Args;)V
  #1232 = Methodref          #240.#1233   // org/jooq/ParserCLI.lambda$interactiveMode$26:(Lorg/jooq/ParserCLI$Args;)V
  #1233 = NameAndType        #1094:#321   // lambda$interactiveMode$26:(Lorg/jooq/ParserCLI$Args;)V
  #1234 = MethodHandle       6:#1235      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$27:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/TransformUnneededArithmeticExpressions;)V
  #1235 = Methodref          #240.#1236   // org/jooq/ParserCLI.lambda$interactiveMode$27:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/TransformUnneededArithmeticExpressions;)V
  #1236 = NameAndType        #1092:#1093  // lambda$interactiveMode$27:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/TransformUnneededArithmeticExpressions;)V
  #1237 = MethodType         #203         //  (Lorg/jooq/conf/TransformUnneededArithmeticExpressions;)V
  #1238 = MethodHandle       6:#1239      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$28:(Lorg/jooq/ParserCLI$Args;)V
  #1239 = Methodref          #240.#1240   // org/jooq/ParserCLI.lambda$interactiveMode$28:(Lorg/jooq/ParserCLI$Args;)V
  #1240 = NameAndType        #1091:#321   // lambda$interactiveMode$28:(Lorg/jooq/ParserCLI$Args;)V
  #1241 = MethodHandle       6:#1242      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$29:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/SQLDialect;)V
  #1242 = Methodref          #240.#1243   // org/jooq/ParserCLI.lambda$interactiveMode$29:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/SQLDialect;)V
  #1243 = NameAndType        #1089:#1090  // lambda$interactiveMode$29:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/SQLDialect;)V
  #1244 = MethodHandle       6:#1245      // REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$30:(Lorg/jooq/ParserCLI$Args;)V
  #1245 = Methodref          #240.#1246   // org/jooq/ParserCLI.lambda$interactiveMode$30:(Lorg/jooq/ParserCLI$Args;)V
  #1246 = NameAndType        #1088:#321   // lambda$interactiveMode$30:(Lorg/jooq/ParserCLI$Args;)V
  #1247 = MethodHandle       6:#1248      // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #1248 = Methodref          #1249.#1250  // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #1249 = Class              #1251        // java/lang/invoke/StringConcatFactory
  #1250 = NameAndType        #540:#1252   // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #1251 = Utf8               java/lang/invoke/StringConcatFactory
  #1252 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #1253 = String             #1254        // Unrecognised command: \u0001
  #1254 = Utf8               Unrecognised command: \u0001
  #1255 = String             #1256        // \u0001\n\u0001
  #1256 = Utf8               \u0001\n\u0001
  #1257 = String             #1258        // Schema                             : \u0001
  #1258 = Utf8               Schema                             : \u0001
  #1259 = String             #1260        // Identifiers                        : \u0001
  #1260 = Utf8               Identifiers                        : \u0001
  #1261 = String             #1262        // Quoted                             : \u0001
  #1262 = Utf8               Quoted                             : \u0001
  #1263 = String             #1264        // Keywords                           : \u0001
  #1264 = Utf8               Keywords                           : \u0001
  #1265 = String             #1266        // To dialect                         : \u0001
  #1266 = Utf8               To dialect                         : \u0001
  #1267 = String             #1268        // From dialect                       : \u0001
  #1268 = Utf8               From dialect                       : \u0001
  #1269 = String             #1270        // Formatted                          : \u0001
  #1270 = Utf8               Formatted                          : \u0001
  #1271 = String             #1272        // Parse date format                  : \u0001
  #1272 = Utf8               Parse date format                  : \u0001
  #1273 = String             #1274        // Parse ignore comments              : \u0001
  #1274 = Utf8               Parse ignore comments              : \u0001
  #1275 = String             #1276        // Parse ignore comment start         : \u0001
  #1276 = Utf8               Parse ignore comment start         : \u0001
  #1277 = String             #1278        // Parse ignore comment stop          : \u0001
  #1278 = Utf8               Parse ignore comment stop          : \u0001
  #1279 = String             #1280        // Parse locale                       : \u0001
  #1280 = Utf8               Parse locale                       : \u0001
  #1281 = String             #1282        // Parse name case                    : \u0001
  #1282 = Utf8               Parse name case                    : \u0001
  #1283 = String             #1284        // Parse named param prefix           : \u0001
  #1284 = Utf8               Parse named param prefix           : \u0001
  #1285 = String             #1286        // Retain comments between queries    : \u0001
  #1286 = Utf8               Retain comments between queries    : \u0001
  #1287 = String             #1288        // Parse set commands                 : \u0001
  #1288 = Utf8               Parse set commands                 : \u0001
  #1289 = String             #1290        // Parse timestamp format             : \u0001
  #1290 = Utf8               Parse timestamp format             : \u0001
  #1291 = String             #1292        // Parse unknown functions            : \u0001
  #1292 = Utf8               Parse unknown functions            : \u0001
  #1293 = String             #1294        // Parse unsupported syntax           : \u0001
  #1294 = Utf8               Parse unsupported syntax           : \u0001
  #1295 = String             #1296        // Render COALESCE(X, \'\') in CONCAT   : \u0001
  #1296 = Utf8               Render COALESCE(X, \'\') in CONCAT   : \u0001
  #1297 = String             #1298        // Render INNER keyword in INNER JOIN : \u0001
  #1298 = Utf8               Render INNER keyword in INNER JOIN : \u0001
  #1299 = String             #1300        // Render OUTER keyword in OUTER JOIN : \u0001
  #1300 = Utf8               Render OUTER keyword in OUTER JOIN : \u0001
  #1301 = String             #1302        // Render AS keyword to alias fields  :\u0001
  #1302 = Utf8               Render AS keyword to alias fields  :\u0001
  #1303 = String             #1304        // Render AS keyword to alias tables  :\u0001
  #1304 = Utf8               Render AS keyword to alias tables  :\u0001
  #1305 = String             #1306        // Transform patterns                 : \u0001
  #1306 = Utf8               Transform patterns                 : \u0001
  #1307 = String             #1308        // Transform ANSI join to table lists : \u0001
  #1308 = Utf8               Transform ANSI join to table lists : \u0001
  #1309 = String             #1310        // Transform QUALIFY                  : \u0001
  #1310 = Utf8               Transform QUALIFY                  : \u0001
  #1311 = String             #1312        // Transform ROWNUM                   : \u0001
  #1312 = Utf8               Transform ROWNUM                   : \u0001
  #1313 = String             #1314        // Transform table lists to ANSI join : \u0001
  #1314 = Utf8               Transform table lists to ANSI join : \u0001
  #1315 = String             #1316        // Transform unneeded arithmetic      : \u0001
  #1316 = Utf8               Transform unneeded arithmetic      : \u0001
  #1317 = MethodType         #1318        //  ()Lorg/jooq/Meta;
  #1318 = Utf8               ()Lorg/jooq/Meta;
  #1319 = MethodHandle       6:#1320      // REF_invokeStatic org/jooq/ParserCLI.lambda$render$31:(Lorg/jooq/DSLContext;Lorg/jooq/ParserCLI$Args;)Lorg/jooq/Meta;
  #1320 = Methodref          #240.#1321   // org/jooq/ParserCLI.lambda$render$31:(Lorg/jooq/DSLContext;Lorg/jooq/ParserCLI$Args;)Lorg/jooq/Meta;
  #1321 = NameAndType        #1086:#1087  // lambda$render$31:(Lorg/jooq/DSLContext;Lorg/jooq/ParserCLI$Args;)Lorg/jooq/Meta;
  #1322 = MethodType         #1323        //  (Ljava/lang/Object;)Ljava/lang/Object;
  #1323 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #1324 = MethodHandle       6:#1325      // REF_invokeStatic org/jooq/ParserCLI.lambda$render$32:(Lorg/jooq/conf/Settings;)Lorg/jooq/conf/Settings;
  #1325 = Methodref          #240.#1326   // org/jooq/ParserCLI.lambda$render$32:(Lorg/jooq/conf/Settings;)Lorg/jooq/conf/Settings;
  #1326 = NameAndType        #1083:#1084  // lambda$render$32:(Lorg/jooq/conf/Settings;)Lorg/jooq/conf/Settings;
  #1327 = MethodType         #1084        //  (Lorg/jooq/conf/Settings;)Lorg/jooq/conf/Settings;
  #1328 = String             #1329        // Unknown flag: \u0001. Use -h or --help
  #1329 = Utf8               Unknown flag: \u0001. Use -h or --help
  #1330 = String             #1331        // Flag \u0001 requires <\u0001> argument
  #1331 = Utf8               Flag \u0001 requires <\u0001> argument
  #1332 = String             #1333        // Invalid \u0001: \u0001
  #1333 = Utf8               Invalid \u0001: \u0001
  #1334 = String             #1335        //   \u0001
  #1335 = Utf8                 \u0001
  #1336 = Utf8               InnerClasses
  #1337 = Utf8               Args
  #1338 = Class              #1339        // java/lang/invoke/MethodHandles$Lookup
  #1339 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #1340 = Class              #1341        // java/lang/invoke/MethodHandles
  #1341 = Utf8               java/lang/invoke/MethodHandles
  #1342 = Utf8               Lookup
{
  private static final java.util.regex.Pattern FLAG;
    descriptor: Ljava/util/regex/Pattern;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  public org.jooq.ParserCLI();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/jooq/ParserCLI;

  public static final void main(java.lang.String...) throws java.lang.Exception;
    descriptor: ([Ljava/lang/String;)V
    flags: (0x0099) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_VARARGS
    Code:
      stack=2, locals=1, args_size=1
         0: ldc           #7                  // String https://www.jooq.org/doc/latest/manual/sql-building/sql-parser/sql-parser-cli/
         2: aload_0
         3: invokedynamic #9,  0              // InvokeDynamic #0:run:([Ljava/lang/String;)Ljava/lang/Runnable;
         8: invokestatic  #13                 // Method org/jooq/CLIUtil.main:(Ljava/lang/String;Ljava/lang/Runnable;)V
        11: return
      LineNumberTable:
        line 76: 0
        line 96: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  args   [Ljava/lang/String;
    Exceptions:
      throws java.lang.Exception

  private static final org.jooq.DSLContext ctx(org.jooq.ParserCLI$Args, org.jooq.conf.Settings);
    descriptor: (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/Settings;)Lorg/jooq/DSLContext;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #19                 // Field org/jooq/ParserCLI$Args.toDialect:Lorg/jooq/SQLDialect;
         4: aload_1
         5: invokestatic  #25                 // Method org/jooq/impl/DSL.using:(Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)Lorg/jooq/DSLContext;
         8: areturn
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0     a   Lorg/jooq/ParserCLI$Args;
            0       9     1 settings   Lorg/jooq/conf/Settings;

  private static final void settings(org.jooq.ParserCLI$Args, org.jooq.conf.Settings);
    descriptor: (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/Settings;)V
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #31                 // Field org/jooq/ParserCLI$Args.formatted:Ljava/lang/Boolean;
         4: ifnull        15
         7: aload_1
         8: aload_0
         9: getfield      #31                 // Field org/jooq/ParserCLI$Args.formatted:Ljava/lang/Boolean;
        12: invokevirtual #35                 // Method org/jooq/conf/Settings.setRenderFormatted:(Ljava/lang/Boolean;)V
        15: aload_0
        16: getfield      #41                 // Field org/jooq/ParserCLI$Args.keywords:Lorg/jooq/conf/RenderKeywordCase;
        19: ifnull        30
        22: aload_1
        23: aload_0
        24: getfield      #41                 // Field org/jooq/ParserCLI$Args.keywords:Lorg/jooq/conf/RenderKeywordCase;
        27: invokevirtual #45                 // Method org/jooq/conf/Settings.setRenderKeywordCase:(Lorg/jooq/conf/RenderKeywordCase;)V
        30: aload_0
        31: getfield      #49                 // Field org/jooq/ParserCLI$Args.name:Lorg/jooq/conf/RenderNameCase;
        34: ifnull        45
        37: aload_1
        38: aload_0
        39: getfield      #49                 // Field org/jooq/ParserCLI$Args.name:Lorg/jooq/conf/RenderNameCase;
        42: invokevirtual #53                 // Method org/jooq/conf/Settings.setRenderNameCase:(Lorg/jooq/conf/RenderNameCase;)V
        45: aload_0
        46: getfield      #57                 // Field org/jooq/ParserCLI$Args.quoted:Lorg/jooq/conf/RenderQuotedNames;
        49: ifnull        60
        52: aload_1
        53: aload_0
        54: getfield      #57                 // Field org/jooq/ParserCLI$Args.quoted:Lorg/jooq/conf/RenderQuotedNames;
        57: invokevirtual #61                 // Method org/jooq/conf/Settings.setRenderQuotedNames:(Lorg/jooq/conf/RenderQuotedNames;)V
        60: aload_0
        61: getfield      #65                 // Field org/jooq/ParserCLI$Args.fromDialect:Lorg/jooq/SQLDialect;
        64: ifnull        75
        67: aload_1
        68: aload_0
        69: getfield      #65                 // Field org/jooq/ParserCLI$Args.fromDialect:Lorg/jooq/SQLDialect;
        72: invokevirtual #68                 // Method org/jooq/conf/Settings.setParseDialect:(Lorg/jooq/SQLDialect;)V
        75: aload_0
        76: getfield      #72                 // Field org/jooq/ParserCLI$Args.parseDateFormat:Ljava/lang/String;
        79: ifnull        90
        82: aload_1
        83: aload_0
        84: getfield      #72                 // Field org/jooq/ParserCLI$Args.parseDateFormat:Ljava/lang/String;
        87: invokevirtual #76                 // Method org/jooq/conf/Settings.setParseDateFormat:(Ljava/lang/String;)V
        90: aload_0
        91: getfield      #80                 // Field org/jooq/ParserCLI$Args.parseIgnoreComments:Ljava/lang/Boolean;
        94: ifnull        105
        97: aload_1
        98: aload_0
        99: getfield      #80                 // Field org/jooq/ParserCLI$Args.parseIgnoreComments:Ljava/lang/Boolean;
       102: invokevirtual #83                 // Method org/jooq/conf/Settings.setParseIgnoreComments:(Ljava/lang/Boolean;)V
       105: aload_0
       106: getfield      #86                 // Field org/jooq/ParserCLI$Args.parseIgnoreCommentStart:Ljava/lang/String;
       109: ifnull        120
       112: aload_1
       113: aload_0
       114: getfield      #86                 // Field org/jooq/ParserCLI$Args.parseIgnoreCommentStart:Ljava/lang/String;
       117: invokevirtual #89                 // Method org/jooq/conf/Settings.setParseIgnoreCommentStart:(Ljava/lang/String;)V
       120: aload_0
       121: getfield      #92                 // Field org/jooq/ParserCLI$Args.parseIgnoreCommentStop:Ljava/lang/String;
       124: ifnull        135
       127: aload_1
       128: aload_0
       129: getfield      #92                 // Field org/jooq/ParserCLI$Args.parseIgnoreCommentStop:Ljava/lang/String;
       132: invokevirtual #95                 // Method org/jooq/conf/Settings.setParseIgnoreCommentStop:(Ljava/lang/String;)V
       135: aload_0
       136: getfield      #98                 // Field org/jooq/ParserCLI$Args.parseLocale:Ljava/util/Locale;
       139: ifnull        150
       142: aload_1
       143: aload_0
       144: getfield      #98                 // Field org/jooq/ParserCLI$Args.parseLocale:Ljava/util/Locale;
       147: invokevirtual #102                // Method org/jooq/conf/Settings.setParseLocale:(Ljava/util/Locale;)V
       150: aload_0
       151: getfield      #106                // Field org/jooq/ParserCLI$Args.parseNameCase:Lorg/jooq/conf/ParseNameCase;
       154: ifnull        165
       157: aload_1
       158: aload_0
       159: getfield      #106                // Field org/jooq/ParserCLI$Args.parseNameCase:Lorg/jooq/conf/ParseNameCase;
       162: invokevirtual #110                // Method org/jooq/conf/Settings.setParseNameCase:(Lorg/jooq/conf/ParseNameCase;)V
       165: aload_0
       166: getfield      #114                // Field org/jooq/ParserCLI$Args.parseNamedParamPrefix:Ljava/lang/String;
       169: ifnull        180
       172: aload_1
       173: aload_0
       174: getfield      #114                // Field org/jooq/ParserCLI$Args.parseNamedParamPrefix:Ljava/lang/String;
       177: invokevirtual #117                // Method org/jooq/conf/Settings.setParseNamedParamPrefix:(Ljava/lang/String;)V
       180: aload_0
       181: getfield      #120                // Field org/jooq/ParserCLI$Args.parseRetainCommentsBetweenQueries:Ljava/lang/Boolean;
       184: ifnull        195
       187: aload_1
       188: aload_0
       189: getfield      #120                // Field org/jooq/ParserCLI$Args.parseRetainCommentsBetweenQueries:Ljava/lang/Boolean;
       192: invokevirtual #123                // Method org/jooq/conf/Settings.setParseRetainCommentsBetweenQueries:(Ljava/lang/Boolean;)V
       195: aload_0
       196: getfield      #126                // Field org/jooq/ParserCLI$Args.parseSetCommands:Ljava/lang/Boolean;
       199: ifnull        210
       202: aload_1
       203: aload_0
       204: getfield      #126                // Field org/jooq/ParserCLI$Args.parseSetCommands:Ljava/lang/Boolean;
       207: invokevirtual #129                // Method org/jooq/conf/Settings.setParseSetCommands:(Ljava/lang/Boolean;)V
       210: aload_0
       211: getfield      #132                // Field org/jooq/ParserCLI$Args.parseTimestampFormat:Ljava/lang/String;
       214: ifnull        225
       217: aload_1
       218: aload_0
       219: getfield      #132                // Field org/jooq/ParserCLI$Args.parseTimestampFormat:Ljava/lang/String;
       222: invokevirtual #135                // Method org/jooq/conf/Settings.setParseTimestampFormat:(Ljava/lang/String;)V
       225: aload_0
       226: getfield      #138                // Field org/jooq/ParserCLI$Args.parseUnknownFunctions:Lorg/jooq/conf/ParseUnknownFunctions;
       229: ifnull        240
       232: aload_1
       233: aload_0
       234: getfield      #138                // Field org/jooq/ParserCLI$Args.parseUnknownFunctions:Lorg/jooq/conf/ParseUnknownFunctions;
       237: invokevirtual #142                // Method org/jooq/conf/Settings.setParseUnknownFunctions:(Lorg/jooq/conf/ParseUnknownFunctions;)V
       240: aload_0
       241: getfield      #146                // Field org/jooq/ParserCLI$Args.renderCoalesceToEmptyStringInConcat:Ljava/lang/Boolean;
       244: ifnull        255
       247: aload_1
       248: aload_0
       249: getfield      #146                // Field org/jooq/ParserCLI$Args.renderCoalesceToEmptyStringInConcat:Ljava/lang/Boolean;
       252: invokevirtual #149                // Method org/jooq/conf/Settings.setRenderCoalesceToEmptyStringInConcat:(Ljava/lang/Boolean;)V
       255: aload_0
       256: getfield      #152                // Field org/jooq/ParserCLI$Args.renderOptionalInnerKeyword:Lorg/jooq/conf/RenderOptionalKeyword;
       259: ifnull        270
       262: aload_1
       263: aload_0
       264: getfield      #152                // Field org/jooq/ParserCLI$Args.renderOptionalInnerKeyword:Lorg/jooq/conf/RenderOptionalKeyword;
       267: invokevirtual #156                // Method org/jooq/conf/Settings.setRenderOptionalInnerKeyword:(Lorg/jooq/conf/RenderOptionalKeyword;)V
       270: aload_0
       271: getfield      #160                // Field org/jooq/ParserCLI$Args.renderOptionalOuterKeyword:Lorg/jooq/conf/RenderOptionalKeyword;
       274: ifnull        285
       277: aload_1
       278: aload_0
       279: getfield      #160                // Field org/jooq/ParserCLI$Args.renderOptionalOuterKeyword:Lorg/jooq/conf/RenderOptionalKeyword;
       282: invokevirtual #163                // Method org/jooq/conf/Settings.setRenderOptionalOuterKeyword:(Lorg/jooq/conf/RenderOptionalKeyword;)V
       285: aload_0
       286: getfield      #166                // Field org/jooq/ParserCLI$Args.renderOptionalAsKeywordForFieldAliases:Lorg/jooq/conf/RenderOptionalKeyword;
       289: ifnull        300
       292: aload_1
       293: aload_0
       294: getfield      #166                // Field org/jooq/ParserCLI$Args.renderOptionalAsKeywordForFieldAliases:Lorg/jooq/conf/RenderOptionalKeyword;
       297: invokevirtual #169                // Method org/jooq/conf/Settings.setRenderOptionalAsKeywordForFieldAliases:(Lorg/jooq/conf/RenderOptionalKeyword;)V
       300: aload_0
       301: getfield      #172                // Field org/jooq/ParserCLI$Args.renderOptionalAsKeywordForTableAliases:Lorg/jooq/conf/RenderOptionalKeyword;
       304: ifnull        315
       307: aload_1
       308: aload_0
       309: getfield      #172                // Field org/jooq/ParserCLI$Args.renderOptionalAsKeywordForTableAliases:Lorg/jooq/conf/RenderOptionalKeyword;
       312: invokevirtual #175                // Method org/jooq/conf/Settings.setRenderOptionalAsKeywordForTableAliases:(Lorg/jooq/conf/RenderOptionalKeyword;)V
       315: aload_0
       316: getfield      #178                // Field org/jooq/ParserCLI$Args.transformPatterns:Ljava/lang/Boolean;
       319: ifnull        330
       322: aload_1
       323: aload_0
       324: getfield      #178                // Field org/jooq/ParserCLI$Args.transformPatterns:Ljava/lang/Boolean;
       327: invokevirtual #181                // Method org/jooq/conf/Settings.setTransformPatterns:(Ljava/lang/Boolean;)V
       330: aload_0
       331: getfield      #184                // Field org/jooq/ParserCLI$Args.transformAnsiJoinToTableLists:Ljava/lang/Boolean;
       334: ifnull        345
       337: aload_1
       338: aload_0
       339: getfield      #184                // Field org/jooq/ParserCLI$Args.transformAnsiJoinToTableLists:Ljava/lang/Boolean;
       342: invokevirtual #187                // Method org/jooq/conf/Settings.setTransformAnsiJoinToTableLists:(Ljava/lang/Boolean;)V
       345: aload_0
       346: getfield      #190                // Field org/jooq/ParserCLI$Args.transformTableListsToAnsiJoin:Ljava/lang/Boolean;
       349: ifnull        360
       352: aload_1
       353: aload_0
       354: getfield      #190                // Field org/jooq/ParserCLI$Args.transformTableListsToAnsiJoin:Ljava/lang/Boolean;
       357: invokevirtual #193                // Method org/jooq/conf/Settings.setTransformTableListsToAnsiJoin:(Ljava/lang/Boolean;)V
       360: aload_0
       361: getfield      #196                // Field org/jooq/ParserCLI$Args.transformUnneededArithmetic:Lorg/jooq/conf/TransformUnneededArithmeticExpressions;
       364: ifnull        375
       367: aload_1
       368: aload_0
       369: getfield      #196                // Field org/jooq/ParserCLI$Args.transformUnneededArithmetic:Lorg/jooq/conf/TransformUnneededArithmeticExpressions;
       372: invokevirtual #200                // Method org/jooq/conf/Settings.setTransformUnneededArithmeticExpressions:(Lorg/jooq/conf/TransformUnneededArithmeticExpressions;)V
       375: aload_0
       376: getfield      #204                // Field org/jooq/ParserCLI$Args.transformQualify:Lorg/jooq/conf/Transformation;
       379: ifnull        390
       382: aload_1
       383: aload_0
       384: getfield      #204                // Field org/jooq/ParserCLI$Args.transformQualify:Lorg/jooq/conf/Transformation;
       387: invokevirtual #208                // Method org/jooq/conf/Settings.setTransformRownum:(Lorg/jooq/conf/Transformation;)V
       390: aload_0
       391: getfield      #212                // Field org/jooq/ParserCLI$Args.transformRownum:Lorg/jooq/conf/Transformation;
       394: ifnull        405
       397: aload_1
       398: aload_0
       399: getfield      #212                // Field org/jooq/ParserCLI$Args.transformRownum:Lorg/jooq/conf/Transformation;
       402: invokevirtual #208                // Method org/jooq/conf/Settings.setTransformRownum:(Lorg/jooq/conf/Transformation;)V
       405: return
      LineNumberTable:
        line 103: 0
        line 104: 7
        line 105: 15
        line 106: 22
        line 107: 30
        line 108: 37
        line 109: 45
        line 110: 52
        line 111: 60
        line 112: 67
        line 113: 75
        line 114: 82
        line 115: 90
        line 116: 97
        line 117: 105
        line 118: 112
        line 119: 120
        line 120: 127
        line 121: 135
        line 122: 142
        line 123: 150
        line 124: 157
        line 125: 165
        line 126: 172
        line 127: 180
        line 128: 187
        line 129: 195
        line 130: 202
        line 131: 210
        line 132: 217
        line 133: 225
        line 134: 232
        line 135: 240
        line 136: 247
        line 137: 255
        line 138: 262
        line 139: 270
        line 140: 277
        line 141: 285
        line 142: 292
        line 143: 300
        line 144: 307
        line 145: 315
        line 146: 322
        line 147: 330
        line 148: 337
        line 149: 345
        line 150: 352
        line 151: 360
        line 152: 367
        line 153: 375
        line 154: 382
        line 155: 390
        line 156: 397
        line 157: 405
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     406     0     a   Lorg/jooq/ParserCLI$Args;
            0     406     1 settings   Lorg/jooq/conf/Settings;
      StackMapTable: number_of_entries = 27
        frame_type = 15 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */

  private static final <E extends java.lang.Enum<E>> void parseInteractive(java.lang.Class<E>, java.lang.String, java.util.function.Consumer<? super E>, java.lang.Runnable);
    descriptor: (Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=3, locals=5, args_size=4
         0: aload_1
         1: ifnull        18
         4: aload_2
         5: aload_0
         6: aload_1
         7: invokevirtual #215                // Method java/lang/String.toUpperCase:()Ljava/lang/String;
        10: invokestatic  #221                // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
        13: invokeinterface #227,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
        18: aload_3
        19: invokeinterface #233,  1          // InterfaceMethod java/lang/Runnable.run:()V
        24: goto          34
        27: astore        4
        29: aload_1
        30: aload_0
        31: invokestatic  #239                // Method invalid:(Ljava/lang/String;Ljava/lang/Class;)V
        34: return
      Exception table:
         from    to  target type
             0    24    27   Class java/lang/IllegalArgumentException
      LineNumberTable:
        line 166: 0
        line 167: 4
        line 169: 18
        line 173: 24
        line 171: 27
        line 172: 29
        line 174: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           29       5     4     e   Ljava/lang/IllegalArgumentException;
            0      35     0  type   Ljava/lang/Class;
            0      35     1   arg   Ljava/lang/String;
            0      35     2 onSuccess   Ljava/util/function/Consumer;
            0      35     3 display   Ljava/lang/Runnable;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      35     0  type   Ljava/lang/Class<TE;>;
            0      35     2 onSuccess   Ljava/util/function/Consumer<-TE;>;
      StackMapTable: number_of_entries = 3
        frame_type = 18 /* same */
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class java/lang/IllegalArgumentException ]
        frame_type = 6 /* same */
    Signature: #1058                        // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/String;Ljava/util/function/Consumer<-TE;>;Ljava/lang/Runnable;)V

  private static final void interactiveMode(org.jooq.DSLContext, org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/DSLContext;Lorg/jooq/ParserCLI$Args;)V
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=4, locals=8, args_size=2
         0: new           #245                // class java/util/Scanner
         3: dup
         4: getstatic     #247                // Field java/lang/System.in:Ljava/io/InputStream;
         7: invokespecial #253                // Method java/util/Scanner."<init>":(Ljava/io/InputStream;)V
        10: astore_2
        11: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        14: ldc_w         #260                // String >
        17: invokevirtual #262                // Method java/io/PrintStream.print:(Ljava/lang/String;)V
        20: aload_2
        21: invokevirtual #267                // Method java/util/Scanner.nextLine:()Ljava/lang/String;
        24: astore_3
        25: aload_1
        26: getfield      #270                // Field org/jooq/ParserCLI$Args.history:Ljava/util/List;
        29: aload_3
        30: invokeinterface #274,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
        35: pop
        36: aload_3
        37: ldc_w         #280                // String ^/[^/*].*$
        40: invokevirtual #282                // Method java/lang/String.matches:(Ljava/lang/String;)Z
        43: istore        4
        45: aload_1
        46: getfield      #286                // Field org/jooq/ParserCLI$Args.sql:Ljava/lang/String;
        49: ifnonnull     1355
        52: iload         4
        54: ifeq          1355
        57: ldc_w         #289                // String /q
        60: aload_3
        61: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        64: ifne          97
        67: ldc_w         #294                // String /quit
        70: aload_3
        71: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        74: ifne          97
        77: ldc_w         #296                // String /e
        80: aload_3
        81: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        84: ifne          97
        87: ldc_w         #298                // String /exit
        90: aload_3
        91: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        94: ifeq          109
        97: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       100: ldc_w         #300                // String Bye
       103: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       106: goto          1444
       109: ldc_w         #305                // String /?
       112: aload_3
       113: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       116: ifne          139
       119: ldc_w         #307                // String /h
       122: aload_3
       123: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       126: ifne          139
       129: ldc_w         #309                // String /help
       132: aload_3
       133: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       136: ifeq          145
       139: invokestatic  #311                // Method helpInteractive:()V
       142: goto          1334
       145: ldc_w         #314                // String /d
       148: aload_3
       149: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       152: ifne          165
       155: ldc_w         #316                // String /display
       158: aload_3
       159: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       162: ifeq          172
       165: aload_1
       166: invokestatic  #318                // Method displayArguments:(Lorg/jooq/ParserCLI$Args;)V
       169: goto          1334
       172: getstatic     #322                // Field FLAG:Ljava/util/regex/Pattern;
       175: aload_3
       176: invokevirtual #326                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       179: astore        5
       181: aload         5
       183: invokevirtual #332                // Method java/util/regex/Matcher.find:()Z
       186: ifeq          1313
       189: aload         5
       191: iconst_1
       192: invokevirtual #338                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
       195: astore        6
       197: aload         5
       199: iconst_2
       200: invokevirtual #338                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
       203: astore        7
       205: aload         6
       207: ifnull        1310
       210: ldc_w         #342                // String f
       213: aload         6
       215: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       218: ifne          232
       221: ldc_w         #344                // String formatted
       224: aload         6
       226: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       229: ifeq          259
       232: aload         7
       234: ifnull        252
       237: aload_1
       238: aload         7
       240: invokevirtual #345                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       243: invokestatic  #348                // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
       246: invokestatic  #353                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       249: putfield      #31                 // Field org/jooq/ParserCLI$Args.formatted:Ljava/lang/Boolean;
       252: aload_1
       253: invokestatic  #356                // Method displayFormatted:(Lorg/jooq/ParserCLI$Args;)V
       256: goto          1310
       259: ldc_w         #359                // String k
       262: aload         6
       264: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       267: ifne          281
       270: ldc_w         #361                // String keyword
       273: aload         6
       275: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       278: ifeq          304
       281: ldc_w         #363                // class org/jooq/conf/RenderKeywordCase
       284: aload         7
       286: aload_1
       287: invokedynamic #365,  0            // InvokeDynamic #1:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
       292: aload_1
       293: invokedynamic #368,  0            // InvokeDynamic #2:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
       298: invokestatic  #371                // Method parseInteractive:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
       301: goto          1310
       304: ldc_w         #375                // String i
       307: aload         6
       309: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       312: ifne          326
       315: ldc_w         #377                // String identifier
       318: aload         6
       320: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       323: ifeq          349
       326: ldc_w         #379                // class org/jooq/conf/RenderNameCase
       329: aload         7
       331: aload_1
       332: invokedynamic #381,  0            // InvokeDynamic #3:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
       337: aload_1
       338: invokedynamic #382,  0            // InvokeDynamic #4:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
       343: invokestatic  #371                // Method parseInteractive:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
       346: goto          1310
       349: ldc_w         #383                // String Q
       352: aload         6
       354: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       357: ifne          371
       360: ldc_w         #385                // String quoted
       363: aload         6
       365: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       368: ifeq          394
       371: ldc_w         #386                // class org/jooq/conf/RenderQuotedNames
       374: aload         7
       376: aload_1
       377: invokedynamic #388,  0            // InvokeDynamic #5:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
       382: aload_1
       383: invokedynamic #389,  0            // InvokeDynamic #6:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
       388: invokestatic  #371                // Method parseInteractive:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
       391: goto          1310
       394: ldc_w         #390                // String F
       397: aload         6
       399: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       402: ifne          416
       405: ldc_w         #392                // String from-dialect
       408: aload         6
       410: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       413: ifeq          439
       416: ldc_w         #394                // class org/jooq/SQLDialect
       419: aload         7
       421: aload_1
       422: invokedynamic #396,  0            // InvokeDynamic #7:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
       427: aload_1
       428: invokedynamic #397,  0            // InvokeDynamic #8:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
       433: invokestatic  #371                // Method parseInteractive:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
       436: goto          1310
       439: ldc_w         #398                // String S
       442: aload         6
       444: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       447: ifne          461
       450: ldc_w         #400                // String schema
       453: aload         6
       455: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       458: ifeq          474
       461: aload_1
       462: aload         7
       464: putfield      #402                // Field org/jooq/ParserCLI$Args.schema:Ljava/lang/String;
       467: aload_1
       468: invokestatic  #404                // Method displaySchema:(Lorg/jooq/ParserCLI$Args;)V
       471: goto          1310
       474: ldc_w         #407                // String render-coalesce-to-empty-string-in-concat
       477: aload         6
       479: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       482: ifeq          512
       485: aload         7
       487: ifnull        505
       490: aload_1
       491: aload         7
       493: invokevirtual #345                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       496: invokestatic  #348                // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
       499: invokestatic  #353                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       502: putfield      #146                // Field org/jooq/ParserCLI$Args.renderCoalesceToEmptyStringInConcat:Ljava/lang/Boolean;
       505: aload_1
       506: invokestatic  #409                // Method displayRenderCoalesceToEmptyStringInConcat:(Lorg/jooq/ParserCLI$Args;)V
       509: goto          1310
       512: ldc_w         #412                // String parse-date-format
       515: aload         6
       517: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       520: ifeq          541
       523: aload         7
       525: ifnull        534
       528: aload_1
       529: aload         7
       531: putfield      #72                 // Field org/jooq/ParserCLI$Args.parseDateFormat:Ljava/lang/String;
       534: aload_1
       535: invokestatic  #414                // Method displayParseDateFormat:(Lorg/jooq/ParserCLI$Args;)V
       538: goto          1310
       541: ldc_w         #417                // String parse-ignore-comments
       544: aload         6
       546: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       549: ifeq          579
       552: aload         7
       554: ifnull        572
       557: aload_1
       558: aload         7
       560: invokevirtual #345                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       563: invokestatic  #348                // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
       566: invokestatic  #353                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       569: putfield      #80                 // Field org/jooq/ParserCLI$Args.parseIgnoreComments:Ljava/lang/Boolean;
       572: aload_1
       573: invokestatic  #419                // Method displayParseIgnoreComments:(Lorg/jooq/ParserCLI$Args;)V
       576: goto          1310
       579: ldc_w         #422                // String parse-ignore-comment-start
       582: aload         6
       584: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       587: ifeq          608
       590: aload         7
       592: ifnull        601
       595: aload_1
       596: aload         7
       598: putfield      #86                 // Field org/jooq/ParserCLI$Args.parseIgnoreCommentStart:Ljava/lang/String;
       601: aload_1
       602: invokestatic  #424                // Method displayParseIgnoreCommentStart:(Lorg/jooq/ParserCLI$Args;)V
       605: goto          1310
       608: ldc_w         #427                // String parse-ignore-comment-stop
       611: aload         6
       613: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       616: ifeq          637
       619: aload         7
       621: ifnull        630
       624: aload_1
       625: aload         7
       627: putfield      #92                 // Field org/jooq/ParserCLI$Args.parseIgnoreCommentStop:Ljava/lang/String;
       630: aload_1
       631: invokestatic  #429                // Method displayParseIgnoreCommentStop:(Lorg/jooq/ParserCLI$Args;)V
       634: goto          1310
       637: ldc_w         #432                // String parse-locale
       640: aload         6
       642: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       645: ifeq          669
       648: aload         7
       650: ifnull        662
       653: aload_1
       654: aload         7
       656: invokestatic  #434                // Method java/util/Locale.forLanguageTag:(Ljava/lang/String;)Ljava/util/Locale;
       659: putfield      #98                 // Field org/jooq/ParserCLI$Args.parseLocale:Ljava/util/Locale;
       662: aload_1
       663: invokestatic  #440                // Method displayParseLocale:(Lorg/jooq/ParserCLI$Args;)V
       666: goto          1310
       669: ldc_w         #443                // String parse-name-case
       672: aload         6
       674: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       677: ifeq          703
       680: ldc_w         #445                // class org/jooq/conf/ParseNameCase
       683: aload         7
       685: aload_1
       686: invokedynamic #447,  0            // InvokeDynamic #9:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
       691: aload_1
       692: invokedynamic #448,  0            // InvokeDynamic #10:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
       697: invokestatic  #371                // Method parseInteractive:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
       700: goto          1310
       703: ldc_w         #449                // String parse-named-param-prefix
       706: aload         6
       708: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       711: ifeq          732
       714: aload         7
       716: ifnull        725
       719: aload_1
       720: aload         7
       722: putfield      #114                // Field org/jooq/ParserCLI$Args.parseNamedParamPrefix:Ljava/lang/String;
       725: aload_1
       726: invokestatic  #451                // Method displayParseNamedParamPrefix:(Lorg/jooq/ParserCLI$Args;)V
       729: goto          1310
       732: ldc_w         #454                // String parse-retain-comments-between-queries
       735: aload         6
       737: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       740: ifeq          770
       743: aload         7
       745: ifnull        763
       748: aload_1
       749: aload         7
       751: invokevirtual #345                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       754: invokestatic  #348                // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
       757: invokestatic  #353                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       760: putfield      #120                // Field org/jooq/ParserCLI$Args.parseRetainCommentsBetweenQueries:Ljava/lang/Boolean;
       763: aload_1
       764: invokestatic  #456                // Method displayParseRetainCommentsBetweenQueries:(Lorg/jooq/ParserCLI$Args;)V
       767: goto          1310
       770: ldc_w         #459                // String parse-set-commands
       773: aload         6
       775: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       778: ifeq          808
       781: aload         7
       783: ifnull        801
       786: aload_1
       787: aload         7
       789: invokevirtual #345                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       792: invokestatic  #348                // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
       795: invokestatic  #353                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       798: putfield      #126                // Field org/jooq/ParserCLI$Args.parseSetCommands:Ljava/lang/Boolean;
       801: aload_1
       802: invokestatic  #461                // Method displayParseSetCommands:(Lorg/jooq/ParserCLI$Args;)V
       805: goto          1310
       808: ldc_w         #464                // String parse-timestamp-format
       811: aload         6
       813: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       816: ifeq          837
       819: aload         7
       821: ifnull        830
       824: aload_1
       825: aload         7
       827: putfield      #132                // Field org/jooq/ParserCLI$Args.parseTimestampFormat:Ljava/lang/String;
       830: aload_1
       831: invokestatic  #466                // Method displayParseTimestampFormat:(Lorg/jooq/ParserCLI$Args;)V
       834: goto          1310
       837: ldc_w         #469                // String parse-unknown-functions
       840: aload         6
       842: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       845: ifeq          871
       848: ldc_w         #471                // class org/jooq/conf/ParseUnknownFunctions
       851: aload         7
       853: aload_1
       854: invokedynamic #473,  0            // InvokeDynamic #11:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
       859: aload_1
       860: invokedynamic #474,  0            // InvokeDynamic #12:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
       865: invokestatic  #371                // Method parseInteractive:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
       868: goto          1310
       871: ldc_w         #475                // String parse-unsupported-syntax
       874: aload         6
       876: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       879: ifeq          905
       882: ldc_w         #477                // class org/jooq/conf/ParseUnsupportedSyntax
       885: aload         7
       887: aload_1
       888: invokedynamic #479,  0            // InvokeDynamic #13:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
       893: aload_1
       894: invokedynamic #480,  0            // InvokeDynamic #14:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
       899: invokestatic  #371                // Method parseInteractive:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
       902: goto          1310
       905: ldc_w         #481                // String render-optional-inner-keyword
       908: aload         6
       910: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       913: ifeq          939
       916: ldc_w         #483                // class org/jooq/conf/RenderOptionalKeyword
       919: aload         7
       921: aload_1
       922: invokedynamic #485,  0            // InvokeDynamic #15:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
       927: aload_1
       928: invokedynamic #486,  0            // InvokeDynamic #16:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
       933: invokestatic  #371                // Method parseInteractive:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
       936: goto          1310
       939: ldc_w         #487                // String render-optional-outer-keyword
       942: aload         6
       944: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       947: ifeq          973
       950: ldc_w         #483                // class org/jooq/conf/RenderOptionalKeyword
       953: aload         7
       955: aload_1
       956: invokedynamic #489,  0            // InvokeDynamic #17:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
       961: aload_1
       962: invokedynamic #490,  0            // InvokeDynamic #18:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
       967: invokestatic  #371                // Method parseInteractive:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
       970: goto          1310
       973: ldc_w         #491                // String render-optional-as-keyword-for-field-aliases
       976: aload         6
       978: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       981: ifeq          1007
       984: ldc_w         #483                // class org/jooq/conf/RenderOptionalKeyword
       987: aload         7
       989: aload_1
       990: invokedynamic #493,  0            // InvokeDynamic #19:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
       995: aload_1
       996: invokedynamic #494,  0            // InvokeDynamic #20:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
      1001: invokestatic  #371                // Method parseInteractive:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
      1004: goto          1310
      1007: ldc_w         #495                // String render-optional-as-keyword-for-table-aliases
      1010: aload         6
      1012: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      1015: ifeq          1041
      1018: ldc_w         #483                // class org/jooq/conf/RenderOptionalKeyword
      1021: aload         7
      1023: aload_1
      1024: invokedynamic #497,  0            // InvokeDynamic #21:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
      1029: aload_1
      1030: invokedynamic #498,  0            // InvokeDynamic #22:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
      1035: invokestatic  #371                // Method parseInteractive:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
      1038: goto          1310
      1041: ldc_w         #499                // String transform-patterns
      1044: aload         6
      1046: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      1049: ifeq          1079
      1052: aload         7
      1054: ifnull        1072
      1057: aload_1
      1058: aload         7
      1060: invokevirtual #345                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      1063: invokestatic  #348                // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      1066: invokestatic  #353                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      1069: putfield      #178                // Field org/jooq/ParserCLI$Args.transformPatterns:Ljava/lang/Boolean;
      1072: aload_1
      1073: invokestatic  #501                // Method displayTransformPatterns:(Lorg/jooq/ParserCLI$Args;)V
      1076: goto          1310
      1079: ldc_w         #504                // String transform-ansi-join-to-table-lists
      1082: aload         6
      1084: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      1087: ifeq          1117
      1090: aload         7
      1092: ifnull        1110
      1095: aload_1
      1096: aload         7
      1098: invokevirtual #345                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      1101: invokestatic  #348                // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      1104: invokestatic  #353                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      1107: putfield      #184                // Field org/jooq/ParserCLI$Args.transformAnsiJoinToTableLists:Ljava/lang/Boolean;
      1110: aload_1
      1111: invokestatic  #506                // Method displayTransformAnsiJoinToTablesLists:(Lorg/jooq/ParserCLI$Args;)V
      1114: goto          1310
      1117: ldc_w         #509                // String transform-qualify
      1120: aload         6
      1122: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      1125: ifeq          1151
      1128: ldc_w         #511                // class org/jooq/conf/Transformation
      1131: aload         7
      1133: aload_1
      1134: invokedynamic #513,  0            // InvokeDynamic #23:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
      1139: aload_1
      1140: invokedynamic #514,  0            // InvokeDynamic #24:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
      1145: invokestatic  #371                // Method parseInteractive:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
      1148: goto          1310
      1151: ldc_w         #515                // String transform-rownum
      1154: aload         6
      1156: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      1159: ifeq          1185
      1162: ldc_w         #511                // class org/jooq/conf/Transformation
      1165: aload         7
      1167: aload_1
      1168: invokedynamic #517,  0            // InvokeDynamic #25:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
      1173: aload_1
      1174: invokedynamic #518,  0            // InvokeDynamic #26:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
      1179: invokestatic  #371                // Method parseInteractive:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
      1182: goto          1310
      1185: ldc_w         #519                // String transform-table-lists-to-ansi-join
      1188: aload         6
      1190: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      1193: ifeq          1223
      1196: aload         7
      1198: ifnull        1216
      1201: aload_1
      1202: aload         7
      1204: invokevirtual #345                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      1207: invokestatic  #348                // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      1210: invokestatic  #353                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      1213: putfield      #190                // Field org/jooq/ParserCLI$Args.transformTableListsToAnsiJoin:Ljava/lang/Boolean;
      1216: aload_1
      1217: invokestatic  #521                // Method displayTransformTableListsToAnsiJoin:(Lorg/jooq/ParserCLI$Args;)V
      1220: goto          1310
      1223: ldc_w         #524                // String transform-unneeded-arithmetic
      1226: aload         6
      1228: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      1231: ifeq          1257
      1234: ldc_w         #526                // class org/jooq/conf/TransformUnneededArithmeticExpressions
      1237: aload         7
      1239: aload_1
      1240: invokedynamic #528,  0            // InvokeDynamic #27:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
      1245: aload_1
      1246: invokedynamic #529,  0            // InvokeDynamic #28:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
      1251: invokestatic  #371                // Method parseInteractive:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
      1254: goto          1310
      1257: ldc_w         #530                // String t
      1260: aload         6
      1262: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      1265: ifne          1290
      1268: ldc_w         #532                // String T
      1271: aload         6
      1273: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      1276: ifne          1290
      1279: ldc_w         #534                // String to-dialect
      1282: aload         6
      1284: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      1287: ifeq          1310
      1290: ldc_w         #394                // class org/jooq/SQLDialect
      1293: aload         7
      1295: aload_1
      1296: invokedynamic #536,  0            // InvokeDynamic #29:accept:(Lorg/jooq/ParserCLI$Args;)Ljava/util/function/Consumer;
      1301: aload_1
      1302: invokedynamic #537,  0            // InvokeDynamic #30:run:(Lorg/jooq/ParserCLI$Args;)Ljava/lang/Runnable;
      1307: invokestatic  #371                // Method parseInteractive:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
      1310: goto          1334
      1313: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
      1316: aload_3
      1317: invokedynamic #538,  0            // InvokeDynamic #31:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      1322: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      1325: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
      1328: ldc_w         #542                // String Type /h for help
      1331: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      1334: aload_1
      1335: aload_0
      1336: invokeinterface #544,  1          // InterfaceMethod org/jooq/DSLContext.settings:()Lorg/jooq/conf/Settings;
      1341: invokestatic  #550                // Method settings:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/Settings;)V
      1344: aload_1
      1345: aload_0
      1346: invokeinterface #544,  1          // InterfaceMethod org/jooq/DSLContext.settings:()Lorg/jooq/conf/Settings;
      1351: invokestatic  #553                // Method ctx:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/Settings;)Lorg/jooq/DSLContext;
      1354: astore_0
      1355: aload_1
      1356: getfield      #286                // Field org/jooq/ParserCLI$Args.sql:Ljava/lang/String;
      1359: ifnonnull     1367
      1362: iload         4
      1364: ifne          1428
      1367: aload_1
      1368: getfield      #286                // Field org/jooq/ParserCLI$Args.sql:Ljava/lang/String;
      1371: ifnonnull     1382
      1374: aload_1
      1375: aload_3
      1376: putfield      #286                // Field org/jooq/ParserCLI$Args.sql:Ljava/lang/String;
      1379: goto          1396
      1382: aload_1
      1383: aload_1
      1384: getfield      #286                // Field org/jooq/ParserCLI$Args.sql:Ljava/lang/String;
      1387: aload_3
      1388: invokedynamic #557,  0            // InvokeDynamic #32:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      1393: putfield      #286                // Field org/jooq/ParserCLI$Args.sql:Ljava/lang/String;
      1396: aload_1
      1397: getfield      #286                // Field org/jooq/ParserCLI$Args.sql:Ljava/lang/String;
      1400: invokevirtual #560                // Method java/lang/String.trim:()Ljava/lang/String;
      1403: ldc_w         #563                // String ;
      1406: invokevirtual #565                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      1409: ifeq          1428
      1412: aload_0
      1413: aload_1
      1414: invokestatic  #568                // Method render:(Lorg/jooq/DSLContext;Lorg/jooq/ParserCLI$Args;)V
      1417: aload_1
      1418: aconst_null
      1419: putfield      #286                // Field org/jooq/ParserCLI$Args.sql:Ljava/lang/String;
      1422: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
      1425: invokevirtual #572                // Method java/io/PrintStream.println:()V
      1428: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
      1431: ldc_w         #260                // String >
      1434: invokevirtual #262                // Method java/io/PrintStream.print:(Ljava/lang/String;)V
      1437: aload_2
      1438: invokevirtual #574                // Method java/util/Scanner.hasNextLine:()Z
      1441: ifne          20
      1444: return
      LineNumberTable:
        line 177: 0
        line 179: 11
        line 183: 20
        line 187: 25
        line 190: 36
        line 192: 45
        line 193: 57
        line 194: 81
        line 195: 97
        line 196: 106
        line 198: 109
        line 199: 139
        line 200: 145
        line 201: 165
        line 203: 172
        line 205: 181
        line 206: 189
        line 207: 197
        line 209: 205
        line 210: 210
        line 211: 232
        line 212: 237
        line 214: 252
        line 216: 259
        line 217: 281
        line 218: 304
        line 219: 326
        line 220: 349
        line 221: 371
        line 222: 394
        line 223: 416
        line 224: 439
        line 225: 461
        line 226: 467
        line 228: 474
        line 229: 485
        line 230: 490
        line 232: 505
        line 234: 512
        line 235: 523
        line 236: 528
        line 238: 534
        line 240: 541
        line 241: 552
        line 242: 557
        line 244: 572
        line 246: 579
        line 247: 590
        line 248: 595
        line 250: 601
        line 252: 608
        line 253: 619
        line 254: 624
        line 256: 630
        line 258: 637
        line 259: 648
        line 260: 653
        line 262: 662
        line 264: 669
        line 265: 680
        line 266: 703
        line 267: 714
        line 268: 719
        line 270: 725
        line 272: 732
        line 273: 743
        line 274: 748
        line 276: 763
        line 278: 770
        line 279: 781
        line 280: 786
        line 282: 801
        line 284: 808
        line 285: 819
        line 286: 824
        line 288: 830
        line 290: 837
        line 291: 848
        line 292: 871
        line 293: 882
        line 294: 905
        line 295: 916
        line 296: 939
        line 297: 950
        line 298: 973
        line 299: 984
        line 300: 1007
        line 301: 1018
        line 302: 1041
        line 303: 1052
        line 304: 1057
        line 306: 1072
        line 308: 1079
        line 309: 1090
        line 310: 1095
        line 312: 1110
        line 314: 1117
        line 315: 1128
        line 316: 1151
        line 317: 1162
        line 318: 1185
        line 319: 1196
        line 320: 1201
        line 322: 1216
        line 324: 1223
        line 325: 1234
        line 328: 1257
        line 329: 1290
        line 331: 1310
        line 333: 1313
        line 334: 1325
        line 338: 1334
        line 339: 1344
        line 342: 1355
        line 343: 1367
        line 344: 1374
        line 346: 1382
        line 348: 1396
        line 349: 1412
        line 350: 1417
        line 351: 1422
        line 355: 1428
        line 357: 1437
        line 358: 1444
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          197    1113     6  flag   Ljava/lang/String;
          205    1105     7   arg   Ljava/lang/String;
          181    1153     5 matcher   Ljava/util/regex/Matcher;
           25    1412     3  line   Ljava/lang/String;
           45    1392     4 leadingSlash   Z
            0    1445     0   ctx   Lorg/jooq/DSLContext;
            0    1445     1     a   Lorg/jooq/ParserCLI$Args;
           11    1434     2  scan   Ljava/util/Scanner;
      StackMapTable: number_of_entries = 66
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ class java/util/Scanner ]
        frame_type = 253 /* append */
          offset_delta = 76
          locals = [ class java/lang/String, int ]
        frame_type = 11 /* same */
        frame_type = 29 /* same */
        frame_type = 5 /* same */
        frame_type = 19 /* same */
        frame_type = 6 /* same */
        frame_type = 254 /* append */
          offset_delta = 59
          locals = [ class java/util/regex/Matcher, class java/lang/String, class java/lang/String ]
        frame_type = 19 /* same */
        frame_type = 6 /* same */
        frame_type = 21 /* same */
        frame_type = 22 /* same */
        frame_type = 21 /* same */
        frame_type = 22 /* same */
        frame_type = 21 /* same */
        frame_type = 22 /* same */
        frame_type = 21 /* same */
        frame_type = 22 /* same */
        frame_type = 21 /* same */
        frame_type = 12 /* same */
        frame_type = 30 /* same */
        frame_type = 6 /* same */
        frame_type = 21 /* same */
        frame_type = 6 /* same */
        frame_type = 30 /* same */
        frame_type = 6 /* same */
        frame_type = 21 /* same */
        frame_type = 6 /* same */
        frame_type = 21 /* same */
        frame_type = 6 /* same */
        frame_type = 24 /* same */
        frame_type = 6 /* same */
        frame_type = 33 /* same */
        frame_type = 21 /* same */
        frame_type = 6 /* same */
        frame_type = 30 /* same */
        frame_type = 6 /* same */
        frame_type = 30 /* same */
        frame_type = 6 /* same */
        frame_type = 21 /* same */
        frame_type = 6 /* same */
        frame_type = 33 /* same */
        frame_type = 33 /* same */
        frame_type = 33 /* same */
        frame_type = 33 /* same */
        frame_type = 33 /* same */
        frame_type = 33 /* same */
        frame_type = 30 /* same */
        frame_type = 6 /* same */
        frame_type = 30 /* same */
        frame_type = 6 /* same */
        frame_type = 33 /* same */
        frame_type = 33 /* same */
        frame_type = 30 /* same */
        frame_type = 6 /* same */
        frame_type = 33 /* same */
        frame_type = 32 /* same */
        frame_type = 249 /* chop */
          offset_delta = 19
        frame_type = 2 /* same */
        frame_type = 250 /* chop */
          offset_delta = 20
        frame_type = 20 /* same */
        frame_type = 11 /* same */
        frame_type = 14 /* same */
        frame_type = 13 /* same */
        frame_type = 31 /* same */
        frame_type = 249 /* chop */
          offset_delta = 15

  private static final void displayArguments(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #356                // Method displayFormatted:(Lorg/jooq/ParserCLI$Args;)V
         4: aload_0
         5: invokestatic  #577                // Method displayFromDialect:(Lorg/jooq/ParserCLI$Args;)V
         8: aload_0
         9: invokestatic  #580                // Method displayToDialect:(Lorg/jooq/ParserCLI$Args;)V
        12: aload_0
        13: invokestatic  #583                // Method displayKeywords:(Lorg/jooq/ParserCLI$Args;)V
        16: aload_0
        17: invokestatic  #586                // Method displayIdentifiers:(Lorg/jooq/ParserCLI$Args;)V
        20: aload_0
        21: invokestatic  #589                // Method displayQuoted:(Lorg/jooq/ParserCLI$Args;)V
        24: aload_0
        25: invokestatic  #506                // Method displayTransformAnsiJoinToTablesLists:(Lorg/jooq/ParserCLI$Args;)V
        28: aload_0
        29: invokestatic  #592                // Method displayTransformQualify:(Lorg/jooq/ParserCLI$Args;)V
        32: aload_0
        33: invokestatic  #595                // Method displayTransformRownum:(Lorg/jooq/ParserCLI$Args;)V
        36: aload_0
        37: invokestatic  #521                // Method displayTransformTableListsToAnsiJoin:(Lorg/jooq/ParserCLI$Args;)V
        40: aload_0
        41: invokestatic  #598                // Method displayTransformUnneededArithmetic:(Lorg/jooq/ParserCLI$Args;)V
        44: aload_0
        45: invokestatic  #404                // Method displaySchema:(Lorg/jooq/ParserCLI$Args;)V
        48: return
      LineNumberTable:
        line 361: 0
        line 362: 4
        line 363: 8
        line 364: 12
        line 365: 16
        line 366: 20
        line 367: 24
        line 368: 28
        line 369: 32
        line 370: 36
        line 371: 40
        line 372: 44
        line 373: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displaySchema(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #402                // Field org/jooq/ParserCLI$Args.schema:Ljava/lang/String;
         7: invokedynamic #601,  0            // InvokeDynamic #33:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 376: 0
        line 377: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayIdentifiers(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #49                 // Field org/jooq/ParserCLI$Args.name:Lorg/jooq/conf/RenderNameCase;
         7: invokedynamic #602,  0            // InvokeDynamic #34:makeConcatWithConstants:(Lorg/jooq/conf/RenderNameCase;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 380: 0
        line 381: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayQuoted(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #57                 // Field org/jooq/ParserCLI$Args.quoted:Lorg/jooq/conf/RenderQuotedNames;
         7: invokedynamic #605,  0            // InvokeDynamic #35:makeConcatWithConstants:(Lorg/jooq/conf/RenderQuotedNames;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 384: 0
        line 385: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayKeywords(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #41                 // Field org/jooq/ParserCLI$Args.keywords:Lorg/jooq/conf/RenderKeywordCase;
         7: invokedynamic #608,  0            // InvokeDynamic #36:makeConcatWithConstants:(Lorg/jooq/conf/RenderKeywordCase;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 388: 0
        line 389: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayToDialect(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #19                 // Field org/jooq/ParserCLI$Args.toDialect:Lorg/jooq/SQLDialect;
         7: invokedynamic #611,  0            // InvokeDynamic #37:makeConcatWithConstants:(Lorg/jooq/SQLDialect;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 392: 0
        line 393: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayFromDialect(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #65                 // Field org/jooq/ParserCLI$Args.fromDialect:Lorg/jooq/SQLDialect;
         7: invokedynamic #614,  0            // InvokeDynamic #38:makeConcatWithConstants:(Lorg/jooq/SQLDialect;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 396: 0
        line 397: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayFormatted(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #31                 // Field org/jooq/ParserCLI$Args.formatted:Ljava/lang/Boolean;
         7: invokedynamic #615,  0            // InvokeDynamic #39:makeConcatWithConstants:(Ljava/lang/Boolean;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 400: 0
        line 401: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayParseDateFormat(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #72                 // Field org/jooq/ParserCLI$Args.parseDateFormat:Ljava/lang/String;
         7: invokedynamic #618,  0            // InvokeDynamic #40:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 404: 0
        line 405: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayParseIgnoreComments(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #80                 // Field org/jooq/ParserCLI$Args.parseIgnoreComments:Ljava/lang/Boolean;
         7: invokedynamic #619,  0            // InvokeDynamic #41:makeConcatWithConstants:(Ljava/lang/Boolean;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 408: 0
        line 409: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayParseIgnoreCommentStart(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #86                 // Field org/jooq/ParserCLI$Args.parseIgnoreCommentStart:Ljava/lang/String;
         7: invokedynamic #620,  0            // InvokeDynamic #42:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 412: 0
        line 413: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayParseIgnoreCommentStop(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #92                 // Field org/jooq/ParserCLI$Args.parseIgnoreCommentStop:Ljava/lang/String;
         7: invokedynamic #621,  0            // InvokeDynamic #43:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 416: 0
        line 417: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayParseLocale(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #98                 // Field org/jooq/ParserCLI$Args.parseLocale:Ljava/util/Locale;
         7: invokedynamic #622,  0            // InvokeDynamic #44:makeConcatWithConstants:(Ljava/util/Locale;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 420: 0
        line 421: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayParseNameCase(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #106                // Field org/jooq/ParserCLI$Args.parseNameCase:Lorg/jooq/conf/ParseNameCase;
         7: invokedynamic #625,  0            // InvokeDynamic #45:makeConcatWithConstants:(Lorg/jooq/conf/ParseNameCase;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 424: 0
        line 425: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayParseNamedParamPrefix(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #114                // Field org/jooq/ParserCLI$Args.parseNamedParamPrefix:Ljava/lang/String;
         7: invokedynamic #628,  0            // InvokeDynamic #46:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 428: 0
        line 429: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayParseRetainCommentsBetweenQueries(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #120                // Field org/jooq/ParserCLI$Args.parseRetainCommentsBetweenQueries:Ljava/lang/Boolean;
         7: invokedynamic #629,  0            // InvokeDynamic #47:makeConcatWithConstants:(Ljava/lang/Boolean;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 432: 0
        line 433: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayParseSetCommands(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #126                // Field org/jooq/ParserCLI$Args.parseSetCommands:Ljava/lang/Boolean;
         7: invokedynamic #630,  0            // InvokeDynamic #48:makeConcatWithConstants:(Ljava/lang/Boolean;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 436: 0
        line 437: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayParseTimestampFormat(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #132                // Field org/jooq/ParserCLI$Args.parseTimestampFormat:Ljava/lang/String;
         7: invokedynamic #631,  0            // InvokeDynamic #49:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 440: 0
        line 441: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayParseUnknownFunctions(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #138                // Field org/jooq/ParserCLI$Args.parseUnknownFunctions:Lorg/jooq/conf/ParseUnknownFunctions;
         7: invokedynamic #632,  0            // InvokeDynamic #50:makeConcatWithConstants:(Lorg/jooq/conf/ParseUnknownFunctions;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 444: 0
        line 445: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayParseUnsupportedSyntax(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #635                // Field org/jooq/ParserCLI$Args.parseUnsupportedSyntax:Lorg/jooq/conf/ParseUnsupportedSyntax;
         7: invokedynamic #639,  0            // InvokeDynamic #51:makeConcatWithConstants:(Lorg/jooq/conf/ParseUnsupportedSyntax;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 448: 0
        line 449: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayRenderCoalesceToEmptyStringInConcat(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #146                // Field org/jooq/ParserCLI$Args.renderCoalesceToEmptyStringInConcat:Ljava/lang/Boolean;
         7: invokedynamic #642,  0            // InvokeDynamic #52:makeConcatWithConstants:(Ljava/lang/Boolean;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 452: 0
        line 453: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayRenderOptionalInnerKeyword(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #152                // Field org/jooq/ParserCLI$Args.renderOptionalInnerKeyword:Lorg/jooq/conf/RenderOptionalKeyword;
         7: invokedynamic #643,  0            // InvokeDynamic #53:makeConcatWithConstants:(Lorg/jooq/conf/RenderOptionalKeyword;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 456: 0
        line 457: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayRenderOptionalOuterKeyword(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #160                // Field org/jooq/ParserCLI$Args.renderOptionalOuterKeyword:Lorg/jooq/conf/RenderOptionalKeyword;
         7: invokedynamic #646,  0            // InvokeDynamic #54:makeConcatWithConstants:(Lorg/jooq/conf/RenderOptionalKeyword;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 460: 0
        line 461: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayRenderOptionalAsKeywordForFieldAliases(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #166                // Field org/jooq/ParserCLI$Args.renderOptionalAsKeywordForFieldAliases:Lorg/jooq/conf/RenderOptionalKeyword;
         7: invokedynamic #647,  0            // InvokeDynamic #55:makeConcatWithConstants:(Lorg/jooq/conf/RenderOptionalKeyword;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 464: 0
        line 465: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayRenderOptionalAsKeywordForTableAliases(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #172                // Field org/jooq/ParserCLI$Args.renderOptionalAsKeywordForTableAliases:Lorg/jooq/conf/RenderOptionalKeyword;
         7: invokedynamic #648,  0            // InvokeDynamic #56:makeConcatWithConstants:(Lorg/jooq/conf/RenderOptionalKeyword;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 468: 0
        line 469: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayTransformPatterns(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #178                // Field org/jooq/ParserCLI$Args.transformPatterns:Ljava/lang/Boolean;
         7: invokedynamic #649,  0            // InvokeDynamic #57:makeConcatWithConstants:(Ljava/lang/Boolean;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 472: 0
        line 473: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayTransformAnsiJoinToTablesLists(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #184                // Field org/jooq/ParserCLI$Args.transformAnsiJoinToTableLists:Ljava/lang/Boolean;
         7: invokedynamic #650,  0            // InvokeDynamic #58:makeConcatWithConstants:(Ljava/lang/Boolean;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 476: 0
        line 477: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayTransformQualify(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #204                // Field org/jooq/ParserCLI$Args.transformQualify:Lorg/jooq/conf/Transformation;
         7: invokedynamic #651,  0            // InvokeDynamic #59:makeConcatWithConstants:(Lorg/jooq/conf/Transformation;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 480: 0
        line 481: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayTransformRownum(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #212                // Field org/jooq/ParserCLI$Args.transformRownum:Lorg/jooq/conf/Transformation;
         7: invokedynamic #654,  0            // InvokeDynamic #60:makeConcatWithConstants:(Lorg/jooq/conf/Transformation;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 484: 0
        line 485: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayTransformTableListsToAnsiJoin(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #190                // Field org/jooq/ParserCLI$Args.transformTableListsToAnsiJoin:Ljava/lang/Boolean;
         7: invokedynamic #655,  0            // InvokeDynamic #61:makeConcatWithConstants:(Ljava/lang/Boolean;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 488: 0
        line 489: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static void displayTransformUnneededArithmetic(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #196                // Field org/jooq/ParserCLI$Args.transformUnneededArithmetic:Lorg/jooq/conf/TransformUnneededArithmeticExpressions;
         7: invokedynamic #656,  0            // InvokeDynamic #62:makeConcatWithConstants:(Lorg/jooq/conf/TransformUnneededArithmeticExpressions;)Ljava/lang/String;
        12: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 492: 0
        line 493: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   Lorg/jooq/ParserCLI$Args;

  private static final void render(org.jooq.DSLContext, org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/DSLContext;Lorg/jooq/ParserCLI$Args;)V
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=4, locals=6, args_size=2
         0: aload_1
         1: getfield      #286                // Field org/jooq/ParserCLI$Args.sql:Ljava/lang/String;
         4: invokevirtual #560                // Method java/lang/String.trim:()Ljava/lang/String;
         7: astore_2
         8: aload_1
         9: getfield      #402                // Field org/jooq/ParserCLI$Args.schema:Ljava/lang/String;
        12: invokestatic  #659                // Method org/jooq/tools/StringUtils.isBlank:(Ljava/lang/String;)Z
        15: ifne          54
        18: aload_0
        19: astore_3
        20: aload_0
        21: invokeinterface #664,  1          // InterfaceMethod org/jooq/DSLContext.configuration:()Lorg/jooq/Configuration;
        26: aload_3
        27: aload_1
        28: invokedynamic #668,  0            // InvokeDynamic #63:provide:(Lorg/jooq/DSLContext;Lorg/jooq/ParserCLI$Args;)Lorg/jooq/MetaProvider;
        33: invokeinterface #672,  2          // InterfaceMethod org/jooq/Configuration.derive:(Lorg/jooq/MetaProvider;)Lorg/jooq/Configuration;
        38: invokedynamic #678,  0            // InvokeDynamic #64:apply:()Ljava/util/function/Function;
        43: invokeinterface #682,  2          // InterfaceMethod org/jooq/Configuration.deriveSettings:(Ljava/util/function/Function;)Lorg/jooq/Configuration;
        48: invokeinterface #686,  1          // InterfaceMethod org/jooq/Configuration.dsl:()Lorg/jooq/DSLContext;
        53: astore_0
        54: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        57: aload_0
        58: aload_0
        59: invokeinterface #690,  1          // InterfaceMethod org/jooq/DSLContext.parser:()Lorg/jooq/Parser;
        64: aload_1
        65: getfield      #286                // Field org/jooq/ParserCLI$Args.sql:Ljava/lang/String;
        68: invokeinterface #694,  2          // InterfaceMethod org/jooq/Parser.parse:(Ljava/lang/String;)Lorg/jooq/Queries;
        73: invokeinterface #700,  2          // InterfaceMethod org/jooq/DSLContext.render:(Lorg/jooq/QueryPart;)Ljava/lang/String;
        78: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        81: goto          161
        84: astore_3
        85: aload_3
        86: astore        4
        88: aload_2
        89: ldc_w         #705                // String ^(?is:(?:ALTER|BEGIN|COMMENT|CREATE|DECLARE|DELETE|DESCRIBE|DROP|GRANT|INSERT|MERGE|RENAME|REVOKE|SELECT|SET|SHOW|TRUNCATE|UPDATE|USE).*)$
        92: invokevirtual #282                // Method java/lang/String.matches:(Ljava/lang/String;)Z
        95: ifne          150
        98: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       101: aload_0
       102: aload_0
       103: invokeinterface #690,  1          // InterfaceMethod org/jooq/DSLContext.parser:()Lorg/jooq/Parser;
       108: aload_1
       109: getfield      #286                // Field org/jooq/ParserCLI$Args.sql:Ljava/lang/String;
       112: invokeinterface #707,  2          // InterfaceMethod org/jooq/Parser.parseField:(Ljava/lang/String;)Lorg/jooq/Field;
       117: invokeinterface #700,  2          // InterfaceMethod org/jooq/DSLContext.render:(Lorg/jooq/QueryPart;)Ljava/lang/String;
       122: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       125: goto          150
       128: astore        5
       130: aload_3
       131: invokevirtual #711                // Method org/jooq/impl/ParserException.position:()I
       134: aload         5
       136: invokevirtual #711                // Method org/jooq/impl/ParserException.position:()I
       139: if_icmplt     146
       142: aload_3
       143: goto          148
       146: aload         5
       148: astore        4
       150: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       153: aload         4
       155: invokevirtual #715                // Method org/jooq/impl/ParserException.getMessage:()Ljava/lang/String;
       158: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       161: return
      Exception table:
         from    to  target type
            54    81    84   Class org/jooq/impl/ParserException
            98   125   128   Class org/jooq/impl/ParserException
      LineNumberTable:
        line 496: 0
        line 498: 8
        line 499: 18
        line 501: 20
        line 502: 33
        line 503: 43
        line 504: 48
        line 515: 54
        line 530: 81
        line 517: 84
        line 518: 85
        line 520: 88
        line 522: 98
        line 526: 125
        line 524: 128
        line 525: 130
        line 529: 150
        line 531: 161
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           20      34     3     c   Lorg/jooq/DSLContext;
          130      20     5    e2   Lorg/jooq/impl/ParserException;
           88      73     4     e   Lorg/jooq/impl/ParserException;
           85      76     3    e1   Lorg/jooq/impl/ParserException;
            0     162     0   ctx   Lorg/jooq/DSLContext;
            0     162     1     a   Lorg/jooq/ParserCLI$Args;
            8     154     2   sql   Ljava/lang/String;
      StackMapTable: number_of_entries = 7
        frame_type = 252 /* append */
          offset_delta = 54
          locals = [ class java/lang/String ]
        frame_type = 93 /* same_locals_1_stack_item */
          stack = [ class org/jooq/impl/ParserException ]
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class org/jooq/DSLContext, class org/jooq/ParserCLI$Args, class java/lang/String, class org/jooq/impl/ParserException, class org/jooq/impl/ParserException ]
          stack = [ class org/jooq/impl/ParserException ]
        frame_type = 252 /* append */
          offset_delta = 17
          locals = [ class org/jooq/impl/ParserException ]
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class org/jooq/impl/ParserException ]
        frame_type = 250 /* chop */
          offset_delta = 1
        frame_type = 249 /* chop */
          offset_delta = 10

  private static final <E extends java.lang.Enum<E>> E parse(java.lang.Class<E>, java.lang.String);
    descriptor: (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #215                // Method java/lang/String.toUpperCase:()Ljava/lang/String;
         5: invokestatic  #221                // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
         8: areturn
         9: astore_2
        10: aload_1
        11: aload_0
        12: invokestatic  #239                // Method invalid:(Ljava/lang/String;Ljava/lang/Class;)V
        15: aload_2
        16: athrow
      Exception table:
         from    to  target type
             0     8     9   Class java/lang/IllegalArgumentException
      LineNumberTable:
        line 535: 0
        line 537: 9
        line 538: 10
        line 539: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10       7     2     e   Ljava/lang/IllegalArgumentException;
            0      17     0  type   Ljava/lang/Class;
            0      17     1 value   Ljava/lang/String;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      17     0  type   Ljava/lang/Class<TE;>;
      StackMapTable: number_of_entries = 1
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/IllegalArgumentException ]
    Signature: #1071                        // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Class<TE;>;Ljava/lang/String;)TE;

  private static final <E extends java.lang.Enum<E>> org.jooq.ParserCLI$Args parse(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)Lorg/jooq/ParserCLI$Args;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=4, locals=5, args_size=1
         0: new           #20                 // class org/jooq/ParserCLI$Args
         3: dup
         4: invokespecial #718                // Method org/jooq/ParserCLI$Args."<init>":()V
         7: astore_1
         8: iconst_0
         9: istore_2
        10: iload_2
        11: aload_0
        12: arraylength
        13: if_icmpge     1186
        16: aconst_null
        17: astore_3
        18: ldc_w         #719                // String -f
        21: aload_0
        22: iload_2
        23: aaload
        24: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        27: ifne          42
        30: ldc_w         #721                // String --formatted
        33: aload_0
        34: iload_2
        35: aaload
        36: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        39: ifeq          53
        42: aload_1
        43: iconst_1
        44: invokestatic  #353                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
        47: putfield      #31                 // Field org/jooq/ParserCLI$Args.formatted:Ljava/lang/Boolean;
        50: goto          1142
        53: ldc_w         #723                // String -k
        56: aload_0
        57: iload_2
        58: aaload
        59: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        62: ifne          77
        65: ldc_w         #725                // String --keyword
        68: aload_0
        69: iload_2
        70: aaload
        71: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        74: ifeq          101
        77: aload_1
        78: ldc_w         #363                // class org/jooq/conf/RenderKeywordCase
        81: dup
        82: astore_3
        83: aload_0
        84: iinc          2, 1
        87: iload_2
        88: aaload
        89: invokestatic  #727                // Method parse:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
        92: checkcast     #363                // class org/jooq/conf/RenderKeywordCase
        95: putfield      #41                 // Field org/jooq/ParserCLI$Args.keywords:Lorg/jooq/conf/RenderKeywordCase;
        98: goto          1142
       101: ldc_w         #729                // String -i
       104: aload_0
       105: iload_2
       106: aaload
       107: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       110: ifne          125
       113: ldc_w         #731                // String --identifier
       116: aload_0
       117: iload_2
       118: aaload
       119: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       122: ifeq          149
       125: aload_1
       126: ldc_w         #379                // class org/jooq/conf/RenderNameCase
       129: dup
       130: astore_3
       131: aload_0
       132: iinc          2, 1
       135: iload_2
       136: aaload
       137: invokestatic  #727                // Method parse:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       140: checkcast     #379                // class org/jooq/conf/RenderNameCase
       143: putfield      #49                 // Field org/jooq/ParserCLI$Args.name:Lorg/jooq/conf/RenderNameCase;
       146: goto          1142
       149: ldc_w         #733                // String -Q
       152: aload_0
       153: iload_2
       154: aaload
       155: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       158: ifne          173
       161: ldc_w         #735                // String --quoted
       164: aload_0
       165: iload_2
       166: aaload
       167: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       170: ifeq          197
       173: aload_1
       174: ldc_w         #386                // class org/jooq/conf/RenderQuotedNames
       177: dup
       178: astore_3
       179: aload_0
       180: iinc          2, 1
       183: iload_2
       184: aaload
       185: invokestatic  #727                // Method parse:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       188: checkcast     #386                // class org/jooq/conf/RenderQuotedNames
       191: putfield      #57                 // Field org/jooq/ParserCLI$Args.quoted:Lorg/jooq/conf/RenderQuotedNames;
       194: goto          1142
       197: ldc_w         #737                // String -F
       200: aload_0
       201: iload_2
       202: aaload
       203: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       206: ifne          221
       209: ldc_w         #739                // String --from-dialect
       212: aload_0
       213: iload_2
       214: aaload
       215: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       218: ifeq          245
       221: aload_1
       222: ldc_w         #394                // class org/jooq/SQLDialect
       225: dup
       226: astore_3
       227: aload_0
       228: iinc          2, 1
       231: iload_2
       232: aaload
       233: invokestatic  #727                // Method parse:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       236: checkcast     #394                // class org/jooq/SQLDialect
       239: putfield      #65                 // Field org/jooq/ParserCLI$Args.fromDialect:Lorg/jooq/SQLDialect;
       242: goto          1142
       245: ldc_w         #741                // String -t
       248: aload_0
       249: iload_2
       250: aaload
       251: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       254: ifne          281
       257: ldc_w         #743                // String -T
       260: aload_0
       261: iload_2
       262: aaload
       263: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       266: ifne          281
       269: ldc_w         #745                // String --to-dialect
       272: aload_0
       273: iload_2
       274: aaload
       275: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       278: ifeq          305
       281: aload_1
       282: ldc_w         #394                // class org/jooq/SQLDialect
       285: dup
       286: astore_3
       287: aload_0
       288: iinc          2, 1
       291: iload_2
       292: aaload
       293: invokestatic  #727                // Method parse:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       296: checkcast     #394                // class org/jooq/SQLDialect
       299: putfield      #19                 // Field org/jooq/ParserCLI$Args.toDialect:Lorg/jooq/SQLDialect;
       302: goto          1142
       305: ldc_w         #747                // String --parse-date-format
       308: aload_0
       309: iload_2
       310: aaload
       311: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       314: ifeq          330
       317: aload_1
       318: aload_0
       319: iinc          2, 1
       322: iload_2
       323: aaload
       324: putfield      #72                 // Field org/jooq/ParserCLI$Args.parseDateFormat:Ljava/lang/String;
       327: goto          1142
       330: ldc_w         #749                // String --parse-ignore-comments
       333: aload_0
       334: iload_2
       335: aaload
       336: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       339: ifeq          353
       342: aload_1
       343: iconst_1
       344: invokestatic  #353                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       347: putfield      #80                 // Field org/jooq/ParserCLI$Args.parseIgnoreComments:Ljava/lang/Boolean;
       350: goto          1142
       353: ldc_w         #751                // String --parse-ignore-comment-start
       356: aload_0
       357: iload_2
       358: aaload
       359: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       362: ifeq          378
       365: aload_1
       366: aload_0
       367: iinc          2, 1
       370: iload_2
       371: aaload
       372: putfield      #86                 // Field org/jooq/ParserCLI$Args.parseIgnoreCommentStart:Ljava/lang/String;
       375: goto          1142
       378: ldc_w         #753                // String --parse-ignore-comment-stop
       381: aload_0
       382: iload_2
       383: aaload
       384: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       387: ifeq          403
       390: aload_1
       391: aload_0
       392: iinc          2, 1
       395: iload_2
       396: aaload
       397: putfield      #92                 // Field org/jooq/ParserCLI$Args.parseIgnoreCommentStop:Ljava/lang/String;
       400: goto          1142
       403: ldc_w         #755                // String --parse-locale
       406: aload_0
       407: iload_2
       408: aaload
       409: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       412: ifeq          431
       415: aload_1
       416: aload_0
       417: iinc          2, 1
       420: iload_2
       421: aaload
       422: invokestatic  #434                // Method java/util/Locale.forLanguageTag:(Ljava/lang/String;)Ljava/util/Locale;
       425: putfield      #98                 // Field org/jooq/ParserCLI$Args.parseLocale:Ljava/util/Locale;
       428: goto          1142
       431: ldc_w         #757                // String --parse-name-case
       434: aload_0
       435: iload_2
       436: aaload
       437: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       440: ifeq          467
       443: aload_1
       444: ldc_w         #445                // class org/jooq/conf/ParseNameCase
       447: dup
       448: astore_3
       449: aload_0
       450: iinc          2, 1
       453: iload_2
       454: aaload
       455: invokestatic  #727                // Method parse:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       458: checkcast     #445                // class org/jooq/conf/ParseNameCase
       461: putfield      #106                // Field org/jooq/ParserCLI$Args.parseNameCase:Lorg/jooq/conf/ParseNameCase;
       464: goto          1142
       467: ldc_w         #759                // String --parse-named-param-prefix
       470: aload_0
       471: iload_2
       472: aaload
       473: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       476: ifeq          492
       479: aload_1
       480: aload_0
       481: iinc          2, 1
       484: iload_2
       485: aaload
       486: putfield      #114                // Field org/jooq/ParserCLI$Args.parseNamedParamPrefix:Ljava/lang/String;
       489: goto          1142
       492: ldc_w         #761                // String --parse-set-commands
       495: aload_0
       496: iload_2
       497: aaload
       498: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       501: ifeq          515
       504: aload_1
       505: iconst_1
       506: invokestatic  #353                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       509: putfield      #126                // Field org/jooq/ParserCLI$Args.parseSetCommands:Ljava/lang/Boolean;
       512: goto          1142
       515: ldc_w         #763                // String --parse-retain-comments-between-queries
       518: aload_0
       519: iload_2
       520: aaload
       521: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       524: ifeq          538
       527: aload_1
       528: iconst_1
       529: invokestatic  #353                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       532: putfield      #120                // Field org/jooq/ParserCLI$Args.parseRetainCommentsBetweenQueries:Ljava/lang/Boolean;
       535: goto          1142
       538: ldc_w         #765                // String --parse-timestamp-format
       541: aload_0
       542: iload_2
       543: aaload
       544: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       547: ifeq          563
       550: aload_1
       551: aload_0
       552: iinc          2, 1
       555: iload_2
       556: aaload
       557: putfield      #132                // Field org/jooq/ParserCLI$Args.parseTimestampFormat:Ljava/lang/String;
       560: goto          1142
       563: ldc_w         #767                // String --parse-unknown-functions
       566: aload_0
       567: iload_2
       568: aaload
       569: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       572: ifeq          599
       575: aload_1
       576: ldc_w         #471                // class org/jooq/conf/ParseUnknownFunctions
       579: dup
       580: astore_3
       581: aload_0
       582: iinc          2, 1
       585: iload_2
       586: aaload
       587: invokestatic  #727                // Method parse:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       590: checkcast     #471                // class org/jooq/conf/ParseUnknownFunctions
       593: putfield      #138                // Field org/jooq/ParserCLI$Args.parseUnknownFunctions:Lorg/jooq/conf/ParseUnknownFunctions;
       596: goto          1142
       599: ldc_w         #769                // String --parse-unsupported-syntax
       602: aload_0
       603: iload_2
       604: aaload
       605: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       608: ifeq          635
       611: aload_1
       612: ldc_w         #477                // class org/jooq/conf/ParseUnsupportedSyntax
       615: dup
       616: astore_3
       617: aload_0
       618: iinc          2, 1
       621: iload_2
       622: aaload
       623: invokestatic  #727                // Method parse:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       626: checkcast     #477                // class org/jooq/conf/ParseUnsupportedSyntax
       629: putfield      #635                // Field org/jooq/ParserCLI$Args.parseUnsupportedSyntax:Lorg/jooq/conf/ParseUnsupportedSyntax;
       632: goto          1142
       635: ldc_w         #771                // String --render-coalesce-to-empty-string-in-concat
       638: aload_0
       639: iload_2
       640: aaload
       641: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       644: ifeq          658
       647: aload_1
       648: iconst_1
       649: invokestatic  #353                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       652: putfield      #146                // Field org/jooq/ParserCLI$Args.renderCoalesceToEmptyStringInConcat:Ljava/lang/Boolean;
       655: goto          1142
       658: ldc_w         #773                // String --render-optional-inner-keyword
       661: aload_0
       662: iload_2
       663: aaload
       664: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       667: ifeq          694
       670: aload_1
       671: ldc_w         #483                // class org/jooq/conf/RenderOptionalKeyword
       674: dup
       675: astore_3
       676: aload_0
       677: iinc          2, 1
       680: iload_2
       681: aaload
       682: invokestatic  #727                // Method parse:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       685: checkcast     #483                // class org/jooq/conf/RenderOptionalKeyword
       688: putfield      #152                // Field org/jooq/ParserCLI$Args.renderOptionalInnerKeyword:Lorg/jooq/conf/RenderOptionalKeyword;
       691: goto          1142
       694: ldc_w         #775                // String --render-optional-outer-keyword
       697: aload_0
       698: iload_2
       699: aaload
       700: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       703: ifeq          730
       706: aload_1
       707: ldc_w         #483                // class org/jooq/conf/RenderOptionalKeyword
       710: dup
       711: astore_3
       712: aload_0
       713: iinc          2, 1
       716: iload_2
       717: aaload
       718: invokestatic  #727                // Method parse:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       721: checkcast     #483                // class org/jooq/conf/RenderOptionalKeyword
       724: putfield      #160                // Field org/jooq/ParserCLI$Args.renderOptionalOuterKeyword:Lorg/jooq/conf/RenderOptionalKeyword;
       727: goto          1142
       730: ldc_w         #777                // String --render-optional-as-keyword-for-field-aliases
       733: aload_0
       734: iload_2
       735: aaload
       736: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       739: ifeq          766
       742: aload_1
       743: ldc_w         #483                // class org/jooq/conf/RenderOptionalKeyword
       746: dup
       747: astore_3
       748: aload_0
       749: iinc          2, 1
       752: iload_2
       753: aaload
       754: invokestatic  #727                // Method parse:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       757: checkcast     #483                // class org/jooq/conf/RenderOptionalKeyword
       760: putfield      #166                // Field org/jooq/ParserCLI$Args.renderOptionalAsKeywordForFieldAliases:Lorg/jooq/conf/RenderOptionalKeyword;
       763: goto          1142
       766: ldc_w         #779                // String --render-optional-as-keyword-for-table-aliases
       769: aload_0
       770: iload_2
       771: aaload
       772: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       775: ifeq          802
       778: aload_1
       779: ldc_w         #483                // class org/jooq/conf/RenderOptionalKeyword
       782: dup
       783: astore_3
       784: aload_0
       785: iinc          2, 1
       788: iload_2
       789: aaload
       790: invokestatic  #727                // Method parse:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       793: checkcast     #483                // class org/jooq/conf/RenderOptionalKeyword
       796: putfield      #172                // Field org/jooq/ParserCLI$Args.renderOptionalAsKeywordForTableAliases:Lorg/jooq/conf/RenderOptionalKeyword;
       799: goto          1142
       802: ldc_w         #781                // String --transform-patterns
       805: aload_0
       806: iload_2
       807: aaload
       808: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       811: ifeq          825
       814: aload_1
       815: iconst_1
       816: invokestatic  #353                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       819: putfield      #178                // Field org/jooq/ParserCLI$Args.transformPatterns:Ljava/lang/Boolean;
       822: goto          1142
       825: ldc_w         #783                // String --transform-ansi-join-to-table-lists
       828: aload_0
       829: iload_2
       830: aaload
       831: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       834: ifeq          848
       837: aload_1
       838: iconst_1
       839: invokestatic  #353                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       842: putfield      #184                // Field org/jooq/ParserCLI$Args.transformAnsiJoinToTableLists:Ljava/lang/Boolean;
       845: goto          1142
       848: ldc_w         #785                // String --transform-qualify
       851: aload_0
       852: iload_2
       853: aaload
       854: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       857: ifeq          884
       860: aload_1
       861: ldc_w         #511                // class org/jooq/conf/Transformation
       864: dup
       865: astore_3
       866: aload_0
       867: iinc          2, 1
       870: iload_2
       871: aaload
       872: invokestatic  #727                // Method parse:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       875: checkcast     #511                // class org/jooq/conf/Transformation
       878: putfield      #204                // Field org/jooq/ParserCLI$Args.transformQualify:Lorg/jooq/conf/Transformation;
       881: goto          1142
       884: ldc_w         #787                // String --transform-rownum
       887: aload_0
       888: iload_2
       889: aaload
       890: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       893: ifeq          920
       896: aload_1
       897: ldc_w         #511                // class org/jooq/conf/Transformation
       900: dup
       901: astore_3
       902: aload_0
       903: iinc          2, 1
       906: iload_2
       907: aaload
       908: invokestatic  #727                // Method parse:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       911: checkcast     #511                // class org/jooq/conf/Transformation
       914: putfield      #212                // Field org/jooq/ParserCLI$Args.transformRownum:Lorg/jooq/conf/Transformation;
       917: goto          1142
       920: ldc_w         #789                // String --transform-table-lists-to-ansi-join
       923: aload_0
       924: iload_2
       925: aaload
       926: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       929: ifeq          943
       932: aload_1
       933: iconst_1
       934: invokestatic  #353                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       937: putfield      #190                // Field org/jooq/ParserCLI$Args.transformTableListsToAnsiJoin:Ljava/lang/Boolean;
       940: goto          1142
       943: ldc_w         #791                // String --transform-unneeded-arithmetic
       946: aload_0
       947: iload_2
       948: aaload
       949: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       952: ifeq          979
       955: aload_1
       956: ldc_w         #526                // class org/jooq/conf/TransformUnneededArithmeticExpressions
       959: dup
       960: astore_3
       961: aload_0
       962: iinc          2, 1
       965: iload_2
       966: aaload
       967: invokestatic  #727                // Method parse:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       970: checkcast     #526                // class org/jooq/conf/TransformUnneededArithmeticExpressions
       973: putfield      #196                // Field org/jooq/ParserCLI$Args.transformUnneededArithmetic:Lorg/jooq/conf/TransformUnneededArithmeticExpressions;
       976: goto          1142
       979: ldc_w         #793                // String -S
       982: aload_0
       983: iload_2
       984: aaload
       985: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       988: ifne          1003
       991: ldc_w         #795                // String --schema
       994: aload_0
       995: iload_2
       996: aaload
       997: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      1000: ifeq          1016
      1003: aload_1
      1004: aload_0
      1005: iinc          2, 1
      1008: iload_2
      1009: aaload
      1010: putfield      #402                // Field org/jooq/ParserCLI$Args.schema:Ljava/lang/String;
      1013: goto          1142
      1016: ldc_w         #797                // String -s
      1019: aload_0
      1020: iload_2
      1021: aaload
      1022: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      1025: ifne          1040
      1028: ldc_w         #799                // String --sql
      1031: aload_0
      1032: iload_2
      1033: aaload
      1034: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      1037: ifeq          1053
      1040: aload_1
      1041: aload_0
      1042: iinc          2, 1
      1045: iload_2
      1046: aaload
      1047: putfield      #286                // Field org/jooq/ParserCLI$Args.sql:Ljava/lang/String;
      1050: goto          1142
      1053: ldc_w         #801                // String -I
      1056: aload_0
      1057: iload_2
      1058: aaload
      1059: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      1062: ifne          1077
      1065: ldc_w         #803                // String --interactive
      1068: aload_0
      1069: iload_2
      1070: aaload
      1071: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      1074: ifeq          1085
      1077: aload_1
      1078: iconst_1
      1079: putfield      #805                // Field org/jooq/ParserCLI$Args.interactive:Z
      1082: goto          1142
      1085: ldc_w         #809                // String -h
      1088: aload_0
      1089: iload_2
      1090: aaload
      1091: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      1094: ifne          1109
      1097: ldc_w         #811                // String --help
      1100: aload_0
      1101: iload_2
      1102: aaload
      1103: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      1106: ifeq          1120
      1109: invokestatic  #813                // Method help:()V
      1112: aload_1
      1113: iconst_1
      1114: putfield      #816                // Field org/jooq/ParserCLI$Args.done:Z
      1117: goto          1142
      1120: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
      1123: aload_0
      1124: iload_2
      1125: aaload
      1126: invokedynamic #819,  0            // InvokeDynamic #65:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      1131: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      1134: new           #820                // class java/lang/RuntimeException
      1137: dup
      1138: invokespecial #822                // Method java/lang/RuntimeException."<init>":()V
      1141: athrow
      1142: goto          1180
      1145: astore        4
      1147: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
      1150: aload_0
      1151: iload_2
      1152: iconst_1
      1153: isub
      1154: aaload
      1155: aload_3
      1156: ifnull        1166
      1159: aload_3
      1160: invokevirtual #825                // Method java/lang/Class.getName:()Ljava/lang/String;
      1163: goto          1169
      1166: ldc_w         #830                // String Unknown
      1169: invokedynamic #832,  0            // InvokeDynamic #66:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      1174: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      1177: aload         4
      1179: athrow
      1180: iinc          2, 1
      1183: goto          10
      1186: aload_1
      1187: areturn
      Exception table:
         from    to  target type
            18  1142  1145   Class java/lang/ArrayIndexOutOfBoundsException
      LineNumberTable:
        line 545: 0
        line 547: 8
        line 548: 16
        line 551: 18
        line 552: 42
        line 553: 53
        line 554: 77
        line 555: 101
        line 556: 125
        line 557: 149
        line 558: 173
        line 559: 197
        line 560: 221
        line 563: 245
        line 564: 281
        line 565: 305
        line 566: 317
        line 567: 330
        line 568: 342
        line 569: 353
        line 570: 365
        line 571: 378
        line 572: 390
        line 573: 403
        line 574: 415
        line 575: 431
        line 576: 443
        line 577: 467
        line 578: 479
        line 579: 492
        line 580: 504
        line 581: 515
        line 582: 527
        line 583: 538
        line 584: 550
        line 585: 563
        line 586: 575
        line 587: 599
        line 588: 611
        line 589: 635
        line 590: 647
        line 591: 658
        line 592: 670
        line 593: 694
        line 594: 706
        line 595: 730
        line 596: 742
        line 597: 766
        line 598: 778
        line 599: 802
        line 600: 814
        line 601: 825
        line 602: 837
        line 603: 848
        line 604: 860
        line 605: 884
        line 606: 896
        line 607: 920
        line 608: 932
        line 609: 943
        line 610: 955
        line 611: 979
        line 612: 1003
        line 613: 1016
        line 614: 1040
        line 615: 1053
        line 616: 1077
        line 617: 1085
        line 618: 1109
        line 619: 1112
        line 622: 1120
        line 623: 1134
        line 629: 1142
        line 626: 1145
        line 627: 1147
        line 628: 1177
        line 547: 1180
        line 632: 1186
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
         1147      33     4     e   Ljava/lang/ArrayIndexOutOfBoundsException;
           18    1162     3 enumArgument   Ljava/lang/Class;
           10    1176     2     i   I
            0    1188     0  args   [Ljava/lang/String;
            8    1180     1 result   Lorg/jooq/ParserCLI$Args;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
           18    1162     3 enumArgument   Ljava/lang/Class<+Ljava/lang/Enum<*>;>;
      StackMapTable: number_of_entries = 50
        frame_type = 253 /* append */
          offset_delta = 10
          locals = [ class org/jooq/ParserCLI$Args, int ]
        frame_type = 252 /* append */
          offset_delta = 31
          locals = [ class java/lang/Class ]
        frame_type = 10 /* same */
        frame_type = 23 /* same */
        frame_type = 23 /* same */
        frame_type = 23 /* same */
        frame_type = 23 /* same */
        frame_type = 23 /* same */
        frame_type = 23 /* same */
        frame_type = 23 /* same */
        frame_type = 23 /* same */
        frame_type = 35 /* same */
        frame_type = 23 /* same */
        frame_type = 24 /* same */
        frame_type = 22 /* same */
        frame_type = 24 /* same */
        frame_type = 24 /* same */
        frame_type = 27 /* same */
        frame_type = 35 /* same */
        frame_type = 24 /* same */
        frame_type = 22 /* same */
        frame_type = 22 /* same */
        frame_type = 24 /* same */
        frame_type = 35 /* same */
        frame_type = 35 /* same */
        frame_type = 22 /* same */
        frame_type = 35 /* same */
        frame_type = 35 /* same */
        frame_type = 35 /* same */
        frame_type = 35 /* same */
        frame_type = 22 /* same */
        frame_type = 22 /* same */
        frame_type = 35 /* same */
        frame_type = 35 /* same */
        frame_type = 22 /* same */
        frame_type = 35 /* same */
        frame_type = 23 /* same */
        frame_type = 12 /* same */
        frame_type = 23 /* same */
        frame_type = 12 /* same */
        frame_type = 23 /* same */
        frame_type = 7 /* same */
        frame_type = 23 /* same */
        frame_type = 10 /* same */
        frame_type = 21 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/ArrayIndexOutOfBoundsException ]
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class "[Ljava/lang/String;", class org/jooq/ParserCLI$Args, int, class java/lang/Class, class java/lang/ArrayIndexOutOfBoundsException ]
          stack = [ class java/io/PrintStream, class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class "[Ljava/lang/String;", class org/jooq/ParserCLI$Args, int, class java/lang/Class, class java/lang/ArrayIndexOutOfBoundsException ]
          stack = [ class java/io/PrintStream, class java/lang/String, class java/lang/String ]
        frame_type = 249 /* chop */
          offset_delta = 10
        frame_type = 250 /* chop */
          offset_delta = 5
    Signature: #1078                        // <E:Ljava/lang/Enum<TE;>;>([Ljava/lang/String;)Lorg/jooq/ParserCLI$Args;

  private static final void invalid(java.lang.String, java.lang.Class<? extends java.lang.Enum<?>>);
    descriptor: (Ljava/lang/String;Ljava/lang/Class;)V
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=3, locals=6, args_size=2
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_1
         4: invokevirtual #833                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
         7: aload_0
         8: invokedynamic #836,  0            // InvokeDynamic #67:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        13: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        16: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        19: ldc_w         #837                // String Possible values:
        22: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        25: aload_1
        26: invokevirtual #839                // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;
        29: checkcast     #843                // class "[Ljava/lang/Enum;"
        32: astore_2
        33: aload_2
        34: arraylength
        35: istore_3
        36: iconst_0
        37: istore        4
        39: iload         4
        41: iload_3
        42: if_icmpge     73
        45: aload_2
        46: iload         4
        48: aaload
        49: astore        5
        51: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        54: aload         5
        56: invokevirtual #845                // Method java/lang/Enum.name:()Ljava/lang/String;
        59: invokedynamic #847,  0            // InvokeDynamic #68:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
        64: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        67: iinc          4, 1
        70: goto          39
        73: return
      LineNumberTable:
        line 636: 0
        line 637: 16
        line 639: 25
        line 640: 51
        line 639: 67
        line 641: 73
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           51      16     5     e   Ljava/lang/Enum;
            0      74     0 string   Ljava/lang/String;
            0      74     1  type   Ljava/lang/Class;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
           51      16     5     e   Ljava/lang/Enum<*>;
            0      74     1  type   Ljava/lang/Class<+Ljava/lang/Enum<*>;>;
      StackMapTable: number_of_entries = 2
        frame_type = 254 /* append */
          offset_delta = 39
          locals = [ class "[Ljava/lang/Enum;", int, int ]
        frame_type = 248 /* chop */
          offset_delta = 33
    Signature: #1082                        // (Ljava/lang/String;Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)V

  private static final void help();
    descriptor: ()V
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: ldc_w         #848                // String Usage:
         6: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         9: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        12: ldc_w         #850                // String   -f / --formatted                                                    Format output SQL
        15: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        18: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        21: ldc_w         #852                // String   -h / --help                                                         Display this help
        24: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        27: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        30: ldc_w         #854                // String   -k / --keyword                                  <RenderKeywordCase> Specify the output keyword case (org.jooq.conf.RenderKeywordCase)
        33: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        36: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        39: ldc_w         #856                // String   -i / --identifier                               <RenderNameCase>    Specify the output identifier case (org.jooq.conf.RenderNameCase)
        42: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        45: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        48: ldc_w         #858                // String   -Q / --quoted                                   <RenderQuotedNames> Specify the output identifier quoting (org.jooq.conf.RenderQuotedNames)
        51: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        54: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        57: ldc_w         #860                // String   -F / --from-dialect                             <SQLDialect>        Specify the input dialect (org.jooq.SQLDialect)
        60: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        63: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        66: ldc_w         #862                // String   -T / --to-dialect                               <SQLDialect>        Specify the output dialect (org.jooq.SQLDialect)
        69: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        72: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        75: ldc_w         #864                // String   -S / --schema                                   <String>            Specify the input SQL schema
        78: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        81: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        84: ldc_w         #866                // String   -s / --sql                                      <String>            Specify the input SQL string
        87: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        90: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        93: ldc_w         #868                // String
        96: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        99: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       102: ldc_w         #870                // String Additional flags:
       105: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       108: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       111: ldc_w         #872                // String   --parse-date-format                             <String>
       114: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       117: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       120: ldc_w         #874                // String   --parse-locale                                  <Locale>
       123: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       126: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       129: ldc_w         #876                // String   --parse-name-case                               <ParseNameCase>
       132: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       135: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       138: ldc_w         #878                // String   --parse-named-param-prefix                      <String>
       141: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       144: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       147: ldc_w         #880                // String   --parse-retain-comments-between-queries
       150: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       153: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       156: ldc_w         #882                // String   --parse-set-commands
       159: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       162: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       165: ldc_w         #884                // String   --parse-timestamp-format                        <String>
       168: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       171: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       174: ldc_w         #886                // String   --parse-unknown-functions                       <ParseUnknownFunctions>
       177: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       180: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       183: ldc_w         #888                // String   --parse-unsupported-syntax                      <ParseUnsupportedSyntax>
       186: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       189: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       192: ldc_w         #890                // String   --render-optional-inner-keyword                 <RenderOptionalKeyword>
       195: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       198: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       201: ldc_w         #892                // String   --render-optional-outer-keyword                 <RenderOptionalKeyword>
       204: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       207: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       210: ldc_w         #894                // String   --render-optional-as-keyword-for-field-aliases  <RenderOptionalKeyword>
       213: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       216: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       219: ldc_w         #896                // String   --render-optional-as-keyword-for-table-aliases  <RenderOptionalKeyword>
       222: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       225: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       228: ldc_w         #868                // String
       231: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       234: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       237: ldc_w         #898                // String Commercial distribution only features:
       240: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       243: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       246: ldc_w         #900                // String   --render-coalesce-to-empty-string-in-concat
       249: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       252: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       255: ldc_w         #902                // String   --transform-patterns
       258: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       261: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       264: ldc_w         #904                // String   --transform-ansi-join-to-table-lists
       267: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       270: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       273: ldc_w         #906                // String   --transform-qualify                             <Transformation>
       276: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       279: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       282: ldc_w         #908                // String   --transform-rownum                              <Transformation>
       285: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       288: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       291: ldc_w         #910                // String   --transform-table-lists-to-ansi-join
       294: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       297: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       300: ldc_w         #912                // String   --transform-unneeded-arithmetic                 <TransformUnneededArithmeticExpressions>
       303: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       306: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       309: ldc_w         #868                // String
       312: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       315: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       318: ldc_w         #914                // String   -I / --interactive                                               Start interactive mode
       321: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       324: return
      LineNumberTable:
        line 644: 0
        line 645: 9
        line 646: 18
        line 647: 27
        line 648: 36
        line 649: 45
        line 650: 54
        line 651: 63
        line 652: 72
        line 653: 81
        line 654: 90
        line 655: 99
        line 656: 108
        line 657: 117
        line 658: 126
        line 659: 135
        line 660: 144
        line 661: 153
        line 662: 162
        line 663: 171
        line 664: 180
        line 665: 189
        line 666: 198
        line 667: 207
        line 668: 216
        line 669: 225
        line 670: 234
        line 671: 243
        line 672: 252
        line 673: 261
        line 674: 270
        line 675: 279
        line 676: 288
        line 677: 297
        line 678: 306
        line 679: 315
        line 680: 324

  private static final void helpInteractive();
    descriptor: ()V
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: ldc_w         #848                // String Usage:
         6: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         9: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        12: ldc_w         #916                // String   /d  or  /display                                                   Display arguments
        15: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        18: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        21: ldc_w         #918                // String   /f  or  /formatted                             <boolean>           Format output SQL
        24: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        27: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        30: ldc_w         #920                // String   /h  or  /help                                                      Display this help
        33: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        36: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        39: ldc_w         #922                // String   /k  or  /keyword                               <RenderKeywordCase> Specify the output keyword case (org.jooq.conf.RenderKeywordCase)
        42: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        45: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        48: ldc_w         #924                // String   /i  or  /identifier                            <RenderNameCase>    Specify the output identifier case (org.jooq.conf.RenderNameCase)
        51: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        54: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        57: ldc_w         #926                // String   /Q  or  /quoted                                <RenderQuotedNames> Specify the output identifier quoting (org.jooq.conf.RenderQuotedNames)
        60: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        63: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        66: ldc_w         #928                // String   /F  or  /from-dialect                          <SQLDialect>        Specify the input dialect (org.jooq.SQLDialect)
        69: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        72: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        75: ldc_w         #930                // String   /T  or  /to-dialect                            <SQLDialect>        Specify the output dialect (org.jooq.SQLDialect)
        78: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        81: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        84: ldc_w         #932                // String   /S  or  /schema                                <String>            Specify the input SQL schema
        87: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        90: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        93: ldc_w         #934                // String                                                  <String>            Specify the input SQL string
        96: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        99: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       102: ldc_w         #868                // String
       105: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       108: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       111: ldc_w         #870                // String Additional flags:
       114: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       117: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       120: ldc_w         #936                // String   /parse-date-format                             <String>
       123: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       126: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       129: ldc_w         #938                // String   /parse-locale                                  <Locale>
       132: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       135: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       138: ldc_w         #940                // String   /parse-name-case                               <ParseNameCase>
       141: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       144: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       147: ldc_w         #942                // String   /parse-named-param-prefix                      <String>
       150: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       153: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       156: ldc_w         #944                // String   /parse-retain-comments-between-queries         <boolean>
       159: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       162: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       165: ldc_w         #946                // String   /parse-set-commands                            <boolean>
       168: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       171: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       174: ldc_w         #948                // String   /parse-timestamp-format                        <String>
       177: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       180: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       183: ldc_w         #950                // String   /parse-unknown-functions                       <ParseUnknownFunctions>
       186: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       189: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       192: ldc_w         #952                // String   /parse-unsupported-syntax                      <ParseUnsupportedSyntax>
       195: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       198: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       201: ldc_w         #954                // String   /render-optional-inner-keyword                 <RenderOptionalKeyword>
       204: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       207: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       210: ldc_w         #956                // String   /render-optional-outer-keyword                 <RenderOptionalKeyword>
       213: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       216: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       219: ldc_w         #958                // String   /render-optional-as-keyword-for-field-aliases  <RenderOptionalKeyword>
       222: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       225: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       228: ldc_w         #960                // String   /render-optional-as-keyword-for-table-aliases  <RenderOptionalKeyword>
       231: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       234: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       237: ldc_w         #868                // String
       240: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       243: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       246: ldc_w         #898                // String Commercial distribution only features:
       249: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       252: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       255: ldc_w         #962                // String   /render-coalesce-to-empty-string-in-concat     <boolean>
       258: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       261: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       264: ldc_w         #964                // String   /transform-patterns                            <boolean>
       267: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       270: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       273: ldc_w         #966                // String   /transform-ansi-join-to-table-lists            <boolean>
       276: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       279: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       282: ldc_w         #968                // String   /transform-qualify                             <Transformation>
       285: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       288: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       291: ldc_w         #970                // String   /transform-rownum                              <Transformation>
       294: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       297: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       300: ldc_w         #972                // String   /transform-table-lists-to-ansi-join            <boolean>
       303: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       306: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       309: ldc_w         #974                // String   /transform-unneeded-arithmetic                 <TransformUnneededArithmeticExpressions>
       312: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       315: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       318: ldc_w         #868                // String
       321: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       324: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       327: ldc_w         #976                // String   /q  or  /quit   Quit
       330: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       333: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
       336: ldc_w         #978                // String   /e  or  /exit   Also quit
       339: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       342: return
      LineNumberTable:
        line 683: 0
        line 684: 9
        line 685: 18
        line 686: 27
        line 687: 36
        line 688: 45
        line 689: 54
        line 690: 63
        line 691: 72
        line 692: 81
        line 693: 90
        line 694: 99
        line 695: 108
        line 696: 117
        line 697: 126
        line 698: 135
        line 699: 144
        line 700: 153
        line 701: 162
        line 702: 171
        line 703: 180
        line 704: 189
        line 705: 198
        line 706: 207
        line 707: 216
        line 708: 225
        line 709: 234
        line 710: 243
        line 711: 252
        line 712: 261
        line 713: 270
        line 714: 279
        line 715: 288
        line 716: 297
        line 717: 306
        line 718: 315
        line 719: 324
        line 720: 333
        line 721: 342

  private static org.jooq.conf.Settings lambda$render$32(org.jooq.conf.Settings);
    descriptor: (Lorg/jooq/conf/Settings;)Lorg/jooq/conf/Settings;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #980                // Field org/jooq/conf/ParseWithMetaLookups.THROW_ON_FAILURE:Lorg/jooq/conf/ParseWithMetaLookups;
         4: invokevirtual #986                // Method org/jooq/conf/Settings.withParseWithMetaLookups:(Lorg/jooq/conf/ParseWithMetaLookups;)Lorg/jooq/conf/Settings;
         7: areturn
      LineNumberTable:
        line 503: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     s   Lorg/jooq/conf/Settings;

  private static org.jooq.Meta lambda$render$31(org.jooq.DSLContext, org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/DSLContext;Lorg/jooq/ParserCLI$Args;)Lorg/jooq/Meta;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: iconst_1
         2: anewarray     #216                // class java/lang/String
         5: dup
         6: iconst_0
         7: aload_1
         8: getfield      #402                // Field org/jooq/ParserCLI$Args.schema:Ljava/lang/String;
        11: aastore
        12: invokeinterface #990,  2          // InterfaceMethod org/jooq/DSLContext.meta:([Ljava/lang/String;)Lorg/jooq/Meta;
        17: areturn
      LineNumberTable:
        line 502: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0     c   Lorg/jooq/DSLContext;
            0      18     1     a   Lorg/jooq/ParserCLI$Args;

  private static void lambda$interactiveMode$30(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #580                // Method displayToDialect:(Lorg/jooq/ParserCLI$Args;)V
         4: return
      LineNumberTable:
        line 329: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0     a   Lorg/jooq/ParserCLI$Args;

  private static void lambda$interactiveMode$29(org.jooq.ParserCLI$Args, org.jooq.SQLDialect);
    descriptor: (Lorg/jooq/ParserCLI$Args;Lorg/jooq/SQLDialect;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #19                 // Field org/jooq/ParserCLI$Args.toDialect:Lorg/jooq/SQLDialect;
         5: return
      LineNumberTable:
        line 329: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0     a   Lorg/jooq/ParserCLI$Args;
            0       6     1     e   Lorg/jooq/SQLDialect;

  private static void lambda$interactiveMode$28(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #598                // Method displayTransformUnneededArithmetic:(Lorg/jooq/ParserCLI$Args;)V
         4: return
      LineNumberTable:
        line 325: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0     a   Lorg/jooq/ParserCLI$Args;

  private static void lambda$interactiveMode$27(org.jooq.ParserCLI$Args, org.jooq.conf.TransformUnneededArithmeticExpressions);
    descriptor: (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/TransformUnneededArithmeticExpressions;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #196                // Field org/jooq/ParserCLI$Args.transformUnneededArithmetic:Lorg/jooq/conf/TransformUnneededArithmeticExpressions;
         5: return
      LineNumberTable:
        line 325: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0     a   Lorg/jooq/ParserCLI$Args;
            0       6     1     e   Lorg/jooq/conf/TransformUnneededArithmeticExpressions;

  private static void lambda$interactiveMode$26(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #595                // Method displayTransformRownum:(Lorg/jooq/ParserCLI$Args;)V
         4: return
      LineNumberTable:
        line 317: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0     a   Lorg/jooq/ParserCLI$Args;

  private static void lambda$interactiveMode$25(org.jooq.ParserCLI$Args, org.jooq.conf.Transformation);
    descriptor: (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/Transformation;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #212                // Field org/jooq/ParserCLI$Args.transformRownum:Lorg/jooq/conf/Transformation;
         5: return
      LineNumberTable:
        line 317: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0     a   Lorg/jooq/ParserCLI$Args;
            0       6     1     e   Lorg/jooq/conf/Transformation;

  private static void lambda$interactiveMode$24(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #592                // Method displayTransformQualify:(Lorg/jooq/ParserCLI$Args;)V
         4: return
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0     a   Lorg/jooq/ParserCLI$Args;

  private static void lambda$interactiveMode$23(org.jooq.ParserCLI$Args, org.jooq.conf.Transformation);
    descriptor: (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/Transformation;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #204                // Field org/jooq/ParserCLI$Args.transformQualify:Lorg/jooq/conf/Transformation;
         5: return
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0     a   Lorg/jooq/ParserCLI$Args;
            0       6     1     e   Lorg/jooq/conf/Transformation;

  private static void lambda$interactiveMode$22(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #994                // Method displayRenderOptionalAsKeywordForTableAliases:(Lorg/jooq/ParserCLI$Args;)V
         4: return
      LineNumberTable:
        line 301: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0     a   Lorg/jooq/ParserCLI$Args;

  private static void lambda$interactiveMode$21(org.jooq.ParserCLI$Args, org.jooq.conf.RenderOptionalKeyword);
    descriptor: (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderOptionalKeyword;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #172                // Field org/jooq/ParserCLI$Args.renderOptionalAsKeywordForTableAliases:Lorg/jooq/conf/RenderOptionalKeyword;
         5: return
      LineNumberTable:
        line 301: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0     a   Lorg/jooq/ParserCLI$Args;
            0       6     1     e   Lorg/jooq/conf/RenderOptionalKeyword;

  private static void lambda$interactiveMode$20(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #997                // Method displayRenderOptionalAsKeywordForFieldAliases:(Lorg/jooq/ParserCLI$Args;)V
         4: return
      LineNumberTable:
        line 299: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0     a   Lorg/jooq/ParserCLI$Args;

  private static void lambda$interactiveMode$19(org.jooq.ParserCLI$Args, org.jooq.conf.RenderOptionalKeyword);
    descriptor: (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderOptionalKeyword;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #166                // Field org/jooq/ParserCLI$Args.renderOptionalAsKeywordForFieldAliases:Lorg/jooq/conf/RenderOptionalKeyword;
         5: return
      LineNumberTable:
        line 299: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0     a   Lorg/jooq/ParserCLI$Args;
            0       6     1     e   Lorg/jooq/conf/RenderOptionalKeyword;

  private static void lambda$interactiveMode$18(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #1000               // Method displayRenderOptionalOuterKeyword:(Lorg/jooq/ParserCLI$Args;)V
         4: return
      LineNumberTable:
        line 297: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0     a   Lorg/jooq/ParserCLI$Args;

  private static void lambda$interactiveMode$17(org.jooq.ParserCLI$Args, org.jooq.conf.RenderOptionalKeyword);
    descriptor: (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderOptionalKeyword;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #160                // Field org/jooq/ParserCLI$Args.renderOptionalOuterKeyword:Lorg/jooq/conf/RenderOptionalKeyword;
         5: return
      LineNumberTable:
        line 297: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0     a   Lorg/jooq/ParserCLI$Args;
            0       6     1     e   Lorg/jooq/conf/RenderOptionalKeyword;

  private static void lambda$interactiveMode$16(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #1003               // Method displayRenderOptionalInnerKeyword:(Lorg/jooq/ParserCLI$Args;)V
         4: return
      LineNumberTable:
        line 295: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0     a   Lorg/jooq/ParserCLI$Args;

  private static void lambda$interactiveMode$15(org.jooq.ParserCLI$Args, org.jooq.conf.RenderOptionalKeyword);
    descriptor: (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderOptionalKeyword;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #152                // Field org/jooq/ParserCLI$Args.renderOptionalInnerKeyword:Lorg/jooq/conf/RenderOptionalKeyword;
         5: return
      LineNumberTable:
        line 295: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0     a   Lorg/jooq/ParserCLI$Args;
            0       6     1     e   Lorg/jooq/conf/RenderOptionalKeyword;

  private static void lambda$interactiveMode$14(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #1006               // Method displayParseUnsupportedSyntax:(Lorg/jooq/ParserCLI$Args;)V
         4: return
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0     a   Lorg/jooq/ParserCLI$Args;

  private static void lambda$interactiveMode$13(org.jooq.ParserCLI$Args, org.jooq.conf.ParseUnsupportedSyntax);
    descriptor: (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/ParseUnsupportedSyntax;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #635                // Field org/jooq/ParserCLI$Args.parseUnsupportedSyntax:Lorg/jooq/conf/ParseUnsupportedSyntax;
         5: return
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0     a   Lorg/jooq/ParserCLI$Args;
            0       6     1     e   Lorg/jooq/conf/ParseUnsupportedSyntax;

  private static void lambda$interactiveMode$12(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #1009               // Method displayParseUnknownFunctions:(Lorg/jooq/ParserCLI$Args;)V
         4: return
      LineNumberTable:
        line 291: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0     a   Lorg/jooq/ParserCLI$Args;

  private static void lambda$interactiveMode$11(org.jooq.ParserCLI$Args, org.jooq.conf.ParseUnknownFunctions);
    descriptor: (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/ParseUnknownFunctions;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #138                // Field org/jooq/ParserCLI$Args.parseUnknownFunctions:Lorg/jooq/conf/ParseUnknownFunctions;
         5: return
      LineNumberTable:
        line 291: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0     a   Lorg/jooq/ParserCLI$Args;
            0       6     1     e   Lorg/jooq/conf/ParseUnknownFunctions;

  private static void lambda$interactiveMode$10(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #1012               // Method displayParseNameCase:(Lorg/jooq/ParserCLI$Args;)V
         4: return
      LineNumberTable:
        line 265: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0     a   Lorg/jooq/ParserCLI$Args;

  private static void lambda$interactiveMode$9(org.jooq.ParserCLI$Args, org.jooq.conf.ParseNameCase);
    descriptor: (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/ParseNameCase;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #106                // Field org/jooq/ParserCLI$Args.parseNameCase:Lorg/jooq/conf/ParseNameCase;
         5: return
      LineNumberTable:
        line 265: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0     a   Lorg/jooq/ParserCLI$Args;
            0       6     1     e   Lorg/jooq/conf/ParseNameCase;

  private static void lambda$interactiveMode$8(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #577                // Method displayFromDialect:(Lorg/jooq/ParserCLI$Args;)V
         4: return
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0     a   Lorg/jooq/ParserCLI$Args;

  private static void lambda$interactiveMode$7(org.jooq.ParserCLI$Args, org.jooq.SQLDialect);
    descriptor: (Lorg/jooq/ParserCLI$Args;Lorg/jooq/SQLDialect;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #65                 // Field org/jooq/ParserCLI$Args.fromDialect:Lorg/jooq/SQLDialect;
         5: return
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0     a   Lorg/jooq/ParserCLI$Args;
            0       6     1     e   Lorg/jooq/SQLDialect;

  private static void lambda$interactiveMode$6(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #589                // Method displayQuoted:(Lorg/jooq/ParserCLI$Args;)V
         4: return
      LineNumberTable:
        line 221: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0     a   Lorg/jooq/ParserCLI$Args;

  private static void lambda$interactiveMode$5(org.jooq.ParserCLI$Args, org.jooq.conf.RenderQuotedNames);
    descriptor: (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderQuotedNames;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #57                 // Field org/jooq/ParserCLI$Args.quoted:Lorg/jooq/conf/RenderQuotedNames;
         5: return
      LineNumberTable:
        line 221: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0     a   Lorg/jooq/ParserCLI$Args;
            0       6     1     e   Lorg/jooq/conf/RenderQuotedNames;

  private static void lambda$interactiveMode$4(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #586                // Method displayIdentifiers:(Lorg/jooq/ParserCLI$Args;)V
         4: return
      LineNumberTable:
        line 219: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0     a   Lorg/jooq/ParserCLI$Args;

  private static void lambda$interactiveMode$3(org.jooq.ParserCLI$Args, org.jooq.conf.RenderNameCase);
    descriptor: (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderNameCase;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #49                 // Field org/jooq/ParserCLI$Args.name:Lorg/jooq/conf/RenderNameCase;
         5: return
      LineNumberTable:
        line 219: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0     a   Lorg/jooq/ParserCLI$Args;
            0       6     1     e   Lorg/jooq/conf/RenderNameCase;

  private static void lambda$interactiveMode$2(org.jooq.ParserCLI$Args);
    descriptor: (Lorg/jooq/ParserCLI$Args;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #583                // Method displayKeywords:(Lorg/jooq/ParserCLI$Args;)V
         4: return
      LineNumberTable:
        line 217: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0     a   Lorg/jooq/ParserCLI$Args;

  private static void lambda$interactiveMode$1(org.jooq.ParserCLI$Args, org.jooq.conf.RenderKeywordCase);
    descriptor: (Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderKeywordCase;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #41                 // Field org/jooq/ParserCLI$Args.keywords:Lorg/jooq/conf/RenderKeywordCase;
         5: return
      LineNumberTable:
        line 217: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0     a   Lorg/jooq/ParserCLI$Args;
            0       6     1     e   Lorg/jooq/conf/RenderKeywordCase;

  private static void lambda$main$0(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=4, args_size=1
         0: new           #36                 // class org/jooq/conf/Settings
         3: dup
         4: invokespecial #1015               // Method org/jooq/conf/Settings."<init>":()V
         7: astore_2
         8: aload_0
         9: invokestatic  #1016               // Method parse:([Ljava/lang/String;)Lorg/jooq/ParserCLI$Args;
        12: astore_1
        13: aload_1
        14: aload_2
        15: invokestatic  #550                // Method settings:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/Settings;)V
        18: aload_1
        19: aload_2
        20: invokestatic  #553                // Method ctx:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/Settings;)Lorg/jooq/DSLContext;
        23: astore_3
        24: aload_1
        25: getfield      #805                // Field org/jooq/ParserCLI$Args.interactive:Z
        28: ifne          40
        31: aload_0
        32: ifnull        40
        35: aload_0
        36: arraylength
        37: ifne          48
        40: aload_3
        41: aload_1
        42: invokestatic  #1019               // Method interactiveMode:(Lorg/jooq/DSLContext;Lorg/jooq/ParserCLI$Args;)V
        45: goto          94
        48: aload_1
        49: getfield      #816                // Field org/jooq/ParserCLI$Args.done:Z
        52: ifeq          58
        55: goto          94
        58: aload_1
        59: getfield      #19                 // Field org/jooq/ParserCLI$Args.toDialect:Lorg/jooq/SQLDialect;
        62: ifnull        72
        65: aload_1
        66: getfield      #286                // Field org/jooq/ParserCLI$Args.sql:Ljava/lang/String;
        69: ifnonnull     89
        72: getstatic     #256                // Field java/lang/System.out:Ljava/io/PrintStream;
        75: ldc_w         #1022               // String Mandatory arguments: -T and -s. Use -h for help
        78: invokevirtual #302                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        81: new           #820                // class java/lang/RuntimeException
        84: dup
        85: invokespecial #822                // Method java/lang/RuntimeException."<init>":()V
        88: athrow
        89: aload_3
        90: aload_1
        91: invokestatic  #568                // Method render:(Lorg/jooq/DSLContext;Lorg/jooq/ParserCLI$Args;)V
        94: return
      LineNumberTable:
        line 78: 0
        line 81: 8
        line 82: 13
        line 83: 18
        line 85: 24
        line 86: 40
        line 88: 48
        line 89: 58
        line 90: 72
        line 91: 81
        line 94: 89
        line 95: 94
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      95     0  args   [Ljava/lang/String;
           13      82     1     a   Lorg/jooq/ParserCLI$Args;
            8      87     2 settings   Lorg/jooq/conf/Settings;
           24      71     3   ctx   Lorg/jooq/DSLContext;
      StackMapTable: number_of_entries = 6
        frame_type = 254 /* append */
          offset_delta = 40
          locals = [ class org/jooq/ParserCLI$Args, class org/jooq/conf/Settings, class org/jooq/DSLContext ]
        frame_type = 7 /* same */
        frame_type = 9 /* same */
        frame_type = 13 /* same */
        frame_type = 16 /* same */
        frame_type = 4 /* same */

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: ldc_w         #1024               // String ^/([\\w\\-]+)(?:\\s+([^\\r\\n]+))?\\s*$
         3: invokestatic  #1026               // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
         6: putstatic     #322                // Field FLAG:Ljava/util/regex/Pattern;
         9: return
      LineNumberTable:
        line 73: 0
}
SourceFile: "ParserCLI.java"
NestMembers:
  org/jooq/ParserCLI$Args
BootstrapMethods:
  0: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1141 ()V
      #1142 REF_invokeStatic org/jooq/ParserCLI.lambda$main$0:([Ljava/lang/String;)V
      #1141 ()V
  1: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1145 (Ljava/lang/Object;)V
      #1146 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$1:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderKeywordCase;)V
      #1149 (Lorg/jooq/conf/RenderKeywordCase;)V
  2: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1141 ()V
      #1150 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$2:(Lorg/jooq/ParserCLI$Args;)V
      #1141 ()V
  3: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1145 (Ljava/lang/Object;)V
      #1153 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$3:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderNameCase;)V
      #1156 (Lorg/jooq/conf/RenderNameCase;)V
  4: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1141 ()V
      #1157 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$4:(Lorg/jooq/ParserCLI$Args;)V
      #1141 ()V
  5: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1145 (Ljava/lang/Object;)V
      #1160 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$5:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderQuotedNames;)V
      #1163 (Lorg/jooq/conf/RenderQuotedNames;)V
  6: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1141 ()V
      #1164 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$6:(Lorg/jooq/ParserCLI$Args;)V
      #1141 ()V
  7: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1145 (Ljava/lang/Object;)V
      #1167 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$7:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/SQLDialect;)V
      #1170 (Lorg/jooq/SQLDialect;)V
  8: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1141 ()V
      #1171 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$8:(Lorg/jooq/ParserCLI$Args;)V
      #1141 ()V
  9: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1145 (Ljava/lang/Object;)V
      #1174 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$9:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/ParseNameCase;)V
      #1177 (Lorg/jooq/conf/ParseNameCase;)V
  10: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1141 ()V
      #1178 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$10:(Lorg/jooq/ParserCLI$Args;)V
      #1141 ()V
  11: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1145 (Ljava/lang/Object;)V
      #1181 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$11:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/ParseUnknownFunctions;)V
      #1184 (Lorg/jooq/conf/ParseUnknownFunctions;)V
  12: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1141 ()V
      #1185 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$12:(Lorg/jooq/ParserCLI$Args;)V
      #1141 ()V
  13: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1145 (Ljava/lang/Object;)V
      #1188 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$13:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/ParseUnsupportedSyntax;)V
      #1191 (Lorg/jooq/conf/ParseUnsupportedSyntax;)V
  14: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1141 ()V
      #1193 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$14:(Lorg/jooq/ParserCLI$Args;)V
      #1141 ()V
  15: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1145 (Ljava/lang/Object;)V
      #1196 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$15:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderOptionalKeyword;)V
      #1199 (Lorg/jooq/conf/RenderOptionalKeyword;)V
  16: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1141 ()V
      #1200 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$16:(Lorg/jooq/ParserCLI$Args;)V
      #1141 ()V
  17: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1145 (Ljava/lang/Object;)V
      #1203 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$17:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderOptionalKeyword;)V
      #1199 (Lorg/jooq/conf/RenderOptionalKeyword;)V
  18: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1141 ()V
      #1206 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$18:(Lorg/jooq/ParserCLI$Args;)V
      #1141 ()V
  19: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1145 (Ljava/lang/Object;)V
      #1209 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$19:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderOptionalKeyword;)V
      #1199 (Lorg/jooq/conf/RenderOptionalKeyword;)V
  20: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1141 ()V
      #1212 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$20:(Lorg/jooq/ParserCLI$Args;)V
      #1141 ()V
  21: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1145 (Ljava/lang/Object;)V
      #1215 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$21:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/RenderOptionalKeyword;)V
      #1199 (Lorg/jooq/conf/RenderOptionalKeyword;)V
  22: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1141 ()V
      #1218 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$22:(Lorg/jooq/ParserCLI$Args;)V
      #1141 ()V
  23: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1145 (Ljava/lang/Object;)V
      #1221 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$23:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/Transformation;)V
      #1224 (Lorg/jooq/conf/Transformation;)V
  24: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1141 ()V
      #1225 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$24:(Lorg/jooq/ParserCLI$Args;)V
      #1141 ()V
  25: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1145 (Ljava/lang/Object;)V
      #1228 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$25:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/Transformation;)V
      #1224 (Lorg/jooq/conf/Transformation;)V
  26: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1141 ()V
      #1231 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$26:(Lorg/jooq/ParserCLI$Args;)V
      #1141 ()V
  27: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1145 (Ljava/lang/Object;)V
      #1234 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$27:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/conf/TransformUnneededArithmeticExpressions;)V
      #1237 (Lorg/jooq/conf/TransformUnneededArithmeticExpressions;)V
  28: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1141 ()V
      #1238 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$28:(Lorg/jooq/ParserCLI$Args;)V
      #1141 ()V
  29: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1145 (Ljava/lang/Object;)V
      #1241 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$29:(Lorg/jooq/ParserCLI$Args;Lorg/jooq/SQLDialect;)V
      #1170 (Lorg/jooq/SQLDialect;)V
  30: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1141 ()V
      #1244 REF_invokeStatic org/jooq/ParserCLI.lambda$interactiveMode$30:(Lorg/jooq/ParserCLI$Args;)V
      #1141 ()V
  31: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1253 Unrecognised command: \u0001
  32: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1255 \u0001\n\u0001
  33: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1257 Schema                             : \u0001
  34: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1259 Identifiers                        : \u0001
  35: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1261 Quoted                             : \u0001
  36: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1263 Keywords                           : \u0001
  37: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1265 To dialect                         : \u0001
  38: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1267 From dialect                       : \u0001
  39: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1269 Formatted                          : \u0001
  40: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1271 Parse date format                  : \u0001
  41: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1273 Parse ignore comments              : \u0001
  42: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1275 Parse ignore comment start         : \u0001
  43: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1277 Parse ignore comment stop          : \u0001
  44: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1279 Parse locale                       : \u0001
  45: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1281 Parse name case                    : \u0001
  46: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1283 Parse named param prefix           : \u0001
  47: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1285 Retain comments between queries    : \u0001
  48: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1287 Parse set commands                 : \u0001
  49: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1289 Parse timestamp format             : \u0001
  50: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1291 Parse unknown functions            : \u0001
  51: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1293 Parse unsupported syntax           : \u0001
  52: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1295 Render COALESCE(X, \'\') in CONCAT   : \u0001
  53: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1297 Render INNER keyword in INNER JOIN : \u0001
  54: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1299 Render OUTER keyword in OUTER JOIN : \u0001
  55: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1301 Render AS keyword to alias fields  :\u0001
  56: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1303 Render AS keyword to alias tables  :\u0001
  57: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1305 Transform patterns                 : \u0001
  58: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1307 Transform ANSI join to table lists : \u0001
  59: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1309 Transform QUALIFY                  : \u0001
  60: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1311 Transform ROWNUM                   : \u0001
  61: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1313 Transform table lists to ANSI join : \u0001
  62: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1315 Transform unneeded arithmetic      : \u0001
  63: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1317 ()Lorg/jooq/Meta;
      #1319 REF_invokeStatic org/jooq/ParserCLI.lambda$render$31:(Lorg/jooq/DSLContext;Lorg/jooq/ParserCLI$Args;)Lorg/jooq/Meta;
      #1317 ()Lorg/jooq/Meta;
  64: #1134 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1322 (Ljava/lang/Object;)Ljava/lang/Object;
      #1324 REF_invokeStatic org/jooq/ParserCLI.lambda$render$32:(Lorg/jooq/conf/Settings;)Lorg/jooq/conf/Settings;
      #1327 (Lorg/jooq/conf/Settings;)Lorg/jooq/conf/Settings;
  65: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1328 Unknown flag: \u0001. Use -h or --help
  66: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1330 Flag \u0001 requires <\u0001> argument
  67: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1332 Invalid \u0001: \u0001
  68: #1247 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1334   \u0001
InnerClasses:
  public static final #1337= #20 of #240; // Args=class org/jooq/ParserCLI$Args of class org/jooq/ParserCLI
  public static final #1342= #1338 of #1340; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
